000000e0: program
000000df: sub _start()
00000002: 
00000007: goto %00000004
00000003: 
00000006: goto %000000db
00000004: 
00000008: v22 := 0
00000009: i19 := 0
0000000a: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
00000005: when (0xF & RBX) <> 0 interrupt 0xD return %00000003
00000014: when (0x80 & v20) = 0x80 goto %0000000b
00000013: goto %0000000c
0000000b: 
00000012: v21 := 0
00000011: goto %0000000d
0000000c: 
0000000f: v23 := pad:8[extract:4:0[v20]]
00000010: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
0000000e: goto %0000000d
0000000d: 
00000015: v22 := v22 | v21 << i19 * 8
00000016: i19 := 1
00000017: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
00000021: when (0x80 & v20) = 0x80 goto %00000018
00000020: goto %00000019
00000018: 
0000001f: v21 := 0
0000001e: goto %0000001a
00000019: 
0000001c: v23 := pad:8[extract:4:0[v20]]
0000001d: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
0000001b: goto %0000001a
0000001a: 
00000022: v22 := v22 | v21 << i19 * 8
00000023: i19 := 2
00000024: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
0000002e: when (0x80 & v20) = 0x80 goto %00000025
0000002d: goto %00000026
00000025: 
0000002c: v21 := 0
0000002b: goto %00000027
00000026: 
00000029: v23 := pad:8[extract:4:0[v20]]
0000002a: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
00000028: goto %00000027
00000027: 
0000002f: v22 := v22 | v21 << i19 * 8
00000030: i19 := 3
00000031: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
0000003b: when (0x80 & v20) = 0x80 goto %00000032
0000003a: goto %00000033
00000032: 
00000039: v21 := 0
00000038: goto %00000034
00000033: 
00000036: v23 := pad:8[extract:4:0[v20]]
00000037: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
00000035: goto %00000034
00000034: 
0000003c: v22 := v22 | v21 << i19 * 8
0000003d: i19 := 4
0000003e: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
00000048: when (0x80 & v20) = 0x80 goto %0000003f
00000047: goto %00000040
0000003f: 
00000046: v21 := 0
00000045: goto %00000041
00000040: 
00000043: v23 := pad:8[extract:4:0[v20]]
00000044: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
00000042: goto %00000041
00000041: 
00000049: v22 := v22 | v21 << i19 * 8
0000004a: i19 := 5
0000004b: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
00000055: when (0x80 & v20) = 0x80 goto %0000004c
00000054: goto %0000004d
0000004c: 
00000053: v21 := 0
00000052: goto %0000004e
0000004d: 
00000050: v23 := pad:8[extract:4:0[v20]]
00000051: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
0000004f: goto %0000004e
0000004e: 
00000056: v22 := v22 | v21 << i19 * 8
00000057: i19 := 6
00000058: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
00000062: when (0x80 & v20) = 0x80 goto %00000059
00000061: goto %0000005a
00000059: 
00000060: v21 := 0
0000005f: goto %0000005b
0000005a: 
0000005d: v23 := pad:8[extract:4:0[v20]]
0000005e: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
0000005c: goto %0000005b
0000005b: 
00000063: v22 := v22 | v21 << i19 * 8
00000064: i19 := 7
00000065: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
0000006f: when (0x80 & v20) = 0x80 goto %00000066
0000006e: goto %00000067
00000066: 
0000006d: v21 := 0
0000006c: goto %00000068
00000067: 
0000006a: v23 := pad:8[extract:4:0[v20]]
0000006b: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
00000069: goto %00000068
00000068: 
00000070: v22 := v22 | v21 << i19 * 8
00000071: i19 := 8
00000072: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
0000007c: when (0x80 & v20) = 0x80 goto %00000073
0000007b: goto %00000074
00000073: 
0000007a: v21 := 0
00000079: goto %00000075
00000074: 
00000077: v23 := pad:8[extract:4:0[v20]]
00000078: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
00000076: goto %00000075
00000075: 
0000007d: v22 := v22 | v21 << i19 * 8
0000007e: i19 := 9
0000007f: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
00000089: when (0x80 & v20) = 0x80 goto %00000080
00000088: goto %00000081
00000080: 
00000087: v21 := 0
00000086: goto %00000082
00000081: 
00000084: v23 := pad:8[extract:4:0[v20]]
00000085: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
00000083: goto %00000082
00000082: 
0000008a: v22 := v22 | v21 << i19 * 8
0000008b: i19 := 0xA
0000008c: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
00000096: when (0x80 & v20) = 0x80 goto %0000008d
00000095: goto %0000008e
0000008d: 
00000094: v21 := 0
00000093: goto %0000008f
0000008e: 
00000091: v23 := pad:8[extract:4:0[v20]]
00000092: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
00000090: goto %0000008f
0000008f: 
00000097: v22 := v22 | v21 << i19 * 8
00000098: i19 := 0xB
00000099: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
000000a3: when (0x80 & v20) = 0x80 goto %0000009a
000000a2: goto %0000009b
0000009a: 
000000a1: v21 := 0
000000a0: goto %0000009c
0000009b: 
0000009e: v23 := pad:8[extract:4:0[v20]]
0000009f: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
0000009d: goto %0000009c
0000009c: 
000000a4: v22 := v22 | v21 << i19 * 8
000000a5: i19 := 0xC
000000a6: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
000000b0: when (0x80 & v20) = 0x80 goto %000000a7
000000af: goto %000000a8
000000a7: 
000000ae: v21 := 0
000000ad: goto %000000a9
000000a8: 
000000ab: v23 := pad:8[extract:4:0[v20]]
000000ac: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
000000aa: goto %000000a9
000000a9: 
000000b1: v22 := v22 | v21 << i19 * 8
000000b2: i19 := 0xD
000000b3: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
000000bd: when (0x80 & v20) = 0x80 goto %000000b4
000000bc: goto %000000b5
000000b4: 
000000bb: v21 := 0
000000ba: goto %000000b6
000000b5: 
000000b8: v23 := pad:8[extract:4:0[v20]]
000000b9: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
000000b7: goto %000000b6
000000b6: 
000000be: v22 := v22 | v21 << i19 * 8
000000bf: i19 := 0xE
000000c0: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
000000ca: when (0x80 & v20) = 0x80 goto %000000c1
000000c9: goto %000000c2
000000c1: 
000000c8: v21 := 0
000000c7: goto %000000c3
000000c2: 
000000c5: v23 := pad:8[extract:4:0[v20]]
000000c6: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
000000c4: goto %000000c3
000000c3: 
000000cb: v22 := v22 | v21 << i19 * 8
000000cc: i19 := 0xF
000000cd: v20 := extract:7:0[mem[RBX, el]:u128 >> i19 * 8]
000000d7: when (0x80 & v20) = 0x80 goto %000000ce
000000d6: goto %000000cf
000000ce: 
000000d5: v21 := 0
000000d4: goto %000000d0
000000cf: 
000000d2: v23 := pad:8[extract:4:0[v20]]
000000d3: v21 := pad:128[extract:7:0[low:128[YMM1] >> v23 * 8]]
000000d1: goto %000000d0
000000d0: 
000000d8: v22 := v22 | v21 << i19 * 8
000000da: goto %000000db
000000db: 
000000dc: v17 := mem[RSP, el]:u64
000000dd: RSP := RSP + 8
000000de: return v17
