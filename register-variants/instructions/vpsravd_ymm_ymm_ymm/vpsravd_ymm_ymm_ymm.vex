WARNING | 2018-04-08 20:50:24,483 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:24,501 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:24,557 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsravd_ymm_ymm_ymm/vpsravd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I32 t16:Ity_V128 t17:Ity_V128 t18:Ity_I64 t19:Ity_I64 t20:Ity_I32 t21:Ity_I32 t22:Ity_I32 t23:Ity_I32 t24:Ity_I64 t25:Ity_I64 t26:Ity_I32 t27:Ity_I32 t28:Ity_I32 t29:Ity_I32 t30:Ity_I32 t31:Ity_I8 t32:Ity_I32 t33:Ity_I1 t34:Ity_I32 t35:Ity_I32 t36:Ity_I8 t37:Ity_I32 t38:Ity_I1 t39:Ity_I32 t40:Ity_I32 t41:Ity_I8 t42:Ity_I32 t43:Ity_I1 t44:Ity_I32 t45:Ity_I32 t46:Ity_I8 t47:Ity_I32 t48:Ity_I1 t49:Ity_I32 t50:Ity_I32 t51:Ity_I8 t52:Ity_I32 t53:Ity_I1 t54:Ity_I32 t55:Ity_I32 t56:Ity_I8 t57:Ity_I32 t58:Ity_I1 t59:Ity_I32 t60:Ity_I32 t61:Ity_I8 t62:Ity_I32 t63:Ity_I1 t64:Ity_I32 t65:Ity_I32 t66:Ity_I8 t67:Ity_I32 t68:Ity_I1 t69:Ity_I32 t70:Ity_I64 t71:Ity_I64 t72:Ity_I64 t73:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V128HIto64(t2)
   06 | t5 = V128to64(t2)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 64to32(t4)
   10 | t9 = 64HIto32(t4)
   11 | t10 = V128HIto64(t3)
   12 | t11 = V128to64(t3)
   13 | t12 = 64to32(t11)
   14 | t13 = 64HIto32(t11)
   15 | t14 = 64to32(t10)
   16 | t15 = 64HIto32(t10)
   17 | t16 = V256toV128_1(t0)
   18 | t17 = V256toV128_0(t0)
   19 | t18 = V128HIto64(t16)
   20 | t19 = V128to64(t16)
   21 | t20 = 64to32(t19)
   22 | t21 = 64HIto32(t19)
   23 | t22 = 64to32(t18)
   24 | t23 = 64HIto32(t18)
   25 | t24 = V128HIto64(t17)
   26 | t25 = V128to64(t17)
   27 | t26 = 64to32(t25)
   28 | t27 = 64HIto32(t25)
   29 | t28 = 64to32(t24)
   30 | t29 = 64HIto32(t24)
   31 | t30 = Sar32(t12,0x1f)
   32 | t31 = 32to8(t26)
   33 | t32 = Sar32(t12,t31)
   34 | t33 = CmpLT32U(t26,0x00000020)
   35 | t34 = ITE(t33,t32,t30)
   36 | t35 = Sar32(t13,0x1f)
   37 | t36 = 32to8(t27)
   38 | t37 = Sar32(t13,t36)
   39 | t38 = CmpLT32U(t27,0x00000020)
   40 | t39 = ITE(t38,t37,t35)
   41 | t40 = Sar32(t14,0x1f)
   42 | t41 = 32to8(t28)
   43 | t42 = Sar32(t14,t41)
   44 | t43 = CmpLT32U(t28,0x00000020)
   45 | t44 = ITE(t43,t42,t40)
   46 | t45 = Sar32(t15,0x1f)
   47 | t46 = 32to8(t29)
   48 | t47 = Sar32(t15,t46)
   49 | t48 = CmpLT32U(t29,0x00000020)
   50 | t49 = ITE(t48,t47,t45)
   51 | t50 = Sar32(t6,0x1f)
   52 | t51 = 32to8(t20)
   53 | t52 = Sar32(t6,t51)
   54 | t53 = CmpLT32U(t20,0x00000020)
   55 | t54 = ITE(t53,t52,t50)
   56 | t55 = Sar32(t7,0x1f)
   57 | t56 = 32to8(t21)
   58 | t57 = Sar32(t7,t56)
   59 | t58 = CmpLT32U(t21,0x00000020)
   60 | t59 = ITE(t58,t57,t55)
   61 | t60 = Sar32(t8,0x1f)
   62 | t61 = 32to8(t22)
   63 | t62 = Sar32(t8,t61)
   64 | t63 = CmpLT32U(t22,0x00000020)
   65 | t64 = ITE(t63,t62,t60)
   66 | t65 = Sar32(t9,0x1f)
   67 | t66 = 32to8(t23)
   68 | t67 = Sar32(t9,t66)
   69 | t68 = CmpLT32U(t23,0x00000020)
   70 | t69 = ITE(t68,t67,t65)
   71 | PUT(ymm1) = t34
   72 | PUT(260) = t39
   73 | PUT(264) = t44
   74 | PUT(268) = t49
   75 | PUT(272) = t54
   76 | PUT(276) = t59
   77 | PUT(280) = t64
   78 | PUT(284) = t69
   79 | PUT(pc) = 0x0000000000400005
   80 | ------ IMark(0x400005, 1, 0) ------
   81 | t70 = GET:I64(rsp)
   82 | t71 = LDle:I64(t70)
   83 | t72 = Add64(t70,0x0000000000000008)
   84 | PUT(rsp) = t72
   85 | t73 = Sub64(t72,0x0000000000000080)
   86 | ====== AbiHint(0xt73, 128, t71) ======
   NEXT: PUT(rip) = t71; Ijk_Ret
}
