WARNING | 2018-04-08 20:49:00,159 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:00,193 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:00,232 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub213pd_ymm_ymm_ymm/vfmsub213pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_I64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_F64 t21:Ity_F64 t22:Ity_I64 t23:Ity_F64 t24:Ity_I64 t25:Ity_F64 t26:Ity_F64 t27:Ity_I64 t28:Ity_F64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_I64 t33:Ity_F64 t34:Ity_F64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64 t38:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V256to64_0(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V256to64_0(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V256to64_1(t2)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = NegF64(t12)
   16 | t14 = V256to64_1(t0)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = V256to64_1(t1)
   19 | t17 = ReinterpI64asF64(t16)
   20 | t18 = MAddF64(0x00000000,t17,t15,t13)
   21 | PUT(264) = t18
   22 | t19 = V256to64_2(t2)
   23 | t20 = ReinterpI64asF64(t19)
   24 | t21 = NegF64(t20)
   25 | t22 = V256to64_2(t0)
   26 | t23 = ReinterpI64asF64(t22)
   27 | t24 = V256to64_2(t1)
   28 | t25 = ReinterpI64asF64(t24)
   29 | t26 = MAddF64(0x00000000,t25,t23,t21)
   30 | PUT(272) = t26
   31 | t27 = V256to64_3(t2)
   32 | t28 = ReinterpI64asF64(t27)
   33 | t29 = NegF64(t28)
   34 | t30 = V256to64_3(t0)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = V256to64_3(t1)
   37 | t33 = ReinterpI64asF64(t32)
   38 | t34 = MAddF64(0x00000000,t33,t31,t29)
   39 | PUT(280) = t34
   40 | PUT(pc) = 0x0000000000400005
   41 | ------ IMark(0x400005, 1, 0) ------
   42 | t35 = GET:I64(rsp)
   43 | t36 = LDle:I64(t35)
   44 | t37 = Add64(t35,0x0000000000000008)
   45 | PUT(rsp) = t37
   46 | t38 = Sub64(t37,0x0000000000000080)
   47 | ====== AbiHint(0xt38, 128, t36) ======
   NEXT: PUT(rip) = t36; Ijk_Ret
}
