WARNING | 2018-04-08 20:50:18,994 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:19,053 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:19,081 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsadbw_ymm_ymm_ymm/vpsadbw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_V128 t20:Ity_V256 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = V128to64(t5)
   08 | t7 = V128HIto64(t5)
   09 | t8 = V128to64(t3)
   10 | t9 = V128HIto64(t3)
   11 | t10 = amd64g_calculate_mmx_psadbw(t6,t8):Ity_I64
   12 | t11 = amd64g_calculate_mmx_psadbw(t7,t9):Ity_I64
   13 | t12 = 64HLtoV128(t11,t10)
   14 | t13 = V128to64(t4)
   15 | t14 = V128HIto64(t4)
   16 | t15 = V128to64(t2)
   17 | t16 = V128HIto64(t2)
   18 | t17 = amd64g_calculate_mmx_psadbw(t13,t15):Ity_I64
   19 | t18 = amd64g_calculate_mmx_psadbw(t14,t16):Ity_I64
   20 | t19 = 64HLtoV128(t18,t17)
   21 | t20 = V128HLtoV256(t19,t12)
   22 | PUT(ymm1) = t20
   23 | PUT(pc) = 0x0000000000400004
   24 | ------ IMark(0x400004, 1, 0) ------
   25 | t21 = GET:I64(rsp)
   26 | t22 = LDle:I64(t21)
   27 | t23 = Add64(t21,0x0000000000000008)
   28 | PUT(rsp) = t23
   29 | t24 = Sub64(t23,0x0000000000000080)
   30 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
