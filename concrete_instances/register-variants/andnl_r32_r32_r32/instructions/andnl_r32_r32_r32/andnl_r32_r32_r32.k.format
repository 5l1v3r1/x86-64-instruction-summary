code: andnl %edx, %ecx, %ebx

  maybe read:      { %ecx %edx }
  must read:       { %ecx %edx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : concatenateMInt( mi(32, 0), andMInt( negMInt( extractMInt( %rcx, 32, 64)), extractMInt( %rdx, 32, 64)))

%cf    : mi(1, 0)
%pf    : (#ifMInt TMP_BOOL_1 #then mi(1, 1) #else mi(1, 0) #fi)
%af    : (#ifMInt TMP_BOOL_0 #then mi(1, 1) #else mi(1, 0) #fi)
%zf    : (#ifMInt eqMInt( andMInt( negMInt( extractMInt( %rcx, 32, 64)), extractMInt( %rdx, 32, 64)), mi(32, 0)) #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : andMInt( negMInt( extractMInt( %rcx, 32, 33)), extractMInt( %rdx, 32, 33))
%of    : mi(1, 0)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
