WARNING | 2018-04-08 20:49:06,705 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:06,725 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:06,774 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd213ps_ymm_ymm_ymm/vfmsubadd213ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_F32 t22:Ity_I32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_F32 t37:Ity_I32 t38:Ity_F32 t39:Ity_F32 t40:Ity_I32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_I32 t50:Ity_F32 t51:Ity_F32 t52:Ity_I32 t53:Ity_F32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_I32 t63:Ity_F32 t64:Ity_I32 t65:Ity_F32 t66:Ity_F32 t67:Ity_I32 t68:Ity_F32 t69:Ity_F32 t70:Ity_I32 t71:Ity_F32 t72:Ity_I32 t73:Ity_F32 t74:Ity_F32 t75:Ity_I64 t76:Ity_I64 t77:Ity_I64 t78:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t0)
   06 | t5 = V256to64_0(t2)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t0)
   09 | t8 = V256to64_1(t2)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t0)
   12 | t11 = V256to64_2(t2)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t0)
   15 | t14 = V256to64_3(t2)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = 64to32(t4)
   19 | t18 = ReinterpI32asF32(t17)
   20 | t19 = 64to32(t3)
   21 | t20 = ReinterpI32asF32(t19)
   22 | t21 = MAddF32(0x00000000,t20,t18,t16)
   23 | PUT(ymm1) = t21
   24 | t22 = 64HIto32(t5)
   25 | t23 = ReinterpI32asF32(t22)
   26 | t24 = NegF32(t23)
   27 | t25 = 64HIto32(t4)
   28 | t26 = ReinterpI32asF32(t25)
   29 | t27 = 64HIto32(t3)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = MAddF32(0x00000000,t28,t26,t24)
   32 | PUT(260) = t29
   33 | t30 = 64to32(t8)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = 64to32(t7)
   36 | t33 = ReinterpI32asF32(t32)
   37 | t34 = 64to32(t6)
   38 | t35 = ReinterpI32asF32(t34)
   39 | t36 = MAddF32(0x00000000,t35,t33,t31)
   40 | PUT(264) = t36
   41 | t37 = 64HIto32(t8)
   42 | t38 = ReinterpI32asF32(t37)
   43 | t39 = NegF32(t38)
   44 | t40 = 64HIto32(t7)
   45 | t41 = ReinterpI32asF32(t40)
   46 | t42 = 64HIto32(t6)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = MAddF32(0x00000000,t43,t41,t39)
   49 | PUT(268) = t44
   50 | t45 = 64to32(t11)
   51 | t46 = ReinterpI32asF32(t45)
   52 | t47 = 64to32(t10)
   53 | t48 = ReinterpI32asF32(t47)
   54 | t49 = 64to32(t9)
   55 | t50 = ReinterpI32asF32(t49)
   56 | t51 = MAddF32(0x00000000,t50,t48,t46)
   57 | PUT(272) = t51
   58 | t52 = 64HIto32(t11)
   59 | t53 = ReinterpI32asF32(t52)
   60 | t54 = NegF32(t53)
   61 | t55 = 64HIto32(t10)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = 64HIto32(t9)
   64 | t58 = ReinterpI32asF32(t57)
   65 | t59 = MAddF32(0x00000000,t58,t56,t54)
   66 | PUT(276) = t59
   67 | t60 = 64to32(t14)
   68 | t61 = ReinterpI32asF32(t60)
   69 | t62 = 64to32(t13)
   70 | t63 = ReinterpI32asF32(t62)
   71 | t64 = 64to32(t12)
   72 | t65 = ReinterpI32asF32(t64)
   73 | t66 = MAddF32(0x00000000,t65,t63,t61)
   74 | PUT(280) = t66
   75 | t67 = 64HIto32(t14)
   76 | t68 = ReinterpI32asF32(t67)
   77 | t69 = NegF32(t68)
   78 | t70 = 64HIto32(t13)
   79 | t71 = ReinterpI32asF32(t70)
   80 | t72 = 64HIto32(t12)
   81 | t73 = ReinterpI32asF32(t72)
   82 | t74 = MAddF32(0x00000000,t73,t71,t69)
   83 | PUT(284) = t74
   84 | PUT(pc) = 0x0000000000400005
   85 | ------ IMark(0x400005, 1, 0) ------
   86 | t75 = GET:I64(rsp)
   87 | t76 = LDle:I64(t75)
   88 | t77 = Add64(t75,0x0000000000000008)
   89 | PUT(rsp) = t77
   90 | t78 = Sub64(t77,0x0000000000000080)
   91 | ====== AbiHint(0xt78, 128, t76) ======
   NEXT: PUT(rip) = t76; Ijk_Ret
}
