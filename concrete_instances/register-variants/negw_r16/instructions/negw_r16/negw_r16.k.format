code: negw %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %pf %af %zf %sf %of }
  must write:      { %bx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : concatenateMInt( extractMInt( %rbx, 0, 48), addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))))

%cf    : (#ifMInt (notBool eqMInt( extractMInt( %rbx, 48, 64), mi(16, 0))) #then mi(1, 1) #else mi(1, 0) #fi)
%pf    : (#ifMInt (notBool (((((((eqMInt( extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 15, 16), mi(1, 1)) xorBool eqMInt( extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 14, 15), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 13, 14), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 12, 13), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 11, 12), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 10, 11), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 9, 10), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 8, 9), mi(1, 1)))) #then mi(1, 1) #else mi(1, 0) #fi)
%af    : (#ifMInt (eqMInt( extractMInt( %rbx, 60, 61), mi(1, 1)) andBool eqMInt( extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 12, 13), mi(1, 1))) #then mi(1, 1) #else mi(1, 0) #fi)
%zf    : (#ifMInt eqMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), mi(16, 0)) #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 0, 1)
%of    : (#ifMInt (eqMInt( extractMInt( %rbx, 48, 49), mi(1, 1)) andBool eqMInt( extractMInt( addMInt(mi(16, 1), negMInt( extractMInt( %rbx, 48, 64))), 0, 1), mi(1, 1))) #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
