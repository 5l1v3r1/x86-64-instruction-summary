code: shlxq %rdx, %rcx, %rbx

  maybe read:      { %rcx %rdx }
  must read:       { %rcx %rdx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { bmi2 }

shlxq %rdx, %rcx, %rbx: Hindex8(9)
shlxq %rdx, %rcx, %rbx: Hindex8(9)
callq .move_064_032_rcx_r10d_r11d: Hindex8(9)
callq .move_064_032_rdx_r8d_r9d: Hindex8(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .move_032_064_r8d_r9d_rcx: Hindex8(9)
salq %cl, %rbx: Hindex7(9)
Formula:

%rbx   : (let ((a!1 (bvshl (concat #b0 %rcx)
                  (concat #b000000000000000000000000000000000000000000000000000000000
                          (bvand ((_ extract 7 0) %rdx) #x3f)))))
  ((_ extract 63 0) a!1))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
