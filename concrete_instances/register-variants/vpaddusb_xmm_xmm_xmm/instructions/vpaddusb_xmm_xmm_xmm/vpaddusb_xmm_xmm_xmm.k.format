code: vpaddusb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 128, 136)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 128, 136))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 128, 136)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 128, 136))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 136, 144)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 136, 144))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 136, 144)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 136, 144))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 144, 152)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 144, 152))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 144, 152)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 144, 152))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 152, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 152, 160))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 152, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 152, 160))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 160, 168)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 160, 168))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 160, 168)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 160, 168))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 168, 176)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 168, 176))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 168, 176)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 168, 176))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 176, 184)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 176, 184))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 176, 184)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 176, 184))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 184, 192)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 184, 192))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 184, 192)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 184, 192))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 192, 200)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 192, 200))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 192, 200)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 192, 200))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 200, 208)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 200, 208))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 200, 208)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 200, 208))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 208, 216)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 208, 216))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 208, 216)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 208, 216))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 216, 224)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 216, 224))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 216, 224)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 216, 224))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 224, 232)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 224, 232))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 224, 232)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 224, 232))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 232, 240)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 232, 240))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 232, 240)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 232, 240))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 240, 248)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 240, 248))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 240, 248)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 240, 248))), 1, 9) #fi), (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 248, 256)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 248, 256))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 248, 256)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 248, 256))), 1, 9) #fi)))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
