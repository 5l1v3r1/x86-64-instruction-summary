code: vpaddusw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 128, 144)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 128, 144))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 128, 144)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 128, 144))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 144, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 144, 160))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 144, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 144, 160))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 160, 176)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 160, 176))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 160, 176)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 160, 176))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 176, 192)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 176, 192))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 176, 192)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 176, 192))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 192, 208)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 192, 208))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 192, 208)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 192, 208))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 208, 224)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 208, 224))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 208, 224)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 208, 224))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 224, 240)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 224, 240))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 224, 240)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 224, 240))), 1, 17) #fi), (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 240, 256)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 240, 256))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 240, 256)), concatenateMInt( mi(1, 0), extractMInt( %ymm3, 240, 256))), 1, 17) #fi)))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
