code: vmovmskpd %ymm1, %rbx

  maybe read:      { %ymm1 }
  must read:       { %ymm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : concatenateMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1)), mi(33, 1)) #else concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1)) #fi), concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1))), 1, 17)), extractMInt( addMInt( concatenateMInt( mi(1, 0), concatenateMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1)), mi(33, 1)) #else concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1)) #fi), concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1))), 17, 25), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1)), mi(33, 1)) #else concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1)) #fi), concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1))), 25, 33)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1)), mi(33, 1)) #else concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1)) #fi), concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1))), 25, 33))), 1, 9)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1)), mi(33, 1)) #else concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1)) #fi), concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1))), 25, 33))), 1, 9))), concatenateMInt( mi(1, 0), concatenateMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 192, 224))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1)), mi(33, 1)) #else concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1)) #fi), concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 128, 160))), 0, 1))), 17, 25), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1)), mi(33, 1)) #else concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1)) #fi), concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1))), 25, 33)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 64, 96))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1)), mi(33, 1)) #else concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1)) #fi), concatenateMInt( mi(32, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)), mi(33, 1)) #else concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32)) #fi), concatenateMInt( mi(1, 0), extractMInt( %ymm1, 0, 32))), 0, 1))), 25, 33))), 1, 9)))), 1, 17))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
