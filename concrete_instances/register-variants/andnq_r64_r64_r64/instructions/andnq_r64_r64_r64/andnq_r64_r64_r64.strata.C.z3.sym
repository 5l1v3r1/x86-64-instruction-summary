code: andnq %rdx, %rcx, %rbx

  maybe read:      { %rcx %rdx }
  must read:       { %rcx %rdx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : (bvand (bvnot %rcx) %rdx)

%cf    : #b0
%pf    : (ite TMP_BOOL_1 #b1 #b0)
%af    : (ite TMP_BOOL_0 #b1 #b0)
%zf    : (ite (= (bvand (bvnot %rcx) %rdx) #x0000000000000000) #b1 #b0)
%sf    : (let ((a!1 (= (bvand (bvnot ((_ extract 63 63) %rcx)) ((_ extract 63 63) %rdx))
              #b1)))
  (ite a!1 #b1 #b0))
%of    : #b0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
