code: subb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %ah %cf %pf %af %zf %sf %of }
  must write:      { %ah %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : (let ((a!1 (bvadd (concat #b0 ((_ extract 15 8) %rax))
                  #b000000001
                  (concat #b0 (bvxor #xff ((_ extract 15 8) %rbx))))))
  (concat (concat ((_ extract 63 16) %rax) ((_ extract 7 0) a!1))
          ((_ extract 7 0) %rax)))

%cf    : (let ((a!1 (bvadd (concat #b0 ((_ extract 15 8) %rax))
                  #b000000001
                  (concat #b0 (bvxor #xff ((_ extract 15 8) %rbx))))))
(let ((a!2 (bvadd (ite (= ((_ extract 8 8) a!1) #b1) #b000000000 #b011111111)
                  (ite (= ((_ extract 8 8) a!1) #b1) #b000000000 #b011111111))))
  (= ((_ extract 8 8) a!2) #b1)))
%pf    : (let ((a!1 (bvadd (concat #b0 ((_ extract 15 8) %rax))
                  #b000000001
                  (concat #b0 (bvxor #xff ((_ extract 15 8) %rbx))))))
  (not (xor (= ((_ extract 0 0) a!1) #b1)
            (= ((_ extract 1 1) a!1) #b1)
            (= ((_ extract 2 2) a!1) #b1)
            (= ((_ extract 3 3) a!1) #b1)
            (= ((_ extract 4 4) a!1) #b1)
            (= ((_ extract 5 5) a!1) #b1)
            (= ((_ extract 6 6) a!1) #b1)
            (= ((_ extract 7 7) a!1) #b1))))
%af    : (let ((a!1 (bvadd (concat #b0 ((_ extract 11 8) %rax))
                  (concat #b0 (bvxor #xf ((_ extract 11 8) %rbx))))))
  (= ((_ extract 4 4) a!1) #b1))
%zf    : (let ((a!1 (bvadd (concat #b0 ((_ extract 15 8) %rax))
                  #b000000001
                  (concat #b0 (bvxor #xff ((_ extract 15 8) %rbx))))))
  (= ((_ extract 7 0) a!1) #x00))
%sf    : (let ((a!1 (bvadd (concat #b0 ((_ extract 15 8) %rax))
                  #b000000001
                  (concat #b0 (bvxor #xff ((_ extract 15 8) %rbx))))))
  (= ((_ extract 7 7) a!1) #b1))
%of    : (let ((a!1 (= (= ((_ extract 15 15) %rax) #b1)
              (= (bvxor #b1 ((_ extract 15 15) %rbx)) #b1)))
      (a!2 (bvadd (concat #b0 ((_ extract 15 8) %rax))
                  #b000000001
                  (concat #b0 (bvxor #xff ((_ extract 15 8) %rbx))))))
(let ((a!3 (not (= (= ((_ extract 15 15) %rax) #b1)
                   (= ((_ extract 7 7) a!2) #b1)))))
  (and a!1 a!3)))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
