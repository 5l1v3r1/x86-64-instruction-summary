code: blsil %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : (concat #x00000000
        (bvand (bvneg ((_ extract 31 0) %rcx)) ((_ extract 31 0) %rcx)))


%cf    : (ite (not (= ((_ extract 31 0) %rcx) #x00000000)) #b1 #b0)

%pf    : (ite TMP_BOOL_0 #b1 #b0)

%af    : (ite TMP_BOOL_1 #b1 #b0)

%zf    : (let ((a!1 (= (bvand (bvneg ((_ extract 31 0) %rcx)) ((_ extract 31 0) %rcx))
              #x00000000)))
  (ite a!1 #b1 #b0))

%sf    : (bvand ((_ extract 31 31) (bvneg ((_ extract 31 0) %rcx)))
       ((_ extract 31 31) %rcx))

%of    : #b0


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

