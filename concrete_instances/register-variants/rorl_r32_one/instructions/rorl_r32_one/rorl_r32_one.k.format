code: rorl $0x1, %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : concatenateMInt( mi(32, 0), ror( extractMInt( %rbx, 32, 64), mi(32, 1)))

%cf    : extractMInt( ror( extractMInt( %rbx, 32, 64), mi(32, 1)), 0, 1)
%of    : (#ifMInt (eqMInt( extractMInt( ror( extractMInt( %rbx, 32, 64), mi(32, 1)), 0, 1), mi(1, 1)) xorBool eqMInt( extractMInt( ror( extractMInt( %rbx, 32, 64), mi(32, 1)), 1, 2), mi(1, 1))) #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
