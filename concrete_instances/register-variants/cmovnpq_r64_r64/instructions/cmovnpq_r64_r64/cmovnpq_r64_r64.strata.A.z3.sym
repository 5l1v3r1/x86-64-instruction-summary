code: cmovnpq %rcx, %rbx

  maybe read:      { %rcx %pf }
  must read:       { %rcx %pf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : (let ((a!1 (bvadd (ite (= (ite %pf #b0 #b1) #b1) #b000000000 #b011111111)
                  (ite (= (ite %pf #b0 #b1) #b1) #b000000000 #b000000001))))
(let ((a!2 (bvadd (ite (= ((_ extract 8 8) a!1) #b1) #b000000000 #b011111111)
                  (ite (= ((_ extract 8 8) a!1) #b1) #b000000000 #b011111111))))
(let ((a!3 (ite (= ((_ extract 8 8) a!2) #b1)
                (bvadd (concat #b0 ((_ extract 15 0) %rcx)) #b00000000000000001)
                (concat #b0 ((_ extract 15 0) %rcx)))))
(let ((a!4 (bvadd a!3 (concat #b0 (bvxor ((_ extract 15 0) %rcx) #xffff)))))
  (ite (= ((_ extract 15 0) a!4) #x0000) %rcx %rbx)))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
