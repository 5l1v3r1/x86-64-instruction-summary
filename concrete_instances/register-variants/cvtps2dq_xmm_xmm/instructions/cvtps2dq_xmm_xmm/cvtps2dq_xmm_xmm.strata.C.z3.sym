code: cvtps2dq %xmm2, %xmm1

  maybe read:      { %xmm2 %mxcsr::rc[0] }
  must read:       { %xmm2 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

cvtps2dq %xmm2, %xmm1: Hindex8(9)
cvtps2dq %xmm2, %xmm1: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
vzeroall: Hindex1(9)
callq .move_064_128_r12_r13_xmm2: Hindex8(9)
vcvtps2dq %ymm2, %ymm1: Hindex0(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
Formula:

%ymm1  : (let ((a!1 (concat (cvt_single_to_int32 ((_ extract 95 64) %ymm2))
                   (concat (cvt_single_to_int32 ((_ extract 63 32) %ymm2))
                           (cvt_single_to_int32 ((_ extract 31 0) %ymm2))))))
  (concat ((_ extract 255 128) %ymm1)
          (concat (cvt_single_to_int32 ((_ extract 127 96) %ymm2)) a!1)))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
