code: vfmadd132ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : concatenateMInt( mi(128, 0), concatenateMInt( orMInt( orMInt( xorMInt( orMInt( xorMInt( extractMInt( %ymm2, 128, 192), mi(64, 0)), mi(64, 0)), xorMInt( extractMInt( %ymm2, 128, 192), mi(64, 0))), concatenateMInt( vfmsub132_single(extractMInt( %ymm1, 128, 160), vfnmsub132_single(xorMInt( orMInt( xorMInt( extractMInt( %ymm2, 128, 160), mi(32, 0)), mi(32, 0)), xorMInt( extractMInt( %ymm2, 128, 160), mi(32, 0))), extractMInt( %ymm2, 128, 160), extractMInt( %ymm2, 128, 160)), extractMInt( %ymm3, 128, 160)), vfmsub132_single(extractMInt( %ymm1, 160, 192), vfnmsub132_single(xorMInt( orMInt( xorMInt( extractMInt( %ymm2, 160, 192), mi(32, 0)), mi(32, 0)), xorMInt( extractMInt( %ymm2, 160, 192), mi(32, 0))), extractMInt( %ymm2, 160, 192), extractMInt( %ymm2, 160, 192)), extractMInt( %ymm3, 160, 192)))), mi(64, 0)), orMInt( orMInt( xorMInt( orMInt( xorMInt( extractMInt( %ymm2, 192, 256), mi(64, 0)), mi(64, 0)), xorMInt( extractMInt( %ymm2, 192, 256), mi(64, 0))), concatenateMInt( vfmsub132_single(extractMInt( %ymm1, 192, 224), vfnmsub132_single(xorMInt( orMInt( xorMInt( extractMInt( %ymm2, 192, 224), mi(32, 0)), mi(32, 0)), xorMInt( extractMInt( %ymm2, 192, 224), mi(32, 0))), extractMInt( %ymm2, 192, 224), extractMInt( %ymm2, 192, 224)), extractMInt( %ymm3, 192, 224)), vfmsub132_single(extractMInt( %ymm1, 224, 256), vfnmsub132_single(xorMInt( orMInt( xorMInt( extractMInt( %ymm2, 224, 256), mi(32, 0)), mi(32, 0)), xorMInt( extractMInt( %ymm2, 224, 256), mi(32, 0))), extractMInt( %ymm2, 224, 256), extractMInt( %ymm2, 224, 256)), extractMInt( %ymm3, 224, 256)))), mi(64, 0))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
