code: rorb $0x1, %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %cf %of }
  must write:      { %bl %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : (concat ((_ extract 63 8) %rbx) (ext_rotate_right ((_ extract 7 0) %rbx) #x01))


%cf    : (let ((a!1 (= ((_ extract 7 7) (ext_rotate_right ((_ extract 7 0) %rbx) #x01))
              #b1)))
  (ite (or (and true a!1) (and false %cf)) #b1 #b0))

%of    : (let ((a!1 (= ((_ extract 7 7) (ext_rotate_right ((_ extract 7 0) %rbx) #x01))
              #b1))
      (a!2 (= ((_ extract 6 6) (ext_rotate_right ((_ extract 7 0) %rbx) #x01))
              #b1)))
  (ite (or (and true (xor a!1 a!2)) (and false TMP_BOOL_0)) #b1 #b0))


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

