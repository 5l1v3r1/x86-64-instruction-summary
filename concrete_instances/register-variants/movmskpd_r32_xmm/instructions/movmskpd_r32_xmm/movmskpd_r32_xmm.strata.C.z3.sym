code: movmskpd %xmm1, %ebx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

movmskpd %xmm1, %ebx: Hindex8(9)
movmskpd %xmm1, %ebx: Hindex8(9)
callq .move_128_032_xmm1_eax_edx_r8d_r9d: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
callq .read_cf_into_rbx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %r8d, %rbx: Hindex5(9)
Formula:

%rbx   : (let ((a!1 ((_ extract 32 32)
             (bvadd (concat #b0 ((_ extract 63 32) %ymm1))
                    (concat #b0 ((_ extract 63 32) %ymm1)))))
      (a!4 ((_ extract 32 32)
             (bvadd (concat #b0 ((_ extract 127 96) %ymm1))
                    (concat #b0 ((_ extract 127 96) %ymm1))))))
(let ((a!2 (ite (= a!1 #b1)
                (bvadd (concat #b0 ((_ extract 63 32) %ymm1))
                       #b000000000000000000000000000000001)
                (concat #b0 ((_ extract 63 32) %ymm1))))
      (a!5 (ite (= a!4 #b1)
                (bvadd (concat #b0 ((_ extract 127 96) %ymm1))
                       #b000000000000000000000000000000001)
                (concat #b0 ((_ extract 127 96) %ymm1)))))
(let ((a!3 ((_ extract 32 32)
             (bvadd a!2 (concat #b0 ((_ extract 63 32) %ymm1)))))
      (a!6 ((_ extract 32 32)
             (bvadd a!5 (concat #b0 ((_ extract 127 96) %ymm1))))))
(let ((a!7 (bvadd (ite (= a!3 #b1)
                       (ite (= a!6 #b1)
                            #b000000000000000000000000000000010
                            #b000000000000000000000000000000001)
                       (ite (= a!6 #b1)
                            #b000000000000000000000000000000001
                            #b000000000000000000000000000000000))
                  (ite (= a!6 #b1)
                       #b000000000000000000000000000000001
                       #b000000000000000000000000000000000))))
  ((_ sign_extend 32) ((_ extract 31 0) a!7))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
