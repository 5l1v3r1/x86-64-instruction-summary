code: sarw $0x1, %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : (let ((a!1 (bvashr (concat ((_ sign_extend 48) ((_ extract 15 0) %rbx)) #b0)
                   (concat #b000000000000000000000000000000000000000000000000000000000
                           #x01))))
  (concat ((_ extract 63 16) %rbx) ((_ extract 16 1) a!1)))


%cf    : (let ((a!1 (bvashr (concat ((_ sign_extend 48) ((_ extract 15 0) %rbx)) #b0)
                   (concat #b000000000000000000000000000000000000000000000000000000000
                           #x01))))
(let ((a!2 (or (and true (= ((_ extract 0 0) a!1) #b1)) false)))
  (ite a!2 #b1 #b0)))

%pf    : (let ((a!1 (bvashr (concat ((_ sign_extend 48) ((_ extract 15 0) %rbx)) #b0)
                   (concat #b000000000000000000000000000000000000000000000000000000000
                           #x01))))
(let ((a!2 (not (xor (= ((_ extract 1 1) a!1) #b1)
                     (= ((_ extract 2 2) a!1) #b1)
                     (= ((_ extract 3 3) a!1) #b1)
                     (= ((_ extract 4 4) a!1) #b1)
                     (= ((_ extract 5 5) a!1) #b1)
                     (= ((_ extract 6 6) a!1) #b1)
                     (= ((_ extract 7 7) a!1) #b1)
                     (= ((_ extract 8 8) a!1) #b1)))))
  (ite a!2 #b1 #b0)))

%af    : (ite TMP_BOOL_11 #b1 #b0)

%zf    : (let ((a!1 (bvashr (concat ((_ sign_extend 48) ((_ extract 15 0) %rbx)) #b0)
                   (concat #b000000000000000000000000000000000000000000000000000000000
                           #x01))))
  (ite (= ((_ extract 64 1) a!1) #x0000000000000000) #b1 #b0))

%sf    : (let ((a!1 (bvashr (concat ((_ sign_extend 48) ((_ extract 15 0) %rbx)) #b0)
                   (concat #b000000000000000000000000000000000000000000000000000000000
                           #x01))))
  ((_ extract 64 64) a!1))

%of    : #b0


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

