code: sarw $0x1, %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : (let ((a!1 ((_ extract 16 1)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001))))
  (concat ((_ extract 63 16) %rbx) a!1))


%cf    : (let ((a!1 ((_ extract 0 0)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001))))
  (ite (or (and true (= a!1 #b1)) (and false %cf)) #b1 #b0))

%pf    : (let ((a!1 ((_ extract 1 1)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001)))
      (a!2 ((_ extract 2 2)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001)))
      (a!3 ((_ extract 3 3)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001)))
      (a!4 ((_ extract 4 4)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001)))
      (a!5 ((_ extract 5 5)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001)))
      (a!6 ((_ extract 6 6)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001)))
      (a!7 ((_ extract 7 7)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001)))
      (a!8 ((_ extract 8 8)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001))))
(let ((a!9 (and true
                (not (xor (= a!1 #b1)
                          (= a!2 #b1)
                          (= a!3 #b1)
                          (= a!4 #b1)
                          (= a!5 #b1)
                          (= a!6 #b1)
                          (= a!7 #b1)
                          (= a!8 #b1))))))
  (ite (or a!9 (and false %pf)) #b1 #b0)))

%af    : (ite (or (and true TMP_BOOL_0) (and false %af)) #b1 #b0)

%zf    : (let ((a!1 ((_ extract 16 1)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001))))
  (ite (or (and true (= a!1 #x0000)) (and false %zf)) #b1 #b0))

%sf    : (let ((a!1 ((_ extract 16 16)
             (bvashr (concat ((_ extract 15 0) %rbx) #b0) #b00000000000000001))))
  (ite (or (and true (= a!1 #b1)) (and false %sf)) #b1 #b0))

%of    : (ite (or false (and false %of)) #b1 #b0)


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

