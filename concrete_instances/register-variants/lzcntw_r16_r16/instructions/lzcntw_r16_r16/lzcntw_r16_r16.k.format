code: lzcntw %cx, %bx

  maybe read:      { %cx }
  must read:       { %cx }
  maybe write:     { %bx %cf %zf }
  must write:      { %bx %cf %zf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { bmi1 }

Formula:

%rbx   : concatenateMInt( extractMInt( %rbx, 0, 48), (#ifMInt eqMInt( extractMInt( %rcx, 48, 49), mi(1, 1)) #then mi(16, 0) #else (#ifMInt eqMInt( extractMInt( %rcx, 49, 50), mi(1, 1)) #then mi(16, 1) #else (#ifMInt eqMInt( extractMInt( %rcx, 50, 51), mi(1, 1)) #then mi(16, 2) #else (#ifMInt eqMInt( extractMInt( %rcx, 51, 52), mi(1, 1)) #then mi(16, 3) #else (#ifMInt eqMInt( extractMInt( %rcx, 52, 53), mi(1, 1)) #then mi(16, 4) #else (#ifMInt eqMInt( extractMInt( %rcx, 53, 54), mi(1, 1)) #then mi(16, 5) #else (#ifMInt eqMInt( extractMInt( %rcx, 54, 55), mi(1, 1)) #then mi(16, 6) #else (#ifMInt eqMInt( extractMInt( %rcx, 55, 56), mi(1, 1)) #then mi(16, 7) #else (#ifMInt eqMInt( extractMInt( %rcx, 56, 57), mi(1, 1)) #then mi(16, 8) #else (#ifMInt eqMInt( extractMInt( %rcx, 57, 58), mi(1, 1)) #then mi(16, 9) #else (#ifMInt eqMInt( extractMInt( %rcx, 58, 59), mi(1, 1)) #then mi(16, 10) #else (#ifMInt eqMInt( extractMInt( %rcx, 59, 60), mi(1, 1)) #then mi(16, 11) #else (#ifMInt eqMInt( extractMInt( %rcx, 60, 61), mi(1, 1)) #then mi(16, 12) #else (#ifMInt eqMInt( extractMInt( %rcx, 61, 62), mi(1, 1)) #then mi(16, 13) #else (#ifMInt eqMInt( extractMInt( %rcx, 62, 63), mi(1, 1)) #then mi(16, 14) #else (#ifMInt eqMInt( extractMInt( %rcx, 63, 64), mi(1, 1)) #then mi(16, 15) #else mi(16, 16) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi))

%cf    : (#ifMInt eqMInt( (#ifMInt eqMInt( extractMInt( %rcx, 48, 49), mi(1, 1)) #then mi(16, 0) #else (#ifMInt eqMInt( extractMInt( %rcx, 49, 50), mi(1, 1)) #then mi(16, 1) #else (#ifMInt eqMInt( extractMInt( %rcx, 50, 51), mi(1, 1)) #then mi(16, 2) #else (#ifMInt eqMInt( extractMInt( %rcx, 51, 52), mi(1, 1)) #then mi(16, 3) #else (#ifMInt eqMInt( extractMInt( %rcx, 52, 53), mi(1, 1)) #then mi(16, 4) #else (#ifMInt eqMInt( extractMInt( %rcx, 53, 54), mi(1, 1)) #then mi(16, 5) #else (#ifMInt eqMInt( extractMInt( %rcx, 54, 55), mi(1, 1)) #then mi(16, 6) #else (#ifMInt eqMInt( extractMInt( %rcx, 55, 56), mi(1, 1)) #then mi(16, 7) #else (#ifMInt eqMInt( extractMInt( %rcx, 56, 57), mi(1, 1)) #then mi(16, 8) #else (#ifMInt eqMInt( extractMInt( %rcx, 57, 58), mi(1, 1)) #then mi(16, 9) #else (#ifMInt eqMInt( extractMInt( %rcx, 58, 59), mi(1, 1)) #then mi(16, 10) #else (#ifMInt eqMInt( extractMInt( %rcx, 59, 60), mi(1, 1)) #then mi(16, 11) #else (#ifMInt eqMInt( extractMInt( %rcx, 60, 61), mi(1, 1)) #then mi(16, 12) #else (#ifMInt eqMInt( extractMInt( %rcx, 61, 62), mi(1, 1)) #then mi(16, 13) #else (#ifMInt eqMInt( extractMInt( %rcx, 62, 63), mi(1, 1)) #then mi(16, 14) #else (#ifMInt eqMInt( extractMInt( %rcx, 63, 64), mi(1, 1)) #then mi(16, 15) #else mi(16, 16) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi), mi(16, 16)) #then mi(1, 1) #else mi(1, 0) #fi)
%pf    : (#ifMInt TMP_BOOL_2 #then mi(1, 1) #else mi(1, 0) #fi)
%af    : (#ifMInt TMP_BOOL_3 #then mi(1, 1) #else mi(1, 0) #fi)
%zf    : (#ifMInt eqMInt( (#ifMInt eqMInt( extractMInt( %rcx, 48, 49), mi(1, 1)) #then mi(16, 0) #else (#ifMInt eqMInt( extractMInt( %rcx, 49, 50), mi(1, 1)) #then mi(16, 1) #else (#ifMInt eqMInt( extractMInt( %rcx, 50, 51), mi(1, 1)) #then mi(16, 2) #else (#ifMInt eqMInt( extractMInt( %rcx, 51, 52), mi(1, 1)) #then mi(16, 3) #else (#ifMInt eqMInt( extractMInt( %rcx, 52, 53), mi(1, 1)) #then mi(16, 4) #else (#ifMInt eqMInt( extractMInt( %rcx, 53, 54), mi(1, 1)) #then mi(16, 5) #else (#ifMInt eqMInt( extractMInt( %rcx, 54, 55), mi(1, 1)) #then mi(16, 6) #else (#ifMInt eqMInt( extractMInt( %rcx, 55, 56), mi(1, 1)) #then mi(16, 7) #else (#ifMInt eqMInt( extractMInt( %rcx, 56, 57), mi(1, 1)) #then mi(16, 8) #else (#ifMInt eqMInt( extractMInt( %rcx, 57, 58), mi(1, 1)) #then mi(16, 9) #else (#ifMInt eqMInt( extractMInt( %rcx, 58, 59), mi(1, 1)) #then mi(16, 10) #else (#ifMInt eqMInt( extractMInt( %rcx, 59, 60), mi(1, 1)) #then mi(16, 11) #else (#ifMInt eqMInt( extractMInt( %rcx, 60, 61), mi(1, 1)) #then mi(16, 12) #else (#ifMInt eqMInt( extractMInt( %rcx, 61, 62), mi(1, 1)) #then mi(16, 13) #else (#ifMInt eqMInt( extractMInt( %rcx, 62, 63), mi(1, 1)) #then mi(16, 14) #else (#ifMInt eqMInt( extractMInt( %rcx, 63, 64), mi(1, 1)) #then mi(16, 15) #else mi(16, 16) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi), mi(16, 0)) #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : (#ifMInt TMP_BOOL_1 #then mi(1, 1) #else mi(1, 0) #fi)
%of    : (#ifMInt TMP_BOOL_0 #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
