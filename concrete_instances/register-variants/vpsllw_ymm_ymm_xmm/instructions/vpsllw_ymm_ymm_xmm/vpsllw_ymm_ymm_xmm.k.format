code: vpsllw %xmm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %xmm3 }
  must read:       { %ymm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (#ifMInt ugtMInt( extractMInt( %ymm3, 192, 256), mi(64, 15)) #then mi(256, 0) #else concatenateMInt( shlMInt( extractMInt( %ymm2, 0, 16), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 16, 32), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 32, 48), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 48, 64), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 64, 80), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 80, 96), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 96, 112), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 112, 128), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 128, 144), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 144, 160), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 160, 176), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 176, 192), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 192, 208), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 208, 224), uvalueMInt(extractMInt( %ymm3, 240, 256))), concatenateMInt( shlMInt( extractMInt( %ymm2, 224, 240), uvalueMInt(extractMInt( %ymm3, 240, 256))), shlMInt( extractMInt( %ymm2, 240, 256), uvalueMInt(extractMInt( %ymm3, 240, 256)))))))))))))))))) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
