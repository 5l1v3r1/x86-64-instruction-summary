code: andq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : (bvxor (bvxor %rcx %rbx) (bvor %rcx (bvxor %rcx %rbx)))


%cf    : #b0

%pf    : (let ((a!1 (bvxor (bvxor ((_ extract 0 0) %rcx) ((_ extract 0 0) %rbx))
                  (bvor ((_ extract 0 0) %rcx)
                        (bvxor ((_ extract 0 0) %rcx) ((_ extract 0 0) %rbx)))))
      (a!2 (bvxor (bvxor ((_ extract 1 1) %rcx) ((_ extract 1 1) %rbx))
                  (bvor ((_ extract 1 1) %rcx)
                        (bvxor ((_ extract 1 1) %rcx) ((_ extract 1 1) %rbx)))))
      (a!3 (bvxor (bvxor ((_ extract 2 2) %rcx) ((_ extract 2 2) %rbx))
                  (bvor ((_ extract 2 2) %rcx)
                        (bvxor ((_ extract 2 2) %rcx) ((_ extract 2 2) %rbx)))))
      (a!4 (bvxor (bvxor ((_ extract 3 3) %rcx) ((_ extract 3 3) %rbx))
                  (bvor ((_ extract 3 3) %rcx)
                        (bvxor ((_ extract 3 3) %rcx) ((_ extract 3 3) %rbx)))))
      (a!5 (bvxor (bvxor ((_ extract 4 4) %rcx) ((_ extract 4 4) %rbx))
                  (bvor ((_ extract 4 4) %rcx)
                        (bvxor ((_ extract 4 4) %rcx) ((_ extract 4 4) %rbx)))))
      (a!6 (bvxor (bvxor ((_ extract 5 5) %rcx) ((_ extract 5 5) %rbx))
                  (bvor ((_ extract 5 5) %rcx)
                        (bvxor ((_ extract 5 5) %rcx) ((_ extract 5 5) %rbx)))))
      (a!7 (bvxor (bvxor ((_ extract 6 6) %rcx) ((_ extract 6 6) %rbx))
                  (bvor ((_ extract 6 6) %rcx)
                        (bvxor ((_ extract 6 6) %rcx) ((_ extract 6 6) %rbx)))))
      (a!8 (bvxor (bvxor ((_ extract 7 7) %rcx) ((_ extract 7 7) %rbx))
                  (bvor ((_ extract 7 7) %rcx)
                        (bvxor ((_ extract 7 7) %rcx) ((_ extract 7 7) %rbx))))))
  (ite (not (xor (= a!1 #b1)
                 (= a!2 #b1)
                 (= a!3 #b1)
                 (= a!4 #b1)
                 (= a!5 #b1)
                 (= a!6 #b1)
                 (= a!7 #b1)
                 (= a!8 #b1)))
       #b1
       #b0))

%af    : (ite TMP_BOOL_20 #b1 #b0)

%zf    : (let ((a!1 (= (bvxor (bvxor %rcx %rbx) (bvor %rcx (bvxor %rcx %rbx)))
              #x0000000000000000)))
  (ite a!1 #b1 #b0))

%sf    : (bvxor (bvxor ((_ extract 63 63) %rcx) ((_ extract 63 63) %rbx))
       (bvor ((_ extract 63 63) %rcx)
             (bvxor ((_ extract 63 63) %rcx) ((_ extract 63 63) %rbx))))

%of    : #b0


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

