code: vpmulld %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 0, 32))), mi(64, svalueMInt(extractMInt( %ymm3, 0, 32)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 32, 64))), mi(64, svalueMInt(extractMInt( %ymm3, 32, 64)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 64, 96))), mi(64, svalueMInt(extractMInt( %ymm3, 64, 96)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 96, 128))), mi(64, svalueMInt(extractMInt( %ymm3, 96, 128)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 128, 160))), mi(64, svalueMInt(extractMInt( %ymm3, 128, 160)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 160, 192))), mi(64, svalueMInt(extractMInt( %ymm3, 160, 192)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 192, 224))), mi(64, svalueMInt(extractMInt( %ymm3, 192, 224)))), 32, 64), extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 224, 256))), mi(64, svalueMInt(extractMInt( %ymm3, 224, 256)))), 32, 64))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
