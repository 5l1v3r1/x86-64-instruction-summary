code: vpunpckhwd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : concatenateMInt( mi(128, 0), concatenateMInt( xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm2, 128, 144)), concatenateMInt( mi(16, 0), extractMInt( %ymm2, 144, 160))), xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm3, 144, 160)), concatenateMInt( mi(16, 0), extractMInt( %ymm3, 144, 160))), orMInt( concatenateMInt( extractMInt( %ymm3, 128, 160), concatenateMInt( extractMInt( %ymm3, 144, 160), extractMInt( %ymm3, 144, 160))), concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm3, 144, 160)), concatenateMInt( mi(16, 0), extractMInt( %ymm3, 144, 160)))))), xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm2, 160, 176)), concatenateMInt( mi(16, 0), extractMInt( %ymm2, 176, 192))), xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm3, 176, 192)), concatenateMInt( mi(16, 0), extractMInt( %ymm3, 176, 192))), orMInt( concatenateMInt( extractMInt( %ymm3, 160, 192), concatenateMInt( extractMInt( %ymm3, 176, 192), extractMInt( %ymm3, 176, 192))), concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm3, 176, 192)), concatenateMInt( mi(16, 0), extractMInt( %ymm3, 176, 192))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
