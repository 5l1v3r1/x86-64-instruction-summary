code: btsq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rbx %cf }
  must write:      { %rbx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : orMInt( %rbx, shiftLeftMInt( mi(64, 1), uvalueMInt(mi(64, svalueMInt(andMInt( %rcx, mi(64, 63)))))))

%cf    : extractMInt( lshrMInt( %rbx, uvalueMInt(mi(64, svalueMInt(andMInt( %rcx, mi(64, 63)))))), 63, 64)
%pf    : (#ifMInt TMP_BOOL_3 #then mi(1, 1) #else mi(1, 0) #fi)
%af    : (#ifMInt TMP_BOOL_2 #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : (#ifMInt TMP_BOOL_1 #then mi(1, 1) #else mi(1, 0) #fi)
%of    : (#ifMInt TMP_BOOL_0 #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
