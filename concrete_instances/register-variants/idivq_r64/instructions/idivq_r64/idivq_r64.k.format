code: idivq %rbx

  maybe read:      { %rax %rdx %rbx }
  must read:       { %rax %rdx %rbx }
  maybe write:     { %rax %rdx }
  must write:      { %rax %rdx }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : idiv_quotient_int64(concatenateMInt( %rdx, %rax), %rbx)
%rdx   : idiv_remainder_int64(concatenateMInt( %rdx, %rax), %rbx)

%cf    : (#ifMInt TMP_BOOL_5 #then mi(1, 1) #else mi(1, 0) #fi)
%pf    : (#ifMInt TMP_BOOL_2 #then mi(1, 1) #else mi(1, 0) #fi)
%af    : (#ifMInt TMP_BOOL_1 #then mi(1, 1) #else mi(1, 0) #fi)
%zf    : (#ifMInt TMP_BOOL_0 #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : (#ifMInt TMP_BOOL_3 #then mi(1, 1) #else mi(1, 0) #fi)
%of    : (#ifMInt TMP_BOOL_4 #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
