code: vpcmpeqw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm2, 128, 144), extractMInt( %ymm3, 128, 144)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm2, 144, 160), extractMInt( %ymm3, 144, 160)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm2, 160, 176), extractMInt( %ymm3, 160, 176)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm2, 176, 192), extractMInt( %ymm3, 176, 192)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm2, 192, 208), extractMInt( %ymm3, 192, 208)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm2, 208, 224), extractMInt( %ymm3, 208, 224)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm2, 224, 240), extractMInt( %ymm3, 224, 240)) #then mi(16, 65535) #else mi(16, 0) #fi), (#ifMInt eqMInt( extractMInt( %ymm2, 240, 256), extractMInt( %ymm3, 240, 256)) #then mi(16, 65535) #else mi(16, 0) #fi)))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
