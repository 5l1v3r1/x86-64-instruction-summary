code: rcrw $0x1, %bx

  maybe read:      { %bx %cf }
  must read:       { %bx %cf }
  maybe write:     { %bx %cf %of }
  must write:      { %bx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

rcrw $0x1, %bx: Hindex7(9)
rcrw $0x1, %bx: Hindex7(9)
Formula:

%rbx   : (let ((a!1 ((_ extract 15 0)
             (ext_rotate_right (concat (ite %cf #b1 #b0)
                                       ((_ extract 15 0) %rbx))
                               #b00000000000000001))))
  (concat ((_ extract 63 16) %rbx) a!1))

%cf    : (let ((a!1 ((_ extract 16 16)
             (ext_rotate_right (concat (ite %cf #b1 #b0)
                                       ((_ extract 15 0) %rbx))
                               #b00000000000000001))))
  (= a!1 #b1))
%of    : (let ((a!1 ((_ extract 15 15)
             (ext_rotate_right (concat (ite %cf #b1 #b0)
                                       ((_ extract 15 0) %rbx))
                               #b00000000000000001)))
      (a!2 ((_ extract 14 14)
             (ext_rotate_right (concat (ite %cf #b1 #b0)
                                       ((_ extract 15 0) %rbx))
                               #b00000000000000001))))
  (or (and true (xor (= a!1 #b1) (= a!2 #b1)))
      (and false (or (and true %of) (and false TMP_BOOL_0)))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
