code: testb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : (let ((a!1 (= (bvxor (bvor ((_ extract 8 8) %rbx) ((_ extract 8 8) %rax))
                     ((_ extract 8 8) %rax)
                     ((_ extract 8 8) %rbx))
              #b1))
      (a!2 (= (bvxor (bvor ((_ extract 9 9) %rbx) ((_ extract 9 9) %rax))
                     ((_ extract 9 9) %rax)
                     ((_ extract 9 9) %rbx))
              #b1))
      (a!3 (= (bvxor (bvor ((_ extract 10 10) %rbx) ((_ extract 10 10) %rax))
                     ((_ extract 10 10) %rax)
                     ((_ extract 10 10) %rbx))
              #b1))
      (a!4 (= (bvxor (bvor ((_ extract 11 11) %rbx) ((_ extract 11 11) %rax))
                     ((_ extract 11 11) %rax)
                     ((_ extract 11 11) %rbx))
              #b1))
      (a!5 (= (bvxor (bvor ((_ extract 12 12) %rbx) ((_ extract 12 12) %rax))
                     ((_ extract 12 12) %rax)
                     ((_ extract 12 12) %rbx))
              #b1))
      (a!6 (= (bvxor (bvor ((_ extract 13 13) %rbx) ((_ extract 13 13) %rax))
                     ((_ extract 13 13) %rax)
                     ((_ extract 13 13) %rbx))
              #b1))
      (a!7 (= (bvxor (bvor ((_ extract 14 14) %rbx) ((_ extract 14 14) %rax))
                     ((_ extract 14 14) %rax)
                     ((_ extract 14 14) %rbx))
              #b1))
      (a!8 (= (bvxor (bvor ((_ extract 15 15) %rbx) ((_ extract 15 15) %rax))
                     ((_ extract 15 15) %rax)
                     ((_ extract 15 15) %rbx))
              #b1)))
  (not (xor a!1 a!2 a!3 a!4 a!5 a!6 a!7 a!8)))
%af    : TMP_BOOL_12
%zf    : (let ((a!1 (bvor ((_ extract 31 0) ((_ sign_extend 56) ((_ extract 15 8) %rbx)))
                 ((_ extract 31 0) ((_ sign_extend 56) ((_ extract 15 8) %rax))))))
(let ((a!2 (bvxor a!1
                  ((_ extract 31 0)
                    ((_ sign_extend 56) ((_ extract 15 8) %rax)))
                  ((_ extract 31 0)
                    ((_ sign_extend 56) ((_ extract 15 8) %rbx))))))
  (= a!2 #x00000000)))
%sf    : (let ((a!1 (bvor ((_ extract 31 31)
                   ((_ sign_extend 56) ((_ extract 15 8) %rbx)))
                 ((_ extract 31 31)
                   ((_ sign_extend 56) ((_ extract 15 8) %rax))))))
(let ((a!2 (bvxor a!1
                  ((_ extract 31 31)
                    ((_ sign_extend 56) ((_ extract 15 8) %rax)))
                  ((_ extract 31 31)
                    ((_ sign_extend 56) ((_ extract 15 8) %rbx))))))
  (= a!2 #b1)))
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
