code: shrw $0x1, %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : concatenateMInt( extractMInt( %rbx, 0, 48), extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 0, 16))

%cf    : (#ifMInt (eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 16, 17), mi(1, 1)) orBool FALSE) #then mi(1, 1) #else mi(1, 0) #fi)
%pf    : (#ifMInt ((notBool (((((((eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 15, 16), mi(1, 1)) xorBool eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 14, 15), mi(1, 1))) xorBool eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 13, 14), mi(1, 1))) xorBool eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 12, 13), mi(1, 1))) xorBool eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 11, 12), mi(1, 1))) xorBool eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 10, 11), mi(1, 1))) xorBool eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 9, 10), mi(1, 1))) xorBool eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 8, 9), mi(1, 1)))) orBool FALSE) #then mi(1, 1) #else mi(1, 0) #fi)
%af    : (#ifMInt (TMP_BOOL_2 orBool FALSE) #then mi(1, 1) #else mi(1, 0) #fi)
%zf    : (#ifMInt (eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 0, 16), mi(16, 0)) orBool FALSE) #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : (#ifMInt (eqMInt( extractMInt( lshrMInt( concatenateMInt( extractMInt( %rbx, 48, 64), mi(1, 0)), uvalueMInt(mi(17, 1))), 0, 1), mi(1, 1)) orBool FALSE) #then mi(1, 1) #else mi(1, 0) #fi)
%of    : (#ifMInt (eqMInt( extractMInt( %rbx, 48, 49), mi(1, 1)) orBool FALSE) #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
