code: punpckhwd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : concatenateMInt( extractMInt( %ymm1, 0, 128), concatenateMInt( xorMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm1, 128, 144)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm1, 144, 160)), mi(32, 0))), xorMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm2, 144, 160)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm2, 144, 160)), mi(32, 0))), orMInt( concatenateMInt( extractMInt( %ymm2, 128, 160), concatenateMInt( extractMInt( %ymm2, 144, 160), extractMInt( %ymm2, 144, 160))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm2, 144, 160)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm2, 144, 160)), mi(32, 0)))))), xorMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm1, 160, 176)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm1, 176, 192)), mi(32, 0))), xorMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm2, 176, 192)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm2, 176, 192)), mi(32, 0))), orMInt( concatenateMInt( extractMInt( %ymm2, 160, 192), concatenateMInt( extractMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm2, 176, 192)), mi(32, 0)), 16, 32), extractMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm2, 176, 192)), mi(32, 0)), 16, 32))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm2, 176, 192)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( %ymm2, 176, 192)), mi(32, 0))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
