WARNING | 2018-04-08 20:49:13,086 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:13,127 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:13,175 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub213ps_xmm_xmm_xmm/vfnmsub213ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_I32 t12:Ity_F32 t13:Ity_I32 t14:Ity_F32 t15:Ity_F32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_I32 t36:Ity_F32 t37:Ity_I32 t38:Ity_F32 t39:Ity_F32 t40:Ity_F32 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128to64(t2)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t0)
   09 | t8 = V128HIto64(t2)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = 64to32(t4)
   13 | t12 = ReinterpI32asF32(t11)
   14 | t13 = 64to32(t3)
   15 | t14 = ReinterpI32asF32(t13)
   16 | t15 = MAddF32(0x00000000,t14,t12,t10)
   17 | t16 = NegF32(t15)
   18 | PUT(ymm1) = t16
   19 | t17 = 64HIto32(t5)
   20 | t18 = ReinterpI32asF32(t17)
   21 | t19 = 64HIto32(t4)
   22 | t20 = ReinterpI32asF32(t19)
   23 | t21 = 64HIto32(t3)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = MAddF32(0x00000000,t22,t20,t18)
   26 | t24 = NegF32(t23)
   27 | PUT(260) = t24
   28 | t25 = 64to32(t8)
   29 | t26 = ReinterpI32asF32(t25)
   30 | t27 = 64to32(t7)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = 64to32(t6)
   33 | t30 = ReinterpI32asF32(t29)
   34 | t31 = MAddF32(0x00000000,t30,t28,t26)
   35 | t32 = NegF32(t31)
   36 | PUT(264) = t32
   37 | t33 = 64HIto32(t8)
   38 | t34 = ReinterpI32asF32(t33)
   39 | t35 = 64HIto32(t7)
   40 | t36 = ReinterpI32asF32(t35)
   41 | t37 = 64HIto32(t6)
   42 | t38 = ReinterpI32asF32(t37)
   43 | t39 = MAddF32(0x00000000,t38,t36,t34)
   44 | t40 = NegF32(t39)
   45 | PUT(268) = t40
   46 | PUT(272) = 0
   47 | PUT(pc) = 0x0000000000400005
   48 | ------ IMark(0x400005, 1, 0) ------
   49 | t41 = GET:I64(rsp)
   50 | t42 = LDle:I64(t41)
   51 | t43 = Add64(t41,0x0000000000000008)
   52 | PUT(rsp) = t43
   53 | t44 = Sub64(t43,0x0000000000000080)
   54 | ====== AbiHint(0xt44, 128, t42) ======
   NEXT: PUT(rip) = t42; Ijk_Ret
}
