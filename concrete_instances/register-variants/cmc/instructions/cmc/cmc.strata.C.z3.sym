code: cmc

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %cf }
  must write:      { %cf }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

cmc: Hindex8(9)
cmc: Hindex8(9)
callq .read_cf_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r8d_r9d: Hindex8(9)
callq .move_r8b_to_byte_5_of_rbx: Hindex8(9)
xorq %rax, %rax: Hindex1(9)
movq $0xffffffffffffffff, %rsi: Hindex5(9)
callq .move_016_008_bx_r10b_r11b: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_008_016_r10b_r11b_cx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
callq .read_cf_into_rbx: Hindex8(9)
adcw %bx, %ax: Hindex2(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
movswq %si, %rbx: Hindex5(9)
movb %cl, %bh: Hindex5(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
callq .read_cf_into_rcx: Hindex8(9)
movb %cl, %ah: Hindex5(9)
movswq %bx, %rdx: Hindex5(9)
xorq %rbp, %rdx: Hindex1(9)
movslq %edx, %rbx: Hindex5(9)
callq .set_szp_for_bl: Hindex8(9)
callq .set_szp_for_bl: Hindex8(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
callq .clear_cf: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movsbq %r15b, %rcx: Hindex5(9)
adcb %cl, %r13b: Hindex2(9)
movslq %r13d, %rbx: Hindex5(9)
movb %dl, %ah: Hindex5(9)
movq $0x4, %rdi: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcb %al, %al: Hindex2(9)
adcb %bl, %bl: Hindex2(9)
callq .set_szp_for_bl: Hindex8(9)
xorq %r8, %r8: Hindex1(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
callq .read_cf_into_rcx: Hindex8(9)
movb %cl, %ah: Hindex5(9)
movswq %bx, %rdx: Hindex5(9)
xorq %rbp, %rdx: Hindex1(9)
movslq %edx, %rbx: Hindex5(9)
callq .set_szp_for_bl: Hindex8(9)
xorq %rax, %rax: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %ax: Hindex2(9)
popcntq %rax, %rbx: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
xorq %rcx, %rcx: Hindex1(9)
callq .read_sf_into_rbx: Hindex8(9)
movb %ah, %bl: Hindex5(9)
movq $0x0, %rbx: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
movsbq %cl, %rdi: Hindex5(9)
adcb %dil, %bl: Hindex2(9)
movslq %r12d, %rdx: Hindex5(9)
callq .move_016_008_dx_r8b_r9b: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movb %dl, %ah: Hindex5(9)
callq .move_r9b_to_byte_6_of_rbx: Hindex8(9)
popcntq %rdx, %r9: Hindex1(9)
adcb %sil, %bl: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
adcb %bl, %bl: Hindex2(9)
Formula:

%cf    : (= ((_ extract 8 8)
     (bvadd (ite %cf #b000000000 #b011111111) (ite %cf #b000000000 #b011111111)))
   #b1)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
