code: incl %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %pf %af %zf %sf %of }
  must write:      { %rbx %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : concatenateMInt( mi(32, 0), extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 1, 33))

%pf    : (#ifMInt (notBool (((((((eqMInt( extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 32, 33), mi(1, 1)) xorBool eqMInt( extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 31, 32), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 30, 31), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 29, 30), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 28, 29), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 27, 28), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 26, 27), mi(1, 1))) xorBool eqMInt( extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 25, 26), mi(1, 1)))) #then mi(1, 1) #else mi(1, 0) #fi)
%af    : extractMInt( addMInt( mi(5, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 60, 64))), 0, 1)
%zf    : (#ifMInt eqMInt( extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 1, 33), mi(32, 0)) #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 1, 2)
%of    : (#ifMInt ((FALSE ==Bool eqMInt( extractMInt( %rbx, 32, 33), mi(1, 1))) andBool (notBool (FALSE ==Bool eqMInt( extractMInt( addMInt( mi(33, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 32, 64))), 1, 2), mi(1, 1))))) #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
