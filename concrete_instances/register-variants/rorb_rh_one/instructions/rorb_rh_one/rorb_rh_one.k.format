code: rorb $0x1, %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah %cf %of }
  must write:      { %ah %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : concatenateMInt( concatenateMInt( extractMInt( %rax, 0, 48), ror( extractMInt( %rax, 48, 56), mi(8, 1))), extractMInt( %rax, 56, 64))

%cf    : extractMInt( ror( extractMInt( %rax, 48, 56), mi(8, 1)), 0, 1)
%of    : (#ifMInt (eqMInt( extractMInt( ror( extractMInt( %rax, 48, 56), mi(8, 1)), 0, 1), mi(1, 1)) xorBool eqMInt( extractMInt( ror( extractMInt( %rax, 48, 56), mi(8, 1)), 1, 2), mi(1, 1))) #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
