code: vmovmskpd %ymm1, %ebx

  maybe read:      { %ymm1 }
  must read:       { %ymm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

vmovmskpd %ymm1, %ebx: Hindex8(9)
vmovmskpd %ymm1, %ebx: Hindex8(9)
movq $0x20, %rbx: Hindex5(9)
callq .move_256_128_ymm1_xmm10_xmm11: Hindex8(9)
callq .move_128_032_xmm1_eax_edx_r8d_r9d: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
callq .read_cf_into_rbx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
callq .move_128_032_xmm1_eax_edx_r8d_r9d: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
callq .read_cf_into_rbx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
callq .clear_cf: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movsbq %r15b, %rcx: Hindex5(9)
adcb %cl, %r13b: Hindex2(9)
movslq %r13d, %rbx: Hindex5(9)
callq .clear_cf: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movsbq %r15b, %rcx: Hindex5(9)
adcb %cl, %r13b: Hindex2(9)
movslq %r13d, %rbx: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
callq .move_016_008_bx_r10b_r11b: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_008_016_r10b_r11b_cx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
Formula:

%rbx   : (let ((a!1 ((_ extract 32 32)
             (bvadd (concat #b0 ((_ extract 191 160) %ymm1))
                    (concat #b0 ((_ extract 191 160) %ymm1)))))
      (a!4 ((_ extract 32 32)
             (bvadd (concat #b0 ((_ extract 255 224) %ymm1))
                    (concat #b0 ((_ extract 255 224) %ymm1)))))
      (a!9 ((_ extract 32 32)
             (bvadd (concat #b0 ((_ extract 63 32) %ymm1))
                    (concat #b0 ((_ extract 63 32) %ymm1)))))
      (a!12 ((_ extract 32 32)
              (bvadd (concat #b0 ((_ extract 127 96) %ymm1))
                     (concat #b0 ((_ extract 127 96) %ymm1))))))
(let ((a!2 (ite (= a!1 #b1)
                (bvadd (concat #b0 ((_ extract 191 160) %ymm1))
                       #b000000000000000000000000000000001)
                (concat #b0 ((_ extract 191 160) %ymm1))))
      (a!5 (ite (= a!4 #b1)
                (bvadd (concat #b0 ((_ extract 255 224) %ymm1))
                       #b000000000000000000000000000000001)
                (concat #b0 ((_ extract 255 224) %ymm1))))
      (a!10 (ite (= a!9 #b1)
                 (bvadd (concat #b0 ((_ extract 63 32) %ymm1))
                        #b000000000000000000000000000000001)
                 (concat #b0 ((_ extract 63 32) %ymm1))))
      (a!13 (ite (= a!12 #b1)
                 (bvadd (concat #b0 ((_ extract 127 96) %ymm1))
                        #b000000000000000000000000000000001)
                 (concat #b0 ((_ extract 127 96) %ymm1)))))
(let ((a!3 ((_ extract 32 32)
             (bvadd a!2 (concat #b0 ((_ extract 191 160) %ymm1)))))
      (a!6 ((_ extract 32 32)
             (bvadd a!5 (concat #b0 ((_ extract 255 224) %ymm1)))))
      (a!11 ((_ extract 32 32)
              (bvadd a!10 (concat #b0 ((_ extract 63 32) %ymm1)))))
      (a!14 ((_ extract 32 32)
              (bvadd a!13 (concat #b0 ((_ extract 127 96) %ymm1))))))
(let ((a!7 (bvadd (ite (= a!3 #b1)
                       (ite (= a!6 #b1)
                            #b000000000000000000000000000000010
                            #b000000000000000000000000000000001)
                       (ite (= a!6 #b1)
                            #b000000000000000000000000000000001
                            #b000000000000000000000000000000000))
                  (ite (= a!6 #b1)
                       #b000000000000000000000000000000001
                       #b000000000000000000000000000000000)))
      (a!15 (bvadd (ite (= a!11 #b1)
                        (ite (= a!14 #b1)
                             #b000000000000000000000000000000010
                             #b000000000000000000000000000000001)
                        (ite (= a!14 #b1)
                             #b000000000000000000000000000000001
                             #b000000000000000000000000000000000))
                   (ite (= a!14 #b1)
                        #b000000000000000000000000000000001
                        #b000000000000000000000000000000000))))
(let ((a!8 ((_ extract 7 0)
             (bvadd (concat #b0 ((_ extract 7 0) a!7))
                    (concat #b0 ((_ extract 7 0) a!7))))))
(let ((a!16 ((_ extract 7 0)
              (bvadd (concat #b0 a!8) (concat #b0 ((_ extract 7 0) a!15))))))
(let ((a!17 (bvadd (concat #b0 (concat ((_ extract 15 8) a!7) a!16))
                   (concat #b0 (concat ((_ extract 15 8) a!15) a!8)))))
  (concat #x000000000000 ((_ extract 15 0) a!17)))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
