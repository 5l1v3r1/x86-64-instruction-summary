code: decl %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %pf %af %zf %sf %of }
  must write:      { %rbx %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : (let ((a!1 ((_ extract 31 0)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111))))
  (concat #x00000000 a!1))


%pf    : (let ((a!1 ((_ extract 0 0)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111)))
      (a!2 ((_ extract 1 1)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111)))
      (a!3 ((_ extract 2 2)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111)))
      (a!4 ((_ extract 3 3)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111)))
      (a!5 ((_ extract 4 4)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111)))
      (a!6 ((_ extract 5 5)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111)))
      (a!7 ((_ extract 6 6)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111)))
      (a!8 ((_ extract 7 7)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111))))
  (ite (not (xor (= a!1 #b1)
                 (= a!2 #b1)
                 (= a!3 #b1)
                 (= a!4 #b1)
                 (= a!5 #b1)
                 (= a!6 #b1)
                 (= a!7 #b1)
                 (= a!8 #b1)))
       #b1
       #b0))

%af    : ((_ extract 4 4) (bvadd (concat #b0 ((_ extract 3 0) %rbx)) #b01111))

%zf    : (let ((a!1 ((_ extract 31 0)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111))))
  (ite (= a!1 #x00000000) #b1 #b0))

%sf    : ((_ extract 31 31)
  (bvadd (concat #b0 ((_ extract 31 0) %rbx))
         #b011111111111111111111111111111111))

%of    : (let ((a!1 ((_ extract 31 31)
             (bvadd (concat #b0 ((_ extract 31 0) %rbx))
                    #b011111111111111111111111111111111))))
(let ((a!2 (not (= (= ((_ extract 31 31) %rbx) #b1) (= a!1 #b1)))))
(let ((a!3 (and (= (= ((_ extract 31 31) %rbx) #b1) true) a!2)))
  (ite a!3 #b1 #b0))))


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

