code: andb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : concatenateMInt( extractMInt( %rbx, 0, 56), xorMInt( orMInt( xorMInt( mi(8, 255), extractMInt( %rbx, 56, 64)), extractMInt( %rax, 48, 56)), xorMInt( mi(8, 255), extractMInt( %rbx, 56, 64))))

%cf    : mi(1, 0)
%pf    : getParity(xorMInt( orMInt( xorMInt( mi(8, 255), extractMInt( %rbx, 56, 64)), extractMInt( %rax, 48, 56)), xorMInt( mi(8, 255), extractMInt( %rbx, 56, 64))))
%af    : (#ifMInt TMP_BOOL_13 #then mi(1, 1) #else mi(1, 0) #fi)
%zf    : (#ifMInt eqMInt( xorMInt( orMInt( xorMInt( mi(8, 255), extractMInt( %rbx, 56, 64)), extractMInt( %rax, 48, 56)), xorMInt( mi(8, 255), extractMInt( %rbx, 56, 64))), mi(8, 0)) #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : xorMInt( orMInt( xorMInt( mi(1, 1), extractMInt( %rbx, 56, 57)), extractMInt( %rax, 48, 49)), xorMInt( mi(1, 1), extractMInt( %rbx, 56, 57)))
%of    : mi(1, 0)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
