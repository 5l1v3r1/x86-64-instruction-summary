code: vmulps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

vmulps %xmm3, %xmm2, %xmm1: Hindex8(9)
vmulps %xmm3, %xmm2, %xmm1: Hindex8(9)
callq .move_128_064_xmm3_r10_r11: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall: Hindex1(9)
callq .move_064_128_r10_r11_xmm1: Hindex8(9)
callq .move_064_128_r8_r9_xmm2: Hindex8(9)
vmulps %ymm1, %ymm2, %ymm1: Hindex0(9)
Formula:

%ymm1  : (let ((a!1 (concat (mul_single ((_ extract 95 64) %ymm2)
                               ((_ extract 95 64) %ymm3))
                   (concat (mul_single ((_ extract 63 32) %ymm2)
                                       ((_ extract 63 32) %ymm3))
                           (mul_single ((_ extract 31 0) %ymm2)
                                       ((_ extract 31 0) %ymm3))))))
(let ((a!2 (concat #x00000000
                   (concat (mul_single ((_ extract 127 96) %ymm2)
                                       ((_ extract 127 96) %ymm3))
                           a!1))))
  (concat #x00000000 (concat #x00000000 (concat #x00000000 a!2)))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
