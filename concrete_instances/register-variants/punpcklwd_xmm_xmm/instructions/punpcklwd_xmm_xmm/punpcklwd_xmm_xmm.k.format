code: punpcklwd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : concatenateMInt( extractMInt( %ymm1, 0, 128), concatenateMInt( xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm1, 192, 208)), concatenateMInt( mi(16, 0), extractMInt( %ymm1, 208, 224))), xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm2, 208, 224)), concatenateMInt( mi(16, 0), extractMInt( %ymm2, 208, 224))), orMInt( concatenateMInt( extractMInt( %ymm2, 192, 224), concatenateMInt( extractMInt( %ymm2, 208, 224), extractMInt( %ymm2, 208, 224))), concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm2, 208, 224)), concatenateMInt( mi(16, 0), extractMInt( %ymm2, 208, 224)))))), xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm1, 224, 240)), concatenateMInt( mi(16, 0), extractMInt( %ymm1, 240, 256))), xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm2, 240, 256)), concatenateMInt( mi(16, 0), extractMInt( %ymm2, 240, 256))), orMInt( concatenateMInt( extractMInt( %ymm2, 224, 256), concatenateMInt( extractMInt( %ymm2, 240, 256), extractMInt( %ymm2, 240, 256))), concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( %ymm2, 240, 256)), concatenateMInt( mi(16, 0), extractMInt( %ymm2, 240, 256))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
