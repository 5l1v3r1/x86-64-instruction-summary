code: lzcntq %rcx, %rbx

  maybe read:      { %rcx }
  must read:       { %rcx }
  maybe write:     { %rbx %cf %zf }
  must write:      { %rbx %cf %zf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { bmi1 }

Formula:

%rbx   : (#ifMInt eqMInt( extractMInt( %rcx, 0, 1), mi(1, 1)) #then mi(64, 0) #else (#ifMInt eqMInt( extractMInt( %rcx, 1, 2), mi(1, 1)) #then mi(64, 1) #else (#ifMInt eqMInt( extractMInt( %rcx, 2, 3), mi(1, 1)) #then mi(64, 2) #else (#ifMInt eqMInt( extractMInt( %rcx, 3, 4), mi(1, 1)) #then mi(64, 3) #else (#ifMInt eqMInt( extractMInt( %rcx, 4, 5), mi(1, 1)) #then mi(64, 4) #else (#ifMInt eqMInt( extractMInt( %rcx, 5, 6), mi(1, 1)) #then mi(64, 5) #else (#ifMInt eqMInt( extractMInt( %rcx, 6, 7), mi(1, 1)) #then mi(64, 6) #else (#ifMInt eqMInt( extractMInt( %rcx, 7, 8), mi(1, 1)) #then mi(64, 7) #else (#ifMInt eqMInt( extractMInt( %rcx, 8, 9), mi(1, 1)) #then mi(64, 8) #else (#ifMInt eqMInt( extractMInt( %rcx, 9, 10), mi(1, 1)) #then mi(64, 9) #else (#ifMInt eqMInt( extractMInt( %rcx, 10, 11), mi(1, 1)) #then mi(64, 10) #else (#ifMInt eqMInt( extractMInt( %rcx, 11, 12), mi(1, 1)) #then mi(64, 11) #else (#ifMInt eqMInt( extractMInt( %rcx, 12, 13), mi(1, 1)) #then mi(64, 12) #else (#ifMInt eqMInt( extractMInt( %rcx, 13, 14), mi(1, 1)) #then mi(64, 13) #else (#ifMInt eqMInt( extractMInt( %rcx, 14, 15), mi(1, 1)) #then mi(64, 14) #else (#ifMInt eqMInt( extractMInt( %rcx, 15, 16), mi(1, 1)) #then mi(64, 15) #else (#ifMInt eqMInt( extractMInt( %rcx, 16, 17), mi(1, 1)) #then mi(64, 16) #else (#ifMInt eqMInt( extractMInt( %rcx, 17, 18), mi(1, 1)) #then mi(64, 17) #else (#ifMInt eqMInt( extractMInt( %rcx, 18, 19), mi(1, 1)) #then mi(64, 18) #else (#ifMInt eqMInt( extractMInt( %rcx, 19, 20), mi(1, 1)) #then mi(64, 19) #else (#ifMInt eqMInt( extractMInt( %rcx, 20, 21), mi(1, 1)) #then mi(64, 20) #else (#ifMInt eqMInt( extractMInt( %rcx, 21, 22), mi(1, 1)) #then mi(64, 21) #else (#ifMInt eqMInt( extractMInt( %rcx, 22, 23), mi(1, 1)) #then mi(64, 22) #else (#ifMInt eqMInt( extractMInt( %rcx, 23, 24), mi(1, 1)) #then mi(64, 23) #else (#ifMInt eqMInt( extractMInt( %rcx, 24, 25), mi(1, 1)) #then mi(64, 24) #else (#ifMInt eqMInt( extractMInt( %rcx, 25, 26), mi(1, 1)) #then mi(64, 25) #else (#ifMInt eqMInt( extractMInt( %rcx, 26, 27), mi(1, 1)) #then mi(64, 26) #else (#ifMInt eqMInt( extractMInt( %rcx, 27, 28), mi(1, 1)) #then mi(64, 27) #else (#ifMInt eqMInt( extractMInt( %rcx, 28, 29), mi(1, 1)) #then mi(64, 28) #else (#ifMInt eqMInt( extractMInt( %rcx, 29, 30), mi(1, 1)) #then mi(64, 29) #else (#ifMInt eqMInt( extractMInt( %rcx, 30, 31), mi(1, 1)) #then mi(64, 30) #else (#ifMInt eqMInt( extractMInt( %rcx, 31, 32), mi(1, 1)) #then mi(64, 31) #else (#ifMInt eqMInt( extractMInt( %rcx, 32, 33), mi(1, 1)) #then mi(64, 32) #else (#ifMInt eqMInt( extractMInt( %rcx, 33, 34), mi(1, 1)) #then mi(64, 33) #else (#ifMInt eqMInt( extractMInt( %rcx, 34, 35), mi(1, 1)) #then mi(64, 34) #else (#ifMInt eqMInt( extractMInt( %rcx, 35, 36), mi(1, 1)) #then mi(64, 35) #else (#ifMInt eqMInt( extractMInt( %rcx, 36, 37), mi(1, 1)) #then mi(64, 36) #else (#ifMInt eqMInt( extractMInt( %rcx, 37, 38), mi(1, 1)) #then mi(64, 37) #else (#ifMInt eqMInt( extractMInt( %rcx, 38, 39), mi(1, 1)) #then mi(64, 38) #else (#ifMInt eqMInt( extractMInt( %rcx, 39, 40), mi(1, 1)) #then mi(64, 39) #else (#ifMInt eqMInt( extractMInt( %rcx, 40, 41), mi(1, 1)) #then mi(64, 40) #else (#ifMInt eqMInt( extractMInt( %rcx, 41, 42), mi(1, 1)) #then mi(64, 41) #else (#ifMInt eqMInt( extractMInt( %rcx, 42, 43), mi(1, 1)) #then mi(64, 42) #else (#ifMInt eqMInt( extractMInt( %rcx, 43, 44), mi(1, 1)) #then mi(64, 43) #else (#ifMInt eqMInt( extractMInt( %rcx, 44, 45), mi(1, 1)) #then mi(64, 44) #else (#ifMInt eqMInt( extractMInt( %rcx, 45, 46), mi(1, 1)) #then mi(64, 45) #else (#ifMInt eqMInt( extractMInt( %rcx, 46, 47), mi(1, 1)) #then mi(64, 46) #else (#ifMInt eqMInt( extractMInt( %rcx, 47, 48), mi(1, 1)) #then mi(64, 47) #else (#ifMInt eqMInt( extractMInt( %rcx, 48, 49), mi(1, 1)) #then mi(64, 48) #else (#ifMInt eqMInt( extractMInt( %rcx, 49, 50), mi(1, 1)) #then mi(64, 49) #else (#ifMInt eqMInt( extractMInt( %rcx, 50, 51), mi(1, 1)) #then mi(64, 50) #else (#ifMInt eqMInt( extractMInt( %rcx, 51, 52), mi(1, 1)) #then mi(64, 51) #else (#ifMInt eqMInt( extractMInt( %rcx, 52, 53), mi(1, 1)) #then mi(64, 52) #else (#ifMInt eqMInt( extractMInt( %rcx, 53, 54), mi(1, 1)) #then mi(64, 53) #else (#ifMInt eqMInt( extractMInt( %rcx, 54, 55), mi(1, 1)) #then mi(64, 54) #else (#ifMInt eqMInt( extractMInt( %rcx, 55, 56), mi(1, 1)) #then mi(64, 55) #else (#ifMInt eqMInt( extractMInt( %rcx, 56, 57), mi(1, 1)) #then mi(64, 56) #else (#ifMInt eqMInt( extractMInt( %rcx, 57, 58), mi(1, 1)) #then mi(64, 57) #else (#ifMInt eqMInt( extractMInt( %rcx, 58, 59), mi(1, 1)) #then mi(64, 58) #else (#ifMInt eqMInt( extractMInt( %rcx, 59, 60), mi(1, 1)) #then mi(64, 59) #else (#ifMInt eqMInt( extractMInt( %rcx, 60, 61), mi(1, 1)) #then mi(64, 60) #else (#ifMInt eqMInt( extractMInt( %rcx, 61, 62), mi(1, 1)) #then mi(64, 61) #else (#ifMInt eqMInt( extractMInt( %rcx, 62, 63), mi(1, 1)) #then mi(64, 62) #else (#ifMInt eqMInt( extractMInt( %rcx, 63, 64), mi(1, 1)) #then mi(64, 63) #else mi(64, 64) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi)

%cf    : (#ifMInt eqMInt( (#ifMInt eqMInt( extractMInt( %rcx, 0, 1), mi(1, 1)) #then mi(64, 0) #else (#ifMInt eqMInt( extractMInt( %rcx, 1, 2), mi(1, 1)) #then mi(64, 1) #else (#ifMInt eqMInt( extractMInt( %rcx, 2, 3), mi(1, 1)) #then mi(64, 2) #else (#ifMInt eqMInt( extractMInt( %rcx, 3, 4), mi(1, 1)) #then mi(64, 3) #else (#ifMInt eqMInt( extractMInt( %rcx, 4, 5), mi(1, 1)) #then mi(64, 4) #else (#ifMInt eqMInt( extractMInt( %rcx, 5, 6), mi(1, 1)) #then mi(64, 5) #else (#ifMInt eqMInt( extractMInt( %rcx, 6, 7), mi(1, 1)) #then mi(64, 6) #else (#ifMInt eqMInt( extractMInt( %rcx, 7, 8), mi(1, 1)) #then mi(64, 7) #else (#ifMInt eqMInt( extractMInt( %rcx, 8, 9), mi(1, 1)) #then mi(64, 8) #else (#ifMInt eqMInt( extractMInt( %rcx, 9, 10), mi(1, 1)) #then mi(64, 9) #else (#ifMInt eqMInt( extractMInt( %rcx, 10, 11), mi(1, 1)) #then mi(64, 10) #else (#ifMInt eqMInt( extractMInt( %rcx, 11, 12), mi(1, 1)) #then mi(64, 11) #else (#ifMInt eqMInt( extractMInt( %rcx, 12, 13), mi(1, 1)) #then mi(64, 12) #else (#ifMInt eqMInt( extractMInt( %rcx, 13, 14), mi(1, 1)) #then mi(64, 13) #else (#ifMInt eqMInt( extractMInt( %rcx, 14, 15), mi(1, 1)) #then mi(64, 14) #else (#ifMInt eqMInt( extractMInt( %rcx, 15, 16), mi(1, 1)) #then mi(64, 15) #else (#ifMInt eqMInt( extractMInt( %rcx, 16, 17), mi(1, 1)) #then mi(64, 16) #else (#ifMInt eqMInt( extractMInt( %rcx, 17, 18), mi(1, 1)) #then mi(64, 17) #else (#ifMInt eqMInt( extractMInt( %rcx, 18, 19), mi(1, 1)) #then mi(64, 18) #else (#ifMInt eqMInt( extractMInt( %rcx, 19, 20), mi(1, 1)) #then mi(64, 19) #else (#ifMInt eqMInt( extractMInt( %rcx, 20, 21), mi(1, 1)) #then mi(64, 20) #else (#ifMInt eqMInt( extractMInt( %rcx, 21, 22), mi(1, 1)) #then mi(64, 21) #else (#ifMInt eqMInt( extractMInt( %rcx, 22, 23), mi(1, 1)) #then mi(64, 22) #else (#ifMInt eqMInt( extractMInt( %rcx, 23, 24), mi(1, 1)) #then mi(64, 23) #else (#ifMInt eqMInt( extractMInt( %rcx, 24, 25), mi(1, 1)) #then mi(64, 24) #else (#ifMInt eqMInt( extractMInt( %rcx, 25, 26), mi(1, 1)) #then mi(64, 25) #else (#ifMInt eqMInt( extractMInt( %rcx, 26, 27), mi(1, 1)) #then mi(64, 26) #else (#ifMInt eqMInt( extractMInt( %rcx, 27, 28), mi(1, 1)) #then mi(64, 27) #else (#ifMInt eqMInt( extractMInt( %rcx, 28, 29), mi(1, 1)) #then mi(64, 28) #else (#ifMInt eqMInt( extractMInt( %rcx, 29, 30), mi(1, 1)) #then mi(64, 29) #else (#ifMInt eqMInt( extractMInt( %rcx, 30, 31), mi(1, 1)) #then mi(64, 30) #else (#ifMInt eqMInt( extractMInt( %rcx, 31, 32), mi(1, 1)) #then mi(64, 31) #else (#ifMInt eqMInt( extractMInt( %rcx, 32, 33), mi(1, 1)) #then mi(64, 32) #else (#ifMInt eqMInt( extractMInt( %rcx, 33, 34), mi(1, 1)) #then mi(64, 33) #else (#ifMInt eqMInt( extractMInt( %rcx, 34, 35), mi(1, 1)) #then mi(64, 34) #else (#ifMInt eqMInt( extractMInt( %rcx, 35, 36), mi(1, 1)) #then mi(64, 35) #else (#ifMInt eqMInt( extractMInt( %rcx, 36, 37), mi(1, 1)) #then mi(64, 36) #else (#ifMInt eqMInt( extractMInt( %rcx, 37, 38), mi(1, 1)) #then mi(64, 37) #else (#ifMInt eqMInt( extractMInt( %rcx, 38, 39), mi(1, 1)) #then mi(64, 38) #else (#ifMInt eqMInt( extractMInt( %rcx, 39, 40), mi(1, 1)) #then mi(64, 39) #else (#ifMInt eqMInt( extractMInt( %rcx, 40, 41), mi(1, 1)) #then mi(64, 40) #else (#ifMInt eqMInt( extractMInt( %rcx, 41, 42), mi(1, 1)) #then mi(64, 41) #else (#ifMInt eqMInt( extractMInt( %rcx, 42, 43), mi(1, 1)) #then mi(64, 42) #else (#ifMInt eqMInt( extractMInt( %rcx, 43, 44), mi(1, 1)) #then mi(64, 43) #else (#ifMInt eqMInt( extractMInt( %rcx, 44, 45), mi(1, 1)) #then mi(64, 44) #else (#ifMInt eqMInt( extractMInt( %rcx, 45, 46), mi(1, 1)) #then mi(64, 45) #else (#ifMInt eqMInt( extractMInt( %rcx, 46, 47), mi(1, 1)) #then mi(64, 46) #else (#ifMInt eqMInt( extractMInt( %rcx, 47, 48), mi(1, 1)) #then mi(64, 47) #else (#ifMInt eqMInt( extractMInt( %rcx, 48, 49), mi(1, 1)) #then mi(64, 48) #else (#ifMInt eqMInt( extractMInt( %rcx, 49, 50), mi(1, 1)) #then mi(64, 49) #else (#ifMInt eqMInt( extractMInt( %rcx, 50, 51), mi(1, 1)) #then mi(64, 50) #else (#ifMInt eqMInt( extractMInt( %rcx, 51, 52), mi(1, 1)) #then mi(64, 51) #else (#ifMInt eqMInt( extractMInt( %rcx, 52, 53), mi(1, 1)) #then mi(64, 52) #else (#ifMInt eqMInt( extractMInt( %rcx, 53, 54), mi(1, 1)) #then mi(64, 53) #else (#ifMInt eqMInt( extractMInt( %rcx, 54, 55), mi(1, 1)) #then mi(64, 54) #else (#ifMInt eqMInt( extractMInt( %rcx, 55, 56), mi(1, 1)) #then mi(64, 55) #else (#ifMInt eqMInt( extractMInt( %rcx, 56, 57), mi(1, 1)) #then mi(64, 56) #else (#ifMInt eqMInt( extractMInt( %rcx, 57, 58), mi(1, 1)) #then mi(64, 57) #else (#ifMInt eqMInt( extractMInt( %rcx, 58, 59), mi(1, 1)) #then mi(64, 58) #else (#ifMInt eqMInt( extractMInt( %rcx, 59, 60), mi(1, 1)) #then mi(64, 59) #else (#ifMInt eqMInt( extractMInt( %rcx, 60, 61), mi(1, 1)) #then mi(64, 60) #else (#ifMInt eqMInt( extractMInt( %rcx, 61, 62), mi(1, 1)) #then mi(64, 61) #else (#ifMInt eqMInt( extractMInt( %rcx, 62, 63), mi(1, 1)) #then mi(64, 62) #else (#ifMInt eqMInt( extractMInt( %rcx, 63, 64), mi(1, 1)) #then mi(64, 63) #else mi(64, 64) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi), mi(64, 64)) #then mi(1, 1) #else mi(1, 0) #fi)
%pf    : (#ifMInt TMP_BOOL_2 #then mi(1, 1) #else mi(1, 0) #fi)
%af    : (#ifMInt TMP_BOOL_3 #then mi(1, 1) #else mi(1, 0) #fi)
%zf    : (#ifMInt eqMInt( (#ifMInt eqMInt( extractMInt( %rcx, 0, 1), mi(1, 1)) #then mi(64, 0) #else (#ifMInt eqMInt( extractMInt( %rcx, 1, 2), mi(1, 1)) #then mi(64, 1) #else (#ifMInt eqMInt( extractMInt( %rcx, 2, 3), mi(1, 1)) #then mi(64, 2) #else (#ifMInt eqMInt( extractMInt( %rcx, 3, 4), mi(1, 1)) #then mi(64, 3) #else (#ifMInt eqMInt( extractMInt( %rcx, 4, 5), mi(1, 1)) #then mi(64, 4) #else (#ifMInt eqMInt( extractMInt( %rcx, 5, 6), mi(1, 1)) #then mi(64, 5) #else (#ifMInt eqMInt( extractMInt( %rcx, 6, 7), mi(1, 1)) #then mi(64, 6) #else (#ifMInt eqMInt( extractMInt( %rcx, 7, 8), mi(1, 1)) #then mi(64, 7) #else (#ifMInt eqMInt( extractMInt( %rcx, 8, 9), mi(1, 1)) #then mi(64, 8) #else (#ifMInt eqMInt( extractMInt( %rcx, 9, 10), mi(1, 1)) #then mi(64, 9) #else (#ifMInt eqMInt( extractMInt( %rcx, 10, 11), mi(1, 1)) #then mi(64, 10) #else (#ifMInt eqMInt( extractMInt( %rcx, 11, 12), mi(1, 1)) #then mi(64, 11) #else (#ifMInt eqMInt( extractMInt( %rcx, 12, 13), mi(1, 1)) #then mi(64, 12) #else (#ifMInt eqMInt( extractMInt( %rcx, 13, 14), mi(1, 1)) #then mi(64, 13) #else (#ifMInt eqMInt( extractMInt( %rcx, 14, 15), mi(1, 1)) #then mi(64, 14) #else (#ifMInt eqMInt( extractMInt( %rcx, 15, 16), mi(1, 1)) #then mi(64, 15) #else (#ifMInt eqMInt( extractMInt( %rcx, 16, 17), mi(1, 1)) #then mi(64, 16) #else (#ifMInt eqMInt( extractMInt( %rcx, 17, 18), mi(1, 1)) #then mi(64, 17) #else (#ifMInt eqMInt( extractMInt( %rcx, 18, 19), mi(1, 1)) #then mi(64, 18) #else (#ifMInt eqMInt( extractMInt( %rcx, 19, 20), mi(1, 1)) #then mi(64, 19) #else (#ifMInt eqMInt( extractMInt( %rcx, 20, 21), mi(1, 1)) #then mi(64, 20) #else (#ifMInt eqMInt( extractMInt( %rcx, 21, 22), mi(1, 1)) #then mi(64, 21) #else (#ifMInt eqMInt( extractMInt( %rcx, 22, 23), mi(1, 1)) #then mi(64, 22) #else (#ifMInt eqMInt( extractMInt( %rcx, 23, 24), mi(1, 1)) #then mi(64, 23) #else (#ifMInt eqMInt( extractMInt( %rcx, 24, 25), mi(1, 1)) #then mi(64, 24) #else (#ifMInt eqMInt( extractMInt( %rcx, 25, 26), mi(1, 1)) #then mi(64, 25) #else (#ifMInt eqMInt( extractMInt( %rcx, 26, 27), mi(1, 1)) #then mi(64, 26) #else (#ifMInt eqMInt( extractMInt( %rcx, 27, 28), mi(1, 1)) #then mi(64, 27) #else (#ifMInt eqMInt( extractMInt( %rcx, 28, 29), mi(1, 1)) #then mi(64, 28) #else (#ifMInt eqMInt( extractMInt( %rcx, 29, 30), mi(1, 1)) #then mi(64, 29) #else (#ifMInt eqMInt( extractMInt( %rcx, 30, 31), mi(1, 1)) #then mi(64, 30) #else (#ifMInt eqMInt( extractMInt( %rcx, 31, 32), mi(1, 1)) #then mi(64, 31) #else (#ifMInt eqMInt( extractMInt( %rcx, 32, 33), mi(1, 1)) #then mi(64, 32) #else (#ifMInt eqMInt( extractMInt( %rcx, 33, 34), mi(1, 1)) #then mi(64, 33) #else (#ifMInt eqMInt( extractMInt( %rcx, 34, 35), mi(1, 1)) #then mi(64, 34) #else (#ifMInt eqMInt( extractMInt( %rcx, 35, 36), mi(1, 1)) #then mi(64, 35) #else (#ifMInt eqMInt( extractMInt( %rcx, 36, 37), mi(1, 1)) #then mi(64, 36) #else (#ifMInt eqMInt( extractMInt( %rcx, 37, 38), mi(1, 1)) #then mi(64, 37) #else (#ifMInt eqMInt( extractMInt( %rcx, 38, 39), mi(1, 1)) #then mi(64, 38) #else (#ifMInt eqMInt( extractMInt( %rcx, 39, 40), mi(1, 1)) #then mi(64, 39) #else (#ifMInt eqMInt( extractMInt( %rcx, 40, 41), mi(1, 1)) #then mi(64, 40) #else (#ifMInt eqMInt( extractMInt( %rcx, 41, 42), mi(1, 1)) #then mi(64, 41) #else (#ifMInt eqMInt( extractMInt( %rcx, 42, 43), mi(1, 1)) #then mi(64, 42) #else (#ifMInt eqMInt( extractMInt( %rcx, 43, 44), mi(1, 1)) #then mi(64, 43) #else (#ifMInt eqMInt( extractMInt( %rcx, 44, 45), mi(1, 1)) #then mi(64, 44) #else (#ifMInt eqMInt( extractMInt( %rcx, 45, 46), mi(1, 1)) #then mi(64, 45) #else (#ifMInt eqMInt( extractMInt( %rcx, 46, 47), mi(1, 1)) #then mi(64, 46) #else (#ifMInt eqMInt( extractMInt( %rcx, 47, 48), mi(1, 1)) #then mi(64, 47) #else (#ifMInt eqMInt( extractMInt( %rcx, 48, 49), mi(1, 1)) #then mi(64, 48) #else (#ifMInt eqMInt( extractMInt( %rcx, 49, 50), mi(1, 1)) #then mi(64, 49) #else (#ifMInt eqMInt( extractMInt( %rcx, 50, 51), mi(1, 1)) #then mi(64, 50) #else (#ifMInt eqMInt( extractMInt( %rcx, 51, 52), mi(1, 1)) #then mi(64, 51) #else (#ifMInt eqMInt( extractMInt( %rcx, 52, 53), mi(1, 1)) #then mi(64, 52) #else (#ifMInt eqMInt( extractMInt( %rcx, 53, 54), mi(1, 1)) #then mi(64, 53) #else (#ifMInt eqMInt( extractMInt( %rcx, 54, 55), mi(1, 1)) #then mi(64, 54) #else (#ifMInt eqMInt( extractMInt( %rcx, 55, 56), mi(1, 1)) #then mi(64, 55) #else (#ifMInt eqMInt( extractMInt( %rcx, 56, 57), mi(1, 1)) #then mi(64, 56) #else (#ifMInt eqMInt( extractMInt( %rcx, 57, 58), mi(1, 1)) #then mi(64, 57) #else (#ifMInt eqMInt( extractMInt( %rcx, 58, 59), mi(1, 1)) #then mi(64, 58) #else (#ifMInt eqMInt( extractMInt( %rcx, 59, 60), mi(1, 1)) #then mi(64, 59) #else (#ifMInt eqMInt( extractMInt( %rcx, 60, 61), mi(1, 1)) #then mi(64, 60) #else (#ifMInt eqMInt( extractMInt( %rcx, 61, 62), mi(1, 1)) #then mi(64, 61) #else (#ifMInt eqMInt( extractMInt( %rcx, 62, 63), mi(1, 1)) #then mi(64, 62) #else (#ifMInt eqMInt( extractMInt( %rcx, 63, 64), mi(1, 1)) #then mi(64, 63) #else mi(64, 64) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi), mi(64, 0)) #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : (#ifMInt TMP_BOOL_1 #then mi(1, 1) #else mi(1, 0) #fi)
%of    : (#ifMInt TMP_BOOL_0 #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
