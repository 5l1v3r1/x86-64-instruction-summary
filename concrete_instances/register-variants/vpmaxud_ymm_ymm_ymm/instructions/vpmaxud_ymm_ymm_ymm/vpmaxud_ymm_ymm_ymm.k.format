code: vpmaxud %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : concatenateMInt( (#ifMInt ugtMInt( extractMInt( %ymm2, 0, 32), extractMInt( %ymm3, 0, 32)) #then extractMInt( %ymm2, 0, 32) #else extractMInt( %ymm3, 0, 32) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( %ymm2, 32, 64), extractMInt( %ymm3, 32, 64)) #then extractMInt( %ymm2, 32, 64) #else extractMInt( %ymm3, 32, 64) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( %ymm2, 64, 96), extractMInt( %ymm3, 64, 96)) #then extractMInt( %ymm2, 64, 96) #else extractMInt( %ymm3, 64, 96) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( %ymm2, 96, 128), extractMInt( %ymm3, 96, 128)) #then extractMInt( %ymm2, 96, 128) #else extractMInt( %ymm3, 96, 128) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( %ymm2, 128, 160), extractMInt( %ymm3, 128, 160)) #then extractMInt( %ymm2, 128, 160) #else extractMInt( %ymm3, 128, 160) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( %ymm2, 160, 192), extractMInt( %ymm3, 160, 192)) #then extractMInt( %ymm2, 160, 192) #else extractMInt( %ymm3, 160, 192) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( %ymm2, 192, 224), extractMInt( %ymm3, 192, 224)) #then extractMInt( %ymm2, 192, 224) #else extractMInt( %ymm3, 192, 224) #fi), (#ifMInt ugtMInt( extractMInt( %ymm2, 224, 256), extractMInt( %ymm3, 224, 256)) #then extractMInt( %ymm2, 224, 256) #else extractMInt( %ymm3, 224, 256) #fi))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
