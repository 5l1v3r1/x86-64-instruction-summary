code: bswap %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

bswap %ebx: Hindex8(9)
bswap %ebx: Hindex8(9)
callq .move_032_016_ebx_r8w_r9w: Hindex8(9)
callq .move_016_032_r8w_r9w_ecx: Hindex8(9)
callq .move_byte_3_of_rbx_to_r8b: Hindex8(9)
movslq %ebx, %rax: Hindex5(9)
movq $0xffffffffffffffff, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_r8b_to_byte_3_of_rbx: Hindex8(9)
callq .move_r9b_to_byte_2_of_rbx: Hindex8(9)
Formula:

%rbx   : (concat (concat (concat #x00000000 ((_ extract 7 0) %rbx))
                ((_ extract 15 8) %rbx))
        (concat ((_ extract 23 16) %rbx) ((_ extract 31 24) %rbx)))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
