code: testq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : (let ((a!1 (bvadd (concat #b0 (bvxor (bvor %rbx %rcx) %rcx #xffffffffffffffff))
                  #b00000000000000000000000000000000000000000000000000000000000000001
                  (concat #b0 %rbx))))
(let ((a!2 (bvadd (ite (= ((_ extract 64 64) a!1) #b1) #b000000000 #b011111111)
                  (ite (= ((_ extract 64 64) a!1) #b1) #b000000000 #b011111111))))
  (= ((_ extract 8 8) a!2) #b1)))
%pf    : (let ((a!1 (bvadd (concat #b0 (bvxor (bvor %rbx %rcx) %rcx #xffffffffffffffff))
                  #b00000000000000000000000000000000000000000000000000000000000000001
                  (concat #b0 %rbx))))
  (not (xor (= ((_ extract 0 0) a!1) #b1)
            (= ((_ extract 1 1) a!1) #b1)
            (= ((_ extract 2 2) a!1) #b1)
            (= ((_ extract 3 3) a!1) #b1)
            (= ((_ extract 4 4) a!1) #b1)
            (= ((_ extract 5 5) a!1) #b1)
            (= ((_ extract 6 6) a!1) #b1)
            (= ((_ extract 7 7) a!1) #b1))))
%af    : TMP_BOOL_27
%zf    : (let ((a!1 (bvadd (concat #b0 (bvxor (bvor %rbx %rcx) %rcx #xffffffffffffffff))
                  #b00000000000000000000000000000000000000000000000000000000000000001
                  (concat #b0 %rbx))))
  (= ((_ extract 63 0) a!1) #x0000000000000000))
%sf    : (let ((a!1 (bvadd (concat #b0 (bvxor (bvor %rbx %rcx) %rcx #xffffffffffffffff))
                  #b00000000000000000000000000000000000000000000000000000000000000001
                  (concat #b0 %rbx))))
  (= ((_ extract 63 63) a!1) #b1))
%of    : (let ((a!1 (= (bvxor (bvor ((_ extract 63 63) %rbx) ((_ extract 63 63) %rcx))
                     ((_ extract 63 63) %rcx)
                     #b1)
              #b1))
      (a!2 (bvadd (concat #b0 (bvxor (bvor %rbx %rcx) %rcx #xffffffffffffffff))
                  #b00000000000000000000000000000000000000000000000000000000000000001
                  (concat #b0 %rbx))))
(let ((a!3 (not (= a!1 (= ((_ extract 63 63) a!2) #b1)))))
  (and (= a!1 (= ((_ extract 63 63) %rbx) #b1)) a!3)))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
