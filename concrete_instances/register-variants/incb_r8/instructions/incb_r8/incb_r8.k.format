code: incb %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %pf %af %zf %sf %of }
  must write:      { %bl %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : concatenateMInt( extractMInt( %rbx, 0, 56), extractMInt( addMInt( mi(9, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64))), 1, 9))

%pf    : getParity(extractMInt( addMInt( mi(9, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64))), 1, 9))
%af    : extractMInt( addMInt( mi(5, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 60, 64))), 0, 1)
%zf    : (#ifMInt eqMInt( extractMInt( addMInt( mi(9, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64))), 1, 9), mi(8, 0)) #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : extractMInt( addMInt( mi(9, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64))), 1, 2)
%of    : (#ifMInt ((FALSE ==Bool eqMInt( extractMInt( %rbx, 56, 57), mi(1, 1))) andBool (notBool (FALSE ==Bool eqMInt( extractMInt( addMInt( mi(9, 1), concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64))), 1, 2), mi(1, 1))))) #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
