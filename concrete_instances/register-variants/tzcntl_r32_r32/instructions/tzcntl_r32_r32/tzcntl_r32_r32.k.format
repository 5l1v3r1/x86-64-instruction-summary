code: tzcntl %ecx, %ebx

  maybe read:      { %ecx }
  must read:       { %ecx }
  maybe write:     { %rbx %cf %zf }
  must write:      { %rbx %cf %zf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { bmi1 }

Formula:

%rbx   : concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(32, 0), addMInt( concatenateMInt( mi(16, 0), addMInt( concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 1, 2)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 2, 3)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 3, 4)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 4, 5)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 5, 6)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 6, 7)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 7, 8)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 8, 9)))))))), concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 9, 10)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 10, 11)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 11, 12)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 12, 13)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 13, 14)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 14, 15)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 15, 16)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 16, 17)))))))))), concatenateMInt( mi(16, 0), addMInt( concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 17, 18)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 18, 19)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 19, 20)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 20, 21)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 21, 22)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 22, 23)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 23, 24)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 24, 25)))))))), concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 25, 26)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 26, 27)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 27, 28)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 28, 29)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 29, 30)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 30, 31)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 31, 32)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 32, 33)))))))))))), concatenateMInt( mi(32, 0), addMInt( concatenateMInt( mi(16, 0), addMInt( concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 33, 34)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 34, 35)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 35, 36)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 36, 37)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 37, 38)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 38, 39)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 39, 40)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 40, 41)))))))), concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 41, 42)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 42, 43)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 43, 44)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 44, 45)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 45, 46)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 46, 47)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 47, 48)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 48, 49)))))))))), concatenateMInt( mi(16, 0), addMInt( concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 49, 50)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 50, 51)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 51, 52)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 52, 53)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 53, 54)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 54, 55)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 55, 56)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 56, 57)))))))), concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 57, 58)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 58, 59)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 59, 60)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 60, 61)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 61, 62)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 62, 63)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 63, 64)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 64, 65))))))))))))), 32, 64)), mi(33, 4294967295)), 1, 33))

%cf    : extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( ashrMInt( concatenateMInt( mi(64, svalueMInt(concatenateMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 57, 65), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 57, 65)))), mi(1, 0)), uvalueMInt(concatenateMInt( mi(57, 0), mi(8, 1)))), 56, 64)), concatenateMInt( mi(1, 0), extractMInt( ashrMInt( concatenateMInt( mi(64, svalueMInt(concatenateMInt( extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 57, 65), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 57, 65)))), mi(1, 0)), uvalueMInt(concatenateMInt( mi(57, 0), mi(8, 1)))), 56, 64))), 0, 1)
%pf    : (#ifMInt TMP_BOOL_22 #then mi(1, 1) #else mi(1, 0) #fi)
%af    : (#ifMInt TMP_BOOL_23 #then mi(1, 1) #else mi(1, 0) #fi)
%zf    : (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(32, 0), addMInt( concatenateMInt( mi(16, 0), addMInt( concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 1, 2)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 2, 3)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 3, 4)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 4, 5)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 5, 6)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 6, 7)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 7, 8)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 8, 9)))))))), concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 9, 10)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 10, 11)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 11, 12)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 12, 13)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 13, 14)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 14, 15)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 15, 16)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 16, 17)))))))))), concatenateMInt( mi(16, 0), addMInt( concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 17, 18)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 18, 19)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 19, 20)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 20, 21)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 21, 22)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 22, 23)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 23, 24)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 24, 25)))))))), concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 25, 26)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 26, 27)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 27, 28)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 28, 29)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 29, 30)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 30, 31)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 31, 32)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 32, 33)))))))))))), concatenateMInt( mi(32, 0), addMInt( concatenateMInt( mi(16, 0), addMInt( concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 33, 34)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 34, 35)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 35, 36)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 36, 37)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 37, 38)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 38, 39)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 39, 40)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 40, 41)))))))), concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 41, 42)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 42, 43)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 43, 44)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 44, 45)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 45, 46)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 46, 47)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 47, 48)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 48, 49)))))))))), concatenateMInt( mi(16, 0), addMInt( concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 49, 50)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 50, 51)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 51, 52)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 52, 53)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 53, 54)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 54, 55)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 55, 56)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 56, 57)))))))), concatenateMInt( mi(8, 0), addMInt( concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 57, 58)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 58, 59)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 59, 60)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 60, 61)))))), concatenateMInt( mi(4, 0), addMInt( concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 61, 62)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 62, 63)))), concatenateMInt( mi(2, 0), addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 63, 64)), concatenateMInt( mi(1, 0), extractMInt( addMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 17, 25))), 0, 1), mi(1, 1)) #then addMInt( concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))), mi(65, 1)) #else concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64)))) #fi), concatenateMInt( mi(1, 0), xorMInt( concatenateMInt( mi(32, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), mi(64, 18446744073709551615)), concatenateMInt( mi(33, 0), extractMInt( %rcx, 32, 64))), 33, 65)), concatenateMInt( mi(32, 0), extractMInt( %rcx, 32, 64))))), 64, 65))))))))))))), 32, 64)), mi(33, 4294967295)), 1, 33), mi(32, 0)) #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : (#ifMInt TMP_BOOL_24 #then mi(1, 1) #else mi(1, 0) #fi)
%of    : (#ifMInt TMP_BOOL_25 #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
