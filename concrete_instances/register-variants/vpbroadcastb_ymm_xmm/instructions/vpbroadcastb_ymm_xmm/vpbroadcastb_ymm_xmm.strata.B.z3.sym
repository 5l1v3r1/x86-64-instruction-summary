code: vpbroadcastb %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (let ((a!1 (concat ((_ extract 7 0) %ymm2)
                   (concat ((_ extract 7 0) %ymm2)
                           (concat ((_ extract 7 0) %ymm2)
                                   ((_ extract 7 0) %ymm2))))))
(let ((a!2 (concat ((_ extract 7 0) %ymm2)
                   (concat ((_ extract 7 0) %ymm2)
                           (concat ((_ extract 7 0) %ymm2) a!1)))))
(let ((a!3 (concat ((_ extract 7 0) %ymm2)
                   (concat ((_ extract 7 0) %ymm2)
                           (concat ((_ extract 7 0) %ymm2) a!2)))))
(let ((a!4 (concat ((_ extract 7 0) %ymm2)
                   (concat ((_ extract 7 0) %ymm2)
                           (concat ((_ extract 7 0) %ymm2) a!3)))))
(let ((a!5 (concat ((_ extract 7 0) %ymm2)
                   (concat ((_ extract 7 0) %ymm2)
                           (concat ((_ extract 7 0) %ymm2) a!4)))))
(let ((a!6 (concat ((_ extract 7 0) %ymm2)
                   (concat ((_ extract 7 0) %ymm2)
                           (concat ((_ extract 7 0) %ymm2) a!5)))))
(let ((a!7 (concat ((_ extract 7 0) %ymm2)
                   (concat ((_ extract 7 0) %ymm2)
                           (concat ((_ extract 7 0) %ymm2) a!6)))))
(let ((a!8 (concat ((_ extract 7 0) %ymm2)
                   (concat ((_ extract 7 0) %ymm2)
                           (concat ((_ extract 7 0) %ymm2) a!7)))))
(let ((a!9 (concat ((_ extract 7 0) %ymm2)
                   (concat ((_ extract 7 0) %ymm2)
                           (concat ((_ extract 7 0) %ymm2) a!8)))))
(let ((a!10 (concat ((_ extract 7 0) %ymm2)
                    (concat ((_ extract 7 0) %ymm2)
                            (concat ((_ extract 7 0) %ymm2) a!9)))))
  (concat ((_ extract 7 0) %ymm2) a!10)))))))))))


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

