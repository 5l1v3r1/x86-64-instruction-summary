code: rclb $0x1, %bl

  maybe read:      { %bl %cf }
  must read:       { %bl %cf }
  maybe write:     { %bl %cf %of }
  must write:      { %bl %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : concatenateMInt( extractMInt( %rbx, 0, 56), extractMInt( addMInt( (#ifMInt %cf #then addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 9)), mi(9, 1)) #else concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 9)) #fi), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 9))), 1, 9))

%cf    : extractMInt( addMInt( (#ifMInt %cf #then addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 9)), mi(9, 1)) #else concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 9)) #fi), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 9))), 0, 1)
%of    : (#ifMInt ((eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 2), mi(1, 1)) ==Bool eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 2), mi(1, 1))) andBool (notBool (eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 2), mi(1, 1)) ==Bool eqMInt( extractMInt( addMInt( (#ifMInt %cf #then addMInt( concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 9)), mi(9, 1)) #else concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 9)) #fi), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %rbx, 56, 64)), concatenateMInt( mi(8, 0), getParity(mi(8, 16)))), 1, 9))), 1, 2), mi(1, 1))))) #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
