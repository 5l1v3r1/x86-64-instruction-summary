code: vpmullw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : concatenateMInt( mi(128, 0), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( %ymm2, 128, 144))), mi(32, svalueMInt(extractMInt( %ymm3, 128, 144)))), 16, 32), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( %ymm2, 144, 160))), mi(32, svalueMInt(extractMInt( %ymm3, 144, 160)))), 16, 32), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( %ymm2, 160, 176))), mi(32, svalueMInt(extractMInt( %ymm3, 160, 176)))), 16, 32), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( %ymm2, 176, 192))), mi(32, svalueMInt(extractMInt( %ymm3, 176, 192)))), 16, 32), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( %ymm2, 192, 208))), mi(32, svalueMInt(extractMInt( %ymm3, 192, 208)))), 16, 32), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( %ymm2, 208, 224))), mi(32, svalueMInt(extractMInt( %ymm3, 208, 224)))), 16, 32), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( %ymm2, 224, 240))), mi(32, svalueMInt(extractMInt( %ymm3, 224, 240)))), 16, 32), extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( %ymm2, 240, 256))), mi(32, svalueMInt(extractMInt( %ymm3, 240, 256)))), 16, 32)))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
