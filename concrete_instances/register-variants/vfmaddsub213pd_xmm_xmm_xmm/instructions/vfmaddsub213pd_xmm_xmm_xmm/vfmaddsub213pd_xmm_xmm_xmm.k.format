code: vfmaddsub213pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : concatenateMInt( mi(128, 0), concatenateMInt( vfmsub132_double(extractMInt( %ymm2, 128, 192), vfnmsub132_double(concatenateMInt( (#ifMInt eqMInt( maxcmp_single(mi(32, 0), xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 128, 160), mi(32, 0))), orMInt( extractMInt( %ymm3, 128, 160), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 128, 160), mi(32, 0)))))), mi(1, 1)) #then mi(32, 0) #else xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 128, 160), mi(32, 0))), orMInt( extractMInt( %ymm3, 128, 160), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 128, 160), mi(32, 0))))) #fi), (#ifMInt eqMInt( maxcmp_single(mi(32, 0), xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 160, 192), mi(32, 0))), orMInt( extractMInt( %ymm3, 160, 192), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 160, 192), mi(32, 0)))))), mi(1, 1)) #then mi(32, 0) #else xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 160, 192), mi(32, 0))), orMInt( extractMInt( %ymm3, 160, 192), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 160, 192), mi(32, 0))))) #fi)), extractMInt( %ymm3, 128, 192), mi(64, 0)), extractMInt( %ymm1, 128, 192)), vfmsub132_double(extractMInt( %ymm2, 192, 256), vfnmsub132_double(vfnmsub132_double(concatenateMInt( (#ifMInt eqMInt( maxcmp_single(extractMInt( %ymm1, 192, 224), xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 192, 224), mi(32, 0))), orMInt( extractMInt( %ymm3, 192, 224), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 192, 224), mi(32, 0)))))), mi(1, 1)) #then extractMInt( %ymm1, 192, 224) #else xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 192, 224), mi(32, 0))), orMInt( extractMInt( %ymm3, 192, 224), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 192, 224), mi(32, 0))))) #fi), (#ifMInt eqMInt( maxcmp_single(extractMInt( %ymm1, 224, 256), xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 224, 256), mi(32, 0))), orMInt( extractMInt( %ymm3, 224, 256), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 224, 256), mi(32, 0)))))), mi(1, 1)) #then extractMInt( %ymm1, 224, 256) #else xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 224, 256), mi(32, 0))), orMInt( extractMInt( %ymm3, 224, 256), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 224, 256), mi(32, 0))))) #fi)), extractMInt( %ymm3, 192, 256), mi(64, 0)), vfnmsub132_double(concatenateMInt( (#ifMInt eqMInt( maxcmp_single(extractMInt( %ymm1, 192, 224), xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 192, 224), mi(32, 0))), orMInt( extractMInt( %ymm3, 192, 224), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 192, 224), mi(32, 0)))))), mi(1, 1)) #then extractMInt( %ymm1, 192, 224) #else xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 192, 224), mi(32, 0))), orMInt( extractMInt( %ymm3, 192, 224), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 192, 224), mi(32, 0))))) #fi), (#ifMInt eqMInt( maxcmp_single(extractMInt( %ymm1, 224, 256), xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 224, 256), mi(32, 0))), orMInt( extractMInt( %ymm3, 224, 256), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 224, 256), mi(32, 0)))))), mi(1, 1)) #then extractMInt( %ymm1, 224, 256) #else xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 224, 256), mi(32, 0))), orMInt( extractMInt( %ymm3, 224, 256), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 224, 256), mi(32, 0))))) #fi)), extractMInt( %ymm3, 192, 256), mi(64, 0)), concatenateMInt( mi(32, 0), extractMInt( vfnmsub132_double(concatenateMInt( (#ifMInt eqMInt( maxcmp_single(mi(32, 0), xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 128, 160), mi(32, 0))), orMInt( extractMInt( %ymm3, 128, 160), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 128, 160), mi(32, 0)))))), mi(1, 1)) #then mi(32, 0) #else xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 128, 160), mi(32, 0))), orMInt( extractMInt( %ymm3, 128, 160), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 128, 160), mi(32, 0))))) #fi), (#ifMInt eqMInt( maxcmp_single(mi(32, 0), xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 160, 192), mi(32, 0))), orMInt( extractMInt( %ymm3, 160, 192), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 160, 192), mi(32, 0)))))), mi(1, 1)) #then mi(32, 0) #else xorMInt( xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 160, 192), mi(32, 0))), orMInt( extractMInt( %ymm3, 160, 192), xorMInt( mi(32, 0), orMInt( extractMInt( %ymm3, 160, 192), mi(32, 0))))) #fi)), extractMInt( %ymm3, 128, 192), mi(64, 0)), 0, 32))), extractMInt( %ymm1, 192, 256))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
