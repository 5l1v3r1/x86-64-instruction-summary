WARNING | 2018-04-08 20:50:19,135 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:19,155 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:19,164 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpshufb_xmm_xmm_xmm/vpshufb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_V128 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = SarN8x8(t4,0x07)
   08 | t7 = Not64(t6)
   09 | t8 = ShlN8x8(t4,0x04)
   10 | t9 = SarN8x8(t8,0x07)
   11 | t10 = And64(t4,0x0707070707070707)
   12 | t11 = Not64(t9)
   13 | t12 = Perm8x8(t3,t10)
   14 | t13 = And64(t12,t11)
   15 | t14 = Perm8x8(t2,t10)
   16 | t15 = And64(t14,t9)
   17 | t16 = Or64(t15,t13)
   18 | t17 = And64(t16,t7)
   19 | t18 = SarN8x8(t5,0x07)
   20 | t19 = Not64(t18)
   21 | t20 = ShlN8x8(t5,0x04)
   22 | t21 = SarN8x8(t20,0x07)
   23 | t22 = And64(t5,0x0707070707070707)
   24 | t23 = Not64(t21)
   25 | t24 = Perm8x8(t3,t22)
   26 | t25 = And64(t24,t23)
   27 | t26 = Perm8x8(t2,t22)
   28 | t27 = And64(t26,t21)
   29 | t28 = Or64(t27,t25)
   30 | t29 = And64(t28,t19)
   31 | t30 = 64HLtoV128(t17,t29)
   32 | PUT(xmm1) = t30
   33 | PUT(272) = 0
   34 | PUT(pc) = 0x0000000000400005
   35 | ------ IMark(0x400005, 1, 0) ------
   36 | t31 = GET:I64(rsp)
   37 | t32 = LDle:I64(t31)
   38 | t33 = Add64(t31,0x0000000000000008)
   39 | PUT(rsp) = t33
   40 | t34 = Sub64(t33,0x0000000000000080)
   41 | ====== AbiHint(0xt34, 128, t32) ======
   NEXT: PUT(rip) = t32; Ijk_Ret
}
