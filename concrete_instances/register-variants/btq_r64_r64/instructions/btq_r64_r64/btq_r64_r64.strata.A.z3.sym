code: btq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %cf }
  must write:      { %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%cf    : (let ((a!1 (bvashr (concat %rbx #b0)
                   (concat #b000000000000000000000000000000000000000000000000000000000
                           (bvand ((_ extract 7 0) %rcx) #x3f)))))
(let ((a!2 ((_ extract 0 0)
             (bvashr (concat ((_ extract 64 1) a!1) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01)))))
  (ite (or (and true (= a!2 #b1)) false) #b1 #b0)))

%pf    : (ite TMP_BOOL_12 #b1 #b0)

%af    : (ite TMP_BOOL_13 #b1 #b0)

%sf    : (ite TMP_BOOL_14 #b1 #b0)

%of    : (ite TMP_BOOL_15 #b1 #b0)


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

