code: rolq $0x1, %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : (ext_rotate_left %rbx #x0000000000000001)

%cf    : (let ((a!1 (and true
                (= ((_ extract 0 0) (ext_rotate_left %rbx #x0000000000000001))
                   #b1))))
  (ite (or a!1 (and false %cf)) #b1 #b0))
%of    : (let ((a!1 (xor (= ((_ extract 63 63) (ext_rotate_left %rbx #x0000000000000001))
                   #b1)
                (= ((_ extract 0 0) (ext_rotate_left %rbx #x0000000000000001))
                   #b1))))
  (ite (or (and true a!1) (and false TMP_BOOL_0)) #b1 #b0))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
