code: testb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : #b0
%pf    : (let ((a!1 (xor (= (bvand ((_ extract 0 0) %rbx) ((_ extract 8 8) %rax)) #b1)
                (= (bvand ((_ extract 1 1) %rbx) ((_ extract 9 9) %rax)) #b1)
                (= (bvand ((_ extract 2 2) %rbx) ((_ extract 10 10) %rax)) #b1)
                (= (bvand ((_ extract 3 3) %rbx) ((_ extract 11 11) %rax)) #b1)
                (= (bvand ((_ extract 4 4) %rbx) ((_ extract 12 12) %rax)) #b1)
                (= (bvand ((_ extract 5 5) %rbx) ((_ extract 13 13) %rax)) #b1)
                (= (bvand ((_ extract 6 6) %rbx) ((_ extract 14 14) %rax)) #b1)
                (= (bvand ((_ extract 7 7) %rbx) ((_ extract 15 15) %rax)) #b1))))
  (ite (not a!1) #b1 #b0))
%af    : (ite TMP_BOOL_0 #b1 #b0)
%zf    : (ite (= (bvand ((_ extract 7 0) %rbx) ((_ extract 15 8) %rax)) #x00) #b1 #b0)
%sf    : (ite (= (bvand ((_ extract 7 7) %rbx) ((_ extract 15 15) %rax)) #b1) #b1 #b0)
%of    : #b0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
