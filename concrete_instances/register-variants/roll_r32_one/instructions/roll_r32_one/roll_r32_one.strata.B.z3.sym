code: roll $0x1, %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : (concat #x00000000 (ext_rotate_left ((_ extract 31 0) %rbx) #x00000001))


%cf    : (let ((a!1 (= ((_ extract 0 0)
                (ext_rotate_left ((_ extract 31 0) %rbx) #x00000001))
              #b1)))
  (ite (or (and true a!1) (and false %cf)) #b1 #b0))

%of    : (let ((a!1 (= ((_ extract 31 31)
                (ext_rotate_left ((_ extract 31 0) %rbx) #x00000001))
              #b1))
      (a!2 (= ((_ extract 0 0)
                (ext_rotate_left ((_ extract 31 0) %rbx) #x00000001))
              #b1)))
  (ite (or (and true (xor a!1 a!2)) (and false TMP_BOOL_0)) #b1 #b0))


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

