code: blsmskl (%rcx), %ebx

  maybe read:      { %rcx %ebx }
  must read:       { %rcx %ebx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : (let ((a!1 ((_ extract 31 0)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_1))))))
  (bvxor (concat #x00000000 TMP_BV_32_0) (concat #x00000000 a!1)))

%cf    : (let ((a!1 ((_ extract 47 40)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_1))))))
  (= ((_ extract 8 8) (bvadd (concat #b0 a!1) (concat #b0 a!1))) #b1))
%pf    : TMP_BOOL_6
%af    : TMP_BOOL_7
%zf    : (let ((a!1 ((_ extract 31 0)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_1))))))
  (= (bvxor TMP_BV_32_0 a!1) #x00000000))
%sf    : (let ((a!1 ((_ extract 31 31)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_1))))))
  (= (bvxor ((_ extract 31 31) TMP_BV_32_2) a!1) #b1))
%of    : (let ((a!1 ((_ extract 47 47)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_1)))))
      (a!2 ((_ extract 47 40)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_1))))))
(let ((a!3 (= ((_ extract 7 7) (bvadd (concat #b0 a!2) (concat #b0 a!2))) #b1)))
  (and (= (= a!1 #b1) (= a!1 #b1)) (not (= (= a!1 #b1) a!3)))))

Information about memory reads:
  Value TMP_BV_32_0 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_1 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_2 (4 bytes)
    was read at address %rcx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
