code: andb %ah, (%rbx)

  maybe read:      { %ah %rbx }
  must read:       { %ah %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : (let ((a!1 (xor (= (bvand ((_ extract 0 0) TMP_BV_8_0) ((_ extract 8 8) %rax))
                   #b1)
                (= (bvand ((_ extract 1 1) TMP_BV_8_0) ((_ extract 9 9) %rax))
                   #b1)
                (= (bvand ((_ extract 2 2) TMP_BV_8_0) ((_ extract 10 10) %rax))
                   #b1)
                (= (bvand ((_ extract 3 3) TMP_BV_8_0) ((_ extract 11 11) %rax))
                   #b1)
                (= (bvand ((_ extract 4 4) TMP_BV_8_0) ((_ extract 12 12) %rax))
                   #b1)
                (= (bvand ((_ extract 5 5) TMP_BV_8_0) ((_ extract 13 13) %rax))
                   #b1)
                (= (bvand ((_ extract 6 6) TMP_BV_8_0) ((_ extract 14 14) %rax))
                   #b1)
                (= (bvand ((_ extract 7 7) TMP_BV_8_0) ((_ extract 15 15) %rax))
                   #b1))))
  (not a!1))
%af    : TMP_BOOL_0
%zf    : (= (bvand TMP_BV_8_0 ((_ extract 15 8) %rax)) #x00)
%sf    : (= (bvand ((_ extract 7 7) TMP_BV_8_0) ((_ extract 15 15) %rax)) #b1)
%of    : false

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (bvand TMP_BV_8_0 ((_ extract 15 8) %rax)) (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv
    (and (not sigfpe) (not sigbus) false)
    (and (not sigfpe) (not sigbus) false))
