code: andq $0x0, (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : (let ((a!1 (bvxor #b0
                  #b0
                  ((_ extract 0 0) TMP_BV_64_1)
                  (bvor #b0 (bvxor #b0 #b0 ((_ extract 0 0) TMP_BV_64_2)))))
      (a!2 (bvxor #b0
                  #b0
                  ((_ extract 1 1) TMP_BV_64_3)
                  (bvor #b0 (bvxor #b0 #b0 ((_ extract 1 1) TMP_BV_64_4)))))
      (a!3 (bvxor #b0
                  #b0
                  ((_ extract 2 2) TMP_BV_64_5)
                  (bvor #b0 (bvxor #b0 #b0 ((_ extract 2 2) TMP_BV_64_6)))))
      (a!4 (bvxor #b0
                  #b0
                  ((_ extract 3 3) TMP_BV_64_7)
                  (bvor #b0 (bvxor #b0 #b0 ((_ extract 3 3) TMP_BV_64_8)))))
      (a!5 (bvxor #b0
                  #b0
                  ((_ extract 4 4) TMP_BV_64_9)
                  (bvor #b0 (bvxor #b0 #b0 ((_ extract 4 4) TMP_BV_64_10)))))
      (a!6 (bvxor #b0
                  #b0
                  ((_ extract 5 5) TMP_BV_64_11)
                  (bvor #b0 (bvxor #b0 #b0 ((_ extract 5 5) TMP_BV_64_12)))))
      (a!7 (bvxor #b0
                  #b0
                  ((_ extract 6 6) TMP_BV_64_13)
                  (bvor #b0 (bvxor #b0 #b0 ((_ extract 6 6) TMP_BV_64_14)))))
      (a!8 (bvxor #b0
                  #b0
                  ((_ extract 7 7) TMP_BV_64_15)
                  (bvor #b0 (bvxor #b0 #b0 ((_ extract 7 7) TMP_BV_64_16))))))
  (not (xor (= a!1 #b1)
            (= a!2 #b1)
            (= a!3 #b1)
            (= a!4 #b1)
            (= a!5 #b1)
            (= a!6 #b1)
            (= a!7 #b1)
            (= a!8 #b1))))
%af    : TMP_BOOL_21
%zf    : (= (bvxor (bvxor #x0000000000000000 #x0000000000000000 TMP_BV_64_0)
          (bvor #x0000000000000000
                (bvxor #x0000000000000000 #x0000000000000000 TMP_BV_64_0)))
   #x0000000000000000)
%sf    : (let ((a!1 (bvxor #b0
                  #b0
                  ((_ extract 63 63) TMP_BV_64_17)
                  (bvor #b0 (bvxor #b0 #b0 ((_ extract 63 63) TMP_BV_64_18))))))
  (= a!1 #b1))
%of    : false

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_1 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_2 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_3 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_4 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_5 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_6 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_7 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_8 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_9 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_10 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_11 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_12 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_13 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_14 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_15 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_16 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_17 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_18 (8 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (bvxor (bvxor #x0000000000000000 #x0000000000000000 TMP_BV_64_0)
       (bvor #x0000000000000000
             (bvxor #x0000000000000000 #x0000000000000000 TMP_BV_64_0))) (8 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
