code: vpaddusw (%rbx), %xmm2, %xmm1

  maybe read:      { %rbx %xmm2 }
  must read:       { %rbx %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 128, 144)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 0, 16))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 128, 144)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 0, 16))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 144, 160)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 16, 32))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 144, 160)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 16, 32))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 160, 176)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 32, 48))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 160, 176)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 32, 48))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 176, 192)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 48, 64))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 176, 192)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 48, 64))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 192, 208)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 64, 80))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 192, 208)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 64, 80))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 208, 224)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 80, 96))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 208, 224)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 80, 96))), 1, 17) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 224, 240)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 96, 112))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 224, 240)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 96, 112))), 1, 17) #fi), (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 240, 256)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 112, 128))), 0, 1), mi(1, 1)) #then mi(16, 65535) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 240, 256)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 112, 128))), 1, 17) #fi)))))))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
