code: dpps $0x0, (%rbx), %xmm1

  maybe read:      { %rbx %xmm1 }
  must read:       { %rbx %xmm1 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : concatenateMInt( extractMInt( %ymm1, 0, 128), concatenateMInt( concatenateMInt( concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 4, 5), mi(1, 1)) #then add_single(add_single((#ifMInt eqMInt( extractMInt( Imm8, 3, 4), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 224, 256), extractMInt( TMP_BV_128_0, 96, 128)) #else mi(32, 0) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 2, 3), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 192, 224), extractMInt( TMP_BV_128_0, 64, 96)) #else mi(32, 0) #fi)), add_single((#ifMInt eqMInt( extractMInt( Imm8, 1, 2), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 160, 192), extractMInt( TMP_BV_128_0, 32, 64)) #else mi(32, 0) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 0, 1), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 128, 160), extractMInt( TMP_BV_128_0, 0, 32)) #else mi(32, 0) #fi))) #else mi(32, 0) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 5, 6), mi(1, 1)) #then add_single(add_single((#ifMInt eqMInt( extractMInt( Imm8, 3, 4), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 224, 256), extractMInt( TMP_BV_128_0, 96, 128)) #else mi(32, 0) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 2, 3), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 192, 224), extractMInt( TMP_BV_128_0, 64, 96)) #else mi(32, 0) #fi)), add_single((#ifMInt eqMInt( extractMInt( Imm8, 1, 2), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 160, 192), extractMInt( TMP_BV_128_0, 32, 64)) #else mi(32, 0) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 0, 1), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 128, 160), extractMInt( TMP_BV_128_0, 0, 32)) #else mi(32, 0) #fi))) #else mi(32, 0) #fi)), (#ifMInt eqMInt( extractMInt( Imm8, 6, 7), mi(1, 1)) #then add_single(add_single((#ifMInt eqMInt( extractMInt( Imm8, 3, 4), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 224, 256), extractMInt( TMP_BV_128_0, 96, 128)) #else mi(32, 0) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 2, 3), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 192, 224), extractMInt( TMP_BV_128_0, 64, 96)) #else mi(32, 0) #fi)), add_single((#ifMInt eqMInt( extractMInt( Imm8, 1, 2), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 160, 192), extractMInt( TMP_BV_128_0, 32, 64)) #else mi(32, 0) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 0, 1), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 128, 160), extractMInt( TMP_BV_128_0, 0, 32)) #else mi(32, 0) #fi))) #else mi(32, 0) #fi)), (#ifMInt eqMInt( extractMInt( Imm8, 7, 8), mi(1, 1)) #then add_single(add_single((#ifMInt eqMInt( extractMInt( Imm8, 3, 4), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 224, 256), extractMInt( TMP_BV_128_0, 96, 128)) #else mi(32, 0) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 2, 3), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 192, 224), extractMInt( TMP_BV_128_0, 64, 96)) #else mi(32, 0) #fi)), add_single((#ifMInt eqMInt( extractMInt( Imm8, 1, 2), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 160, 192), extractMInt( TMP_BV_128_0, 32, 64)) #else mi(32, 0) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 0, 1), mi(1, 1)) #then mul_single(extractMInt( %ymm1, 128, 160), extractMInt( TMP_BV_128_0, 0, 32)) #else mi(32, 0) #fi))) #else mi(32, 0) #fi)))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
