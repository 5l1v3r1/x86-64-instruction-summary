code: vpunpckhbw (%rbx), %ymm2, %ymm1

  maybe read:      { %rbx %ymm2 }
  must read:       { %rbx %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 0, 8), extractMInt( %ymm2, 0, 8)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 8, 16), extractMInt( %ymm2, 8, 16)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 16, 24), extractMInt( %ymm2, 16, 24)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 24, 32), extractMInt( %ymm2, 24, 32)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 32, 40), extractMInt( %ymm2, 32, 40)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 40, 48), extractMInt( %ymm2, 40, 48)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 48, 56), extractMInt( %ymm2, 48, 56)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 56, 64), extractMInt( %ymm2, 56, 64)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 128, 136), extractMInt( %ymm2, 128, 136)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 136, 144), extractMInt( %ymm2, 136, 144)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 144, 152), extractMInt( %ymm2, 144, 152)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 152, 160), extractMInt( %ymm2, 152, 160)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 160, 168), extractMInt( %ymm2, 160, 168)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 168, 176), extractMInt( %ymm2, 168, 176)), concatenateMInt( concatenateMInt( extractMInt( TMP_BV_256_0, 176, 184), extractMInt( %ymm2, 176, 184)), concatenateMInt( extractMInt( TMP_BV_256_0, 184, 192), extractMInt( %ymm2, 184, 192)))))))))))))))))

Information about memory reads:
  Value TMP_BV_256_0 (32 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
