code: sarl $0x1, (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : (let ((a!1 ((_ extract 0 0)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01)))))
  (or (and true (= a!1 #b1)) false))
%pf    : (let ((a!1 ((_ extract 1 1)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01))))
      (a!2 ((_ extract 2 2)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01))))
      (a!3 ((_ extract 3 3)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01))))
      (a!4 ((_ extract 4 4)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01))))
      (a!5 ((_ extract 5 5)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01))))
      (a!6 ((_ extract 6 6)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01))))
      (a!7 ((_ extract 7 7)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01))))
      (a!8 ((_ extract 8 8)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01)))))
  (not (xor (= a!1 #b1)
            (= a!2 #b1)
            (= a!3 #b1)
            (= a!4 #b1)
            (= a!5 #b1)
            (= a!6 #b1)
            (= a!7 #b1)
            (= a!8 #b1))))
%af    : TMP_BOOL_12
%zf    : (let ((a!1 ((_ extract 64 1)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01)))))
  (= a!1 #x0000000000000000))
%sf    : (let ((a!1 ((_ extract 64 64)
             (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
                     (concat #b000000000000000000000000000000000000000000000000000000000
                             #x01)))))
  (= a!1 #b1))
%of    : false

Information about memory reads:
  Value TMP_BV_32_0 (4 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    ((_ extract 32 1)
  (bvashr (concat ((_ sign_extend 32) TMP_BV_32_0) #b0)
          (concat #b000000000000000000000000000000000000000000000000000000000
                  #x01))) (4 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
