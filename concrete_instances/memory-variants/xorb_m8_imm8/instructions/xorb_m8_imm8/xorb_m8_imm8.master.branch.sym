code: xorb $0x0, (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

xorb $0x0, (%rbx): Hindex1(9)
xorb $0x0, (%rbx): Hindex1(9)
Formula:

%cf    : false
%pf    : (let ((a!1 (xor (= (bvxor ((_ extract 0 0) TMP_BV_8_0) #b0) #b1)
                (= (bvxor ((_ extract 1 1) TMP_BV_8_0) #b0) #b1)
                (= (bvxor ((_ extract 2 2) TMP_BV_8_0) #b0) #b1)
                (= (bvxor ((_ extract 3 3) TMP_BV_8_0) #b0) #b1)
                (= (bvxor ((_ extract 4 4) TMP_BV_8_0) #b0) #b1)
                (= (bvxor ((_ extract 5 5) TMP_BV_8_0) #b0) #b1)
                (= (bvxor ((_ extract 6 6) TMP_BV_8_0) #b0) #b1)
                (= (bvxor ((_ extract 7 7) TMP_BV_8_0) #b0) #b1))))
  (not a!1))
%af    : TMP_BOOL_0
%zf    : (= (bvxor TMP_BV_8_0 #x00) #x00)
%sf    : (= (bvxor ((_ extract 7 7) TMP_BV_8_0) #b0) #b1)
%of    : false

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (bvxor TMP_BV_8_0 #x00) (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv
    (and (not sigfpe) (not sigbus) false)
    (and (not sigfpe) (not sigbus) false))
