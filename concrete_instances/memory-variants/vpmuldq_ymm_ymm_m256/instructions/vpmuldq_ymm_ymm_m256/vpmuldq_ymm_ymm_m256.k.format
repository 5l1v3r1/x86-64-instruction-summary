code: vpmuldq (%rbx), %ymm2, %ymm1

  maybe read:      { %rbx %ymm2 }
  must read:       { %rbx %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : concatenateMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 32, 64))), mi(64, svalueMInt(extractMInt( TMP_BV_256_0, 32, 64)))), concatenateMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 96, 128))), mi(64, svalueMInt(extractMInt( TMP_BV_256_0, 96, 128)))), concatenateMInt( mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 160, 192))), mi(64, svalueMInt(extractMInt( TMP_BV_256_0, 160, 192)))), mulMInt( mi(64, svalueMInt(extractMInt( %ymm2, 224, 256))), mi(64, svalueMInt(extractMInt( TMP_BV_256_0, 224, 256)))))))

Information about memory reads:
  Value TMP_BV_256_0 (32 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
