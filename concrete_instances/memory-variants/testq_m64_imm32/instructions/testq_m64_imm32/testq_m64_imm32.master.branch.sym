code: testq $0x0, (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

testq $0x0, (%rbx): Hindex1(9)
testq $0x0, (%rbx): Hindex1(9)
Formula:

%cf    : false
%pf    : (let ((a!1 (xor (= (bvand ((_ extract 0 0) TMP_BV_64_0) #b0) #b1)
                (= (bvand ((_ extract 1 1) TMP_BV_64_0) #b0) #b1)
                (= (bvand ((_ extract 2 2) TMP_BV_64_0) #b0) #b1)
                (= (bvand ((_ extract 3 3) TMP_BV_64_0) #b0) #b1)
                (= (bvand ((_ extract 4 4) TMP_BV_64_0) #b0) #b1)
                (= (bvand ((_ extract 5 5) TMP_BV_64_0) #b0) #b1)
                (= (bvand ((_ extract 6 6) TMP_BV_64_0) #b0) #b1)
                (= (bvand ((_ extract 7 7) TMP_BV_64_0) #b0) #b1))))
  (not a!1))
%af    : TMP_BOOL_0
%zf    : (= (bvand TMP_BV_64_0 #x0000000000000000) #x0000000000000000)
%sf    : (= (bvand ((_ extract 63 63) TMP_BV_64_0) #b0) #b1)
%of    : false

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
