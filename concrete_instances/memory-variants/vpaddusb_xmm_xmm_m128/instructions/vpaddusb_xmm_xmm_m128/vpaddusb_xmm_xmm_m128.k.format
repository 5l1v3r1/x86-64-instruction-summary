code: vpaddusb (%rbx), %xmm2, %xmm1

  maybe read:      { %rbx %xmm2 }
  must read:       { %rbx %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 128, 136)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 0, 8))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 128, 136)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 0, 8))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 136, 144)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 8, 16))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 136, 144)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 8, 16))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 144, 152)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 16, 24))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 144, 152)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 16, 24))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 152, 160)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 24, 32))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 152, 160)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 24, 32))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 160, 168)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 32, 40))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 160, 168)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 32, 40))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 168, 176)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 40, 48))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 168, 176)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 40, 48))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 176, 184)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 48, 56))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 176, 184)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 48, 56))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 184, 192)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 56, 64))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 184, 192)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 56, 64))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 192, 200)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 64, 72))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 192, 200)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 64, 72))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 200, 208)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 72, 80))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 200, 208)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 72, 80))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 208, 216)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 80, 88))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 208, 216)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 80, 88))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 216, 224)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 88, 96))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 216, 224)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 88, 96))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 224, 232)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 96, 104))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 224, 232)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 96, 104))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 232, 240)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 104, 112))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 232, 240)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 104, 112))), 1, 9) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 240, 248)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 112, 120))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 240, 248)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 112, 120))), 1, 9) #fi), (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 248, 256)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 120, 128))), 0, 1), mi(1, 1)) #then mi(8, 255) #else extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( %ymm2, 248, 256)), concatenateMInt( mi(1, 0), extractMInt( TMP_BV_128_0, 120, 128))), 1, 9) #fi)))))))))))))))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
