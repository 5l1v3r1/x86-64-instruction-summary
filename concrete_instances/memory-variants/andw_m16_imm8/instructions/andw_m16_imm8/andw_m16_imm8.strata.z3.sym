code: andw $0x0, (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : (let ((a!1 (= (bvxor (bvor ((_ extract 0 0) TMP_BV_16_3) #b0)
                     #b0
                     ((_ extract 0 0) TMP_BV_16_4))
              #b1))
      (a!2 (= (bvxor (bvor ((_ extract 1 1) TMP_BV_16_5) #b0)
                     #b0
                     ((_ extract 1 1) TMP_BV_16_6))
              #b1))
      (a!3 (= (bvxor (bvor ((_ extract 2 2) TMP_BV_16_7) #b0)
                     #b0
                     ((_ extract 2 2) TMP_BV_16_8))
              #b1))
      (a!4 (= (bvxor (bvor ((_ extract 3 3) TMP_BV_16_9) #b0)
                     #b0
                     ((_ extract 3 3) TMP_BV_16_10))
              #b1))
      (a!5 (= (bvxor (bvor ((_ extract 4 4) TMP_BV_16_11) #b0)
                     #b0
                     ((_ extract 4 4) TMP_BV_16_12))
              #b1))
      (a!6 (= (bvxor (bvor ((_ extract 5 5) TMP_BV_16_13) #b0)
                     #b0
                     ((_ extract 5 5) TMP_BV_16_14))
              #b1))
      (a!7 (= (bvxor (bvor ((_ extract 6 6) TMP_BV_16_15) #b0)
                     #b0
                     ((_ extract 6 6) TMP_BV_16_16))
              #b1))
      (a!8 (= (bvxor (bvor ((_ extract 7 7) TMP_BV_16_17) #b0)
                     #b0
                     ((_ extract 7 7) TMP_BV_16_18))
              #b1)))
  (not (xor a!1 a!2 a!3 a!4 a!5 a!6 a!7 a!8)))
%af    : TMP_BOOL_40
%zf    : (let ((a!1 (bvxor (bvxor ((_ extract 15 8) TMP_BV_16_1) #xff)
                  (bvor #x00 (bvxor ((_ extract 15 8) TMP_BV_16_1) #xff)))))
(let ((a!2 (concat a!1
                   (bvxor (bvor ((_ extract 7 0) TMP_BV_16_2) #x00)
                          #x00
                          ((_ extract 7 0) TMP_BV_16_2)))))
  (= ((_ sign_extend 48) a!2) #x0000000000000000)))
%sf    : (let ((a!1 (bvxor (bvxor ((_ extract 15 8) TMP_BV_16_1) #xff)
                  (bvor #x00 (bvxor ((_ extract 15 8) TMP_BV_16_1) #xff)))))
(let ((a!2 (concat a!1
                   (bvxor (bvor ((_ extract 7 0) TMP_BV_16_2) #x00)
                          #x00
                          ((_ extract 7 0) TMP_BV_16_2)))))
  (= ((_ extract 63 63) ((_ sign_extend 48) a!2)) #b1)))
%of    : false

Information about memory reads:
  Value TMP_BV_16_0 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_1 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_2 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_3 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_4 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_5 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_6 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_7 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_8 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_9 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_10 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_11 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_12 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_13 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_14 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_15 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_16 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_17 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_18 (2 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (let ((a!1 (bvxor (bvxor ((_ extract 15 8) TMP_BV_16_1) #xff)
                  (bvor #x00 (bvxor ((_ extract 15 8) TMP_BV_16_1) #xff)))))
  (concat a!1
          (bvxor (bvor ((_ extract 7 0) TMP_BV_16_2) #x00)
                 #x00
                 ((_ extract 7 0) TMP_BV_16_2)))) (2 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
