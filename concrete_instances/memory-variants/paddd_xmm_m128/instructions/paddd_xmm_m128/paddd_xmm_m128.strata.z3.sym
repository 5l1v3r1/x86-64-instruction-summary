code: paddd (%rbx), %xmm1

  maybe read:      { %rbx %xmm1 }
  must read:       { %rbx %xmm1 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : (let ((a!1 (bvadd (concat #b0 (concat #x00000000 ((_ extract 127 96) %ymm1)))
                  (concat #b0
                          (concat #x00000000 ((_ extract 127 96) TMP_BV_128_0)))))
      (a!2 (bvadd (concat #b0
                          (concat ((_ extract 95 64) %ymm1)
                                  ((_ extract 95 64) TMP_BV_128_1)))
                  (concat #b0 (concat #x00000000 ((_ extract 95 64) %ymm1)))))
      (a!3 (bvadd (concat #b0
                          (concat ((_ extract 63 32) TMP_BV_128_2)
                                  ((_ extract 63 32) TMP_BV_128_2)))
                  (concat #b0
                          (concat ((_ extract 63 32) TMP_BV_128_2)
                                  ((_ extract 63 32) %ymm1)))))
      (a!4 (bvadd (concat #b0
                          (concat ((_ extract 31 0) TMP_BV_128_3)
                                  ((_ extract 31 0) TMP_BV_128_3)))
                  (concat #b0
                          (concat ((_ extract 31 0) TMP_BV_128_3)
                                  ((_ extract 31 0) %ymm1))))))
(let ((a!5 (concat (concat (concat ((_ extract 31 0) a!1)
                                   ((_ extract 31 0) a!2))
                           ((_ extract 31 0) a!3))
                   ((_ extract 31 0) a!4))))
  (concat ((_ extract 255 128) %ymm1) a!5)))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_1 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_2 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_3 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
