code: testb %ah, (%rbx)

  maybe read:      { %ah %rbx }
  must read:       { %ah %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : (let ((a!1 (= (bvxor (bvor ((_ extract 8 8) %rax) ((_ extract 0 0) TMP_BV_8_0))
                     ((_ extract 0 0) TMP_BV_8_1)
                     ((_ extract 8 8) %rax))
              #b1))
      (a!2 (= (bvxor (bvor ((_ extract 9 9) %rax) ((_ extract 1 1) TMP_BV_8_2))
                     ((_ extract 1 1) TMP_BV_8_3)
                     ((_ extract 9 9) %rax))
              #b1))
      (a!3 (= (bvxor (bvor ((_ extract 10 10) %rax)
                           ((_ extract 2 2) TMP_BV_8_4))
                     ((_ extract 2 2) TMP_BV_8_5)
                     ((_ extract 10 10) %rax))
              #b1))
      (a!4 (= (bvxor (bvor ((_ extract 11 11) %rax)
                           ((_ extract 3 3) TMP_BV_8_6))
                     ((_ extract 3 3) TMP_BV_8_7)
                     ((_ extract 11 11) %rax))
              #b1))
      (a!5 (= (bvxor (bvor ((_ extract 12 12) %rax)
                           ((_ extract 4 4) TMP_BV_8_8))
                     ((_ extract 4 4) TMP_BV_8_9)
                     ((_ extract 12 12) %rax))
              #b1))
      (a!6 (= (bvxor (bvor ((_ extract 13 13) %rax)
                           ((_ extract 5 5) TMP_BV_8_10))
                     ((_ extract 5 5) TMP_BV_8_11)
                     ((_ extract 13 13) %rax))
              #b1))
      (a!7 (= (bvxor (bvor ((_ extract 14 14) %rax)
                           ((_ extract 6 6) TMP_BV_8_12))
                     ((_ extract 6 6) TMP_BV_8_13)
                     ((_ extract 14 14) %rax))
              #b1))
      (a!8 (= (bvxor (bvor ((_ extract 15 15) %rax)
                           ((_ extract 7 7) TMP_BV_8_14))
                     ((_ extract 7 7) TMP_BV_8_15)
                     ((_ extract 15 15) %rax))
              #b1)))
  (not (xor a!1 a!2 a!3 a!4 a!5 a!6 a!7 a!8)))
%af    : TMP_BOOL_12
%zf    : (let ((a!1 (bvor ((_ extract 31 0) ((_ sign_extend 56) ((_ extract 15 8) %rax)))
                 ((_ extract 31 0) ((_ sign_extend 56) TMP_BV_8_16)))))
(let ((a!2 (bvxor a!1
                  ((_ extract 31 0) ((_ sign_extend 56) TMP_BV_8_16))
                  ((_ extract 31 0)
                    ((_ sign_extend 56) ((_ extract 15 8) %rax))))))
  (= a!2 #x00000000)))
%sf    : (let ((a!1 (bvor ((_ extract 31 31)
                   ((_ sign_extend 56) ((_ extract 15 8) %rax)))
                 ((_ extract 31 31) ((_ sign_extend 56) TMP_BV_8_16)))))
(let ((a!2 (bvxor a!1
                  ((_ extract 31 31) ((_ sign_extend 56) TMP_BV_8_16))
                  ((_ extract 31 31)
                    ((_ sign_extend 56) ((_ extract 15 8) %rax))))))
  (= a!2 #b1)))
%of    : false

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_1 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_2 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_3 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_4 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_5 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_6 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_7 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_8 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_9 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_10 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_11 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_12 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_13 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_14 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_15 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_16 (1 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
