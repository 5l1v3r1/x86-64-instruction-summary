code: rcll $0x1, (%rbx)

  maybe read:      { %rbx %cf }
  must read:       { %rbx %cf }
  maybe write:     { %cf %of }
  must write:      { %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

rcll $0x1, (%rbx): Hindex7(9)
rcll $0x1, (%rbx): Hindex7(9)
Formula:

%cf    : (let ((a!1 ((_ extract 32 32)
             (ext_rotate_left (concat (ite %cf #b1 #b0) TMP_BV_32_0)
                              #b000000000000000000000000000000001))))
  (= a!1 #b1))
%of    : (let ((a!1 ((_ extract 32 32)
             (ext_rotate_left (concat (ite %cf #b1 #b0) TMP_BV_32_0)
                              #b000000000000000000000000000000001)))
      (a!2 ((_ extract 31 31)
             (ext_rotate_left (concat (ite %cf #b1 #b0) TMP_BV_32_0)
                              #b000000000000000000000000000000001))))
  (or (and true (xor (= a!1 #b1) (= a!2 #b1)))
      (and false (or (and true %of) (and false TMP_BOOL_0)))))

Information about memory reads:
  Value TMP_BV_32_0 (4 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    ((_ extract 31 0)
  (ext_rotate_left (concat (ite %cf #b1 #b0) TMP_BV_32_0)
                   #b000000000000000000000000000000001)) (4 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv
    (and (not sigfpe) (not sigbus) false)
    (and (not sigfpe) (not sigbus) false))
