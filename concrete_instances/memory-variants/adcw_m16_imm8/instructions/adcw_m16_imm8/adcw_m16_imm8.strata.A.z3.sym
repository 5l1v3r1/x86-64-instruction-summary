code: adcw $0x0, (%rbx)

  maybe read:      { %rbx %cf }
  must read:       { %rbx %cf }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : ((_ extract 16 16)
  (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
         (concat #b0 TMP_BV_16_1)))

%pf    : (let ((a!1 (= ((_ extract 0 0)
                (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                       (concat #b0 TMP_BV_16_1)))
              #b1))
      (a!2 (= ((_ extract 1 1)
                (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                       (concat #b0 TMP_BV_16_1)))
              #b1))
      (a!3 (= ((_ extract 2 2)
                (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                       (concat #b0 TMP_BV_16_1)))
              #b1))
      (a!4 (= ((_ extract 3 3)
                (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                       (concat #b0 TMP_BV_16_1)))
              #b1))
      (a!5 (= ((_ extract 4 4)
                (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                       (concat #b0 TMP_BV_16_1)))
              #b1))
      (a!6 (= ((_ extract 5 5)
                (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                       (concat #b0 TMP_BV_16_1)))
              #b1))
      (a!7 (= ((_ extract 6 6)
                (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                       (concat #b0 TMP_BV_16_1)))
              #b1))
      (a!8 (= ((_ extract 7 7)
                (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                       (concat #b0 TMP_BV_16_1)))
              #b1)))
  (ite (not (xor a!1 a!2 a!3 a!4 a!5 a!6 a!7 a!8)) #b1 #b0))

%af    : (bvxor ((_ extract 4 4) TMP_BV_16_1)
       ((_ extract 4 4)
         (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                (concat #b0 TMP_BV_16_1))))

%zf    : (let ((a!1 (= ((_ extract 15 0)
                (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                       (concat #b0 TMP_BV_16_1)))
              #x0000)))
  (ite a!1 #b1 #b0))

%sf    : ((_ extract 15 15)
  (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
         (concat #b0 TMP_BV_16_1)))

%of    : (let ((a!1 (= ((_ extract 15 15)
                (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
                       (concat #b0 TMP_BV_16_1)))
              #b1)))
(let ((a!2 (and (= false (= ((_ extract 15 15) TMP_BV_16_1) #b1))
                (not (= false a!1)))))
  (ite a!2 #b1 #b0)))


Information about memory reads:
  Value TMP_BV_16_0
 (2 bytes)
    was read at address %rbx
.
  Value TMP_BV_16_1
 (2 bytes)
    was read at address %rbx
.

Information about memory writes:
  Address %rbx
 was updated to
    ((_ extract 15 0)
  (bvadd (ite %cf #b00000000000000001 #b00000000000000000)
         (concat #b0 TMP_BV_16_1)))
 (2 bytes).

sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))

