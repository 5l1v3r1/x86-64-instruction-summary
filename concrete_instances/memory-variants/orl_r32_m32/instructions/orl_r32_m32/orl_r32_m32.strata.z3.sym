code: orl (%rcx), %ebx

  maybe read:      { %rcx %ebx }
  must read:       { %rcx %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : (concat #x00000000 (bvor ((_ extract 31 0) %rbx) TMP_BV_32_0))

%cf    : false
%pf    : (let ((a!1 (xor (= (bvor ((_ extract 0 0) %rbx) ((_ extract 0 0) TMP_BV_32_1))
                   #b1)
                (= (bvor ((_ extract 1 1) %rbx) ((_ extract 1 1) TMP_BV_32_2))
                   #b1)
                (= (bvor ((_ extract 2 2) %rbx) ((_ extract 2 2) TMP_BV_32_3))
                   #b1)
                (= (bvor ((_ extract 3 3) %rbx) ((_ extract 3 3) TMP_BV_32_4))
                   #b1)
                (= (bvor ((_ extract 4 4) %rbx) ((_ extract 4 4) TMP_BV_32_5))
                   #b1)
                (= (bvor ((_ extract 5 5) %rbx) ((_ extract 5 5) TMP_BV_32_6))
                   #b1)
                (= (bvor ((_ extract 6 6) %rbx) ((_ extract 6 6) TMP_BV_32_7))
                   #b1)
                (= (bvor ((_ extract 7 7) %rbx) ((_ extract 7 7) TMP_BV_32_8))
                   #b1))))
  (not a!1))
%af    : TMP_BOOL_2
%zf    : (= (bvor ((_ extract 31 0) %rbx) TMP_BV_32_0) #x00000000)
%sf    : (= (bvor ((_ extract 31 31) %rbx) ((_ extract 31 31) TMP_BV_32_9)) #b1)
%of    : false

Information about memory reads:
  Value TMP_BV_32_0 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_1 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_2 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_3 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_4 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_5 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_6 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_7 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_8 (4 bytes)
    was read at address %rcx.
  Value TMP_BV_32_9 (4 bytes)
    was read at address %rcx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
