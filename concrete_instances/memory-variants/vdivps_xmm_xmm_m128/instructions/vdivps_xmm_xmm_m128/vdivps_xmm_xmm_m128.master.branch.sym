code: vdivps (%rbx), %xmm2, %xmm1

  maybe read:      { %rbx %xmm2 }
  must read:       { %rbx %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

vdivps (%rbx), %xmm2, %xmm1: Hindex8(9)
vdivps (%rbx), %xmm2, %xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall: Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall: Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
vdivps %ymm5, %ymm6, %ymm2: Hindex0(9)
callq .move_128_64_xmm2_xmm8_xmm9: Hindex8(9)
callq .move_64_128_xmm8_xmm9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
vzeroall: Hindex1(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
vminpd %ymm2, %ymm2, %ymm1: Hindex0(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
vzeroall: Hindex1(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
Formula:

%ymm1  : (let ((a!1 (concat (concat (div_single ((_ extract 127 96) %ymm2)
                                       ((_ extract 127 96) TMP_BV_128_0))
                           (div_single ((_ extract 95 64) %ymm2)
                                       ((_ extract 95 64) TMP_BV_128_1)))
                   (concat (div_single ((_ extract 63 32) %ymm2)
                                       ((_ extract 63 32) TMP_BV_128_2))
                           (div_single ((_ extract 31 0) %ymm2)
                                       ((_ extract 31 0) TMP_BV_128_3))))))
  (concat #x00000000000000000000000000000000 a!1))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_1 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_2 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_3 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
