code: vpsrld (%rbx), %ymm2, %ymm1

  maybe read:      { %rbx %ymm2 }
  must read:       { %rbx %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

vpsrld (%rbx), %ymm2, %ymm1: Hindex1(9)
vpsrld (%rbx), %ymm2, %ymm1: Hindex1(9)
Formula:

%ymm1  : (let ((a!1 (concat (bvlshr ((_ extract 95 64) %ymm2)
                           ((_ extract 31 0) TMP_BV_128_0))
                   (concat (bvlshr ((_ extract 63 32) %ymm2)
                                   ((_ extract 31 0) TMP_BV_128_0))
                           (bvlshr ((_ extract 31 0) %ymm2)
                                   ((_ extract 31 0) TMP_BV_128_0))))))
(let ((a!2 (concat (bvlshr ((_ extract 159 128) %ymm2)
                           ((_ extract 31 0) TMP_BV_128_0))
                   (concat (bvlshr ((_ extract 127 96) %ymm2)
                                   ((_ extract 31 0) TMP_BV_128_0))
                           a!1))))
(let ((a!3 (concat (bvlshr ((_ extract 223 192) %ymm2)
                           ((_ extract 31 0) TMP_BV_128_0))
                   (concat (bvlshr ((_ extract 191 160) %ymm2)
                                   ((_ extract 31 0) TMP_BV_128_0))
                           a!2))))
  (ite (bvugt ((_ extract 63 0) TMP_BV_128_0) #x000000000000001f)
       #x0000000000000000000000000000000000000000000000000000000000000000
       (concat (bvlshr ((_ extract 255 224) %ymm2)
                       ((_ extract 31 0) TMP_BV_128_0))
               a!3)))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
