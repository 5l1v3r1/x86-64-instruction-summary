code: psadbw (%rbx), %xmm1

  maybe read:      { %rbx %xmm1 }
  must read:       { %rbx %xmm1 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : concatenateMInt( extractMInt( %ymm1, 0, 128), concatenateMInt( concatenateMInt( mi(48, 0), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 128, 136), extractMInt( TMP_BV_128_0, 0, 8)) #then subMInt( extractMInt( %ymm1, 128, 136), extractMInt( TMP_BV_128_0, 0, 8)) #else subMInt( extractMInt( TMP_BV_128_0, 0, 8), extractMInt( %ymm1, 128, 136)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 136, 144), extractMInt( TMP_BV_128_0, 8, 16)) #then subMInt( extractMInt( %ymm1, 136, 144), extractMInt( TMP_BV_128_0, 8, 16)) #else subMInt( extractMInt( TMP_BV_128_0, 8, 16), extractMInt( %ymm1, 136, 144)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 144, 152), extractMInt( TMP_BV_128_0, 16, 24)) #then subMInt( extractMInt( %ymm1, 144, 152), extractMInt( TMP_BV_128_0, 16, 24)) #else subMInt( extractMInt( TMP_BV_128_0, 16, 24), extractMInt( %ymm1, 144, 152)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 152, 160), extractMInt( TMP_BV_128_0, 24, 32)) #then subMInt( extractMInt( %ymm1, 152, 160), extractMInt( TMP_BV_128_0, 24, 32)) #else subMInt( extractMInt( TMP_BV_128_0, 24, 32), extractMInt( %ymm1, 152, 160)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 160, 168), extractMInt( TMP_BV_128_0, 32, 40)) #then subMInt( extractMInt( %ymm1, 160, 168), extractMInt( TMP_BV_128_0, 32, 40)) #else subMInt( extractMInt( TMP_BV_128_0, 32, 40), extractMInt( %ymm1, 160, 168)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 168, 176), extractMInt( TMP_BV_128_0, 40, 48)) #then subMInt( extractMInt( %ymm1, 168, 176), extractMInt( TMP_BV_128_0, 40, 48)) #else subMInt( extractMInt( TMP_BV_128_0, 40, 48), extractMInt( %ymm1, 168, 176)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 176, 184), extractMInt( TMP_BV_128_0, 48, 56)) #then subMInt( extractMInt( %ymm1, 176, 184), extractMInt( TMP_BV_128_0, 48, 56)) #else subMInt( extractMInt( TMP_BV_128_0, 48, 56), extractMInt( %ymm1, 176, 184)) #fi)), concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 184, 192), extractMInt( TMP_BV_128_0, 56, 64)) #then subMInt( extractMInt( %ymm1, 184, 192), extractMInt( TMP_BV_128_0, 56, 64)) #else subMInt( extractMInt( TMP_BV_128_0, 56, 64), extractMInt( %ymm1, 184, 192)) #fi)))))))))), concatenateMInt( mi(48, 0), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 192, 200), extractMInt( TMP_BV_128_0, 64, 72)) #then subMInt( extractMInt( %ymm1, 192, 200), extractMInt( TMP_BV_128_0, 64, 72)) #else subMInt( extractMInt( TMP_BV_128_0, 64, 72), extractMInt( %ymm1, 192, 200)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 200, 208), extractMInt( TMP_BV_128_0, 72, 80)) #then subMInt( extractMInt( %ymm1, 200, 208), extractMInt( TMP_BV_128_0, 72, 80)) #else subMInt( extractMInt( TMP_BV_128_0, 72, 80), extractMInt( %ymm1, 200, 208)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 208, 216), extractMInt( TMP_BV_128_0, 80, 88)) #then subMInt( extractMInt( %ymm1, 208, 216), extractMInt( TMP_BV_128_0, 80, 88)) #else subMInt( extractMInt( TMP_BV_128_0, 80, 88), extractMInt( %ymm1, 208, 216)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 216, 224), extractMInt( TMP_BV_128_0, 88, 96)) #then subMInt( extractMInt( %ymm1, 216, 224), extractMInt( TMP_BV_128_0, 88, 96)) #else subMInt( extractMInt( TMP_BV_128_0, 88, 96), extractMInt( %ymm1, 216, 224)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 224, 232), extractMInt( TMP_BV_128_0, 96, 104)) #then subMInt( extractMInt( %ymm1, 224, 232), extractMInt( TMP_BV_128_0, 96, 104)) #else subMInt( extractMInt( TMP_BV_128_0, 96, 104), extractMInt( %ymm1, 224, 232)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 232, 240), extractMInt( TMP_BV_128_0, 104, 112)) #then subMInt( extractMInt( %ymm1, 232, 240), extractMInt( TMP_BV_128_0, 104, 112)) #else subMInt( extractMInt( TMP_BV_128_0, 104, 112), extractMInt( %ymm1, 232, 240)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 240, 248), extractMInt( TMP_BV_128_0, 112, 120)) #then subMInt( extractMInt( %ymm1, 240, 248), extractMInt( TMP_BV_128_0, 112, 120)) #else subMInt( extractMInt( TMP_BV_128_0, 112, 120), extractMInt( %ymm1, 240, 248)) #fi)), concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( %ymm1, 248, 256), extractMInt( TMP_BV_128_0, 120, 128)) #then subMInt( extractMInt( %ymm1, 248, 256), extractMInt( TMP_BV_128_0, 120, 128)) #else subMInt( extractMInt( TMP_BV_128_0, 120, 128), extractMInt( %ymm1, 248, 256)) #fi))))))))))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
