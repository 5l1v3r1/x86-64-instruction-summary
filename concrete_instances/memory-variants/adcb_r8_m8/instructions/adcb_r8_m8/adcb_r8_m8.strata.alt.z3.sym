code: adcb (%rcx), %bl

  maybe read:      { %rcx %bl %cf }
  must read:       { %rcx %bl %cf }
  maybe write:     { %bl %cf %pf %af %zf %sf %of }
  must write:      { %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 TMP_BV_8_0) #b000000001)
                       (concat #b0 TMP_BV_8_0))
                  (concat #b0 ((_ extract 7 0) %rbx)))))
  (concat ((_ extract 63 8) %rbx) ((_ extract 7 0) a!1)))

%cf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 TMP_BV_8_0) #b000000001)
                       (concat #b0 TMP_BV_8_0))
                  (concat #b0 ((_ extract 7 0) %rbx)))))
  (= ((_ extract 8 8) a!1) #b1))
%pf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 TMP_BV_8_0) #b000000001)
                       (concat #b0 TMP_BV_8_0))
                  (concat #b0 ((_ extract 7 0) %rbx)))))
  (not (xor (= ((_ extract 0 0) a!1) #b1)
            (= ((_ extract 1 1) a!1) #b1)
            (= ((_ extract 2 2) a!1) #b1)
            (= ((_ extract 3 3) a!1) #b1)
            (= ((_ extract 4 4) a!1) #b1)
            (= ((_ extract 5 5) a!1) #b1)
            (= ((_ extract 6 6) a!1) #b1)
            (= ((_ extract 7 7) a!1) #b1))))
%af    : (let ((a!1 ((_ extract 4 4)
             (bvadd (concat #b0 ((_ extract 3 0) TMP_BV_8_1))
                    (concat #b0 ((_ extract 3 0) %rbx))))))
  (= a!1 #b1))
%zf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 TMP_BV_8_0) #b000000001)
                       (concat #b0 TMP_BV_8_0))
                  (concat #b0 ((_ extract 7 0) %rbx)))))
  (= ((_ extract 7 0) a!1) #x00))
%sf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 TMP_BV_8_0) #b000000001)
                       (concat #b0 TMP_BV_8_0))
                  (concat #b0 ((_ extract 7 0) %rbx)))))
  (= ((_ extract 7 7) a!1) #b1))
%of    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 TMP_BV_8_0) #b000000001)
                       (concat #b0 TMP_BV_8_0))
                  (concat #b0 ((_ extract 7 0) %rbx)))))
(let ((a!2 (not (= (= ((_ extract 7 7) TMP_BV_8_0) #b1)
                   (= ((_ extract 7 7) a!1) #b1)))))
  (and (= (= ((_ extract 7 7) TMP_BV_8_0) #b1) (= ((_ extract 7 7) %rbx) #b1))
       a!2)))

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rcx.
  Value TMP_BV_8_1 (1 bytes)
    was read at address %rcx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv
    (and (not sigfpe) (not sigbus) false)
    (and (not sigfpe) (not sigbus) false))
