code: vpmovsxbw (%rbx), %ymm1

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 0, 8))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 8, 16))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 16, 24))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 24, 32))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 32, 40))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 40, 48))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 48, 56))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 56, 64))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 64, 72))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 72, 80))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 80, 88))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 88, 96))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 96, 104))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 104, 112))), concatenateMInt( mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 112, 120))), mi(16, svalueMInt(extractMInt( TMP_BV_128_0, 120, 128))))))))))))))))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
