code: vpblendw $0x0, (%rbx), %ymm2, %ymm1

  maybe read:      { %rbx %ymm2 }
  must read:       { %rbx %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 0, 1), mi(1, 0)) #then extractMInt( %ymm2, 0, 16) #else extractMInt( TMP_BV_256_0, 0, 16) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 1, 2), mi(1, 0)) #then extractMInt( %ymm2, 16, 32) #else extractMInt( TMP_BV_256_0, 16, 32) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 2, 3), mi(1, 0)) #then extractMInt( %ymm2, 32, 48) #else extractMInt( TMP_BV_256_0, 32, 48) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 3, 4), mi(1, 0)) #then extractMInt( %ymm2, 48, 64) #else extractMInt( TMP_BV_256_0, 48, 64) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 4, 5), mi(1, 0)) #then extractMInt( %ymm2, 64, 80) #else extractMInt( TMP_BV_256_0, 64, 80) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 5, 6), mi(1, 0)) #then extractMInt( %ymm2, 80, 96) #else extractMInt( TMP_BV_256_0, 80, 96) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 6, 7), mi(1, 0)) #then extractMInt( %ymm2, 96, 112) #else extractMInt( TMP_BV_256_0, 96, 112) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 7, 8), mi(1, 0)) #then extractMInt( %ymm2, 112, 128) #else extractMInt( TMP_BV_256_0, 112, 128) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 0, 1), mi(1, 0)) #then extractMInt( %ymm2, 128, 144) #else extractMInt( TMP_BV_256_0, 128, 144) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 1, 2), mi(1, 0)) #then extractMInt( %ymm2, 144, 160) #else extractMInt( TMP_BV_256_0, 144, 160) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 2, 3), mi(1, 0)) #then extractMInt( %ymm2, 160, 176) #else extractMInt( TMP_BV_256_0, 160, 176) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 3, 4), mi(1, 0)) #then extractMInt( %ymm2, 176, 192) #else extractMInt( TMP_BV_256_0, 176, 192) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 4, 5), mi(1, 0)) #then extractMInt( %ymm2, 192, 208) #else extractMInt( TMP_BV_256_0, 192, 208) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 5, 6), mi(1, 0)) #then extractMInt( %ymm2, 208, 224) #else extractMInt( TMP_BV_256_0, 208, 224) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 6, 7), mi(1, 0)) #then extractMInt( %ymm2, 224, 240) #else extractMInt( TMP_BV_256_0, 224, 240) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 7, 8), mi(1, 0)) #then extractMInt( %ymm2, 240, 256) #else extractMInt( TMP_BV_256_0, 240, 256) #fi))))))))))))))))

Information about memory reads:
  Value TMP_BV_256_0 (32 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
