[4m[1m[34mFiring 35.[0m
Thread 1 start: vdpps_ymm_ymm_m256_imm8_0
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_0/vdpps_ymm_ymm_m256_imm8_0.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 2 start: vdpps_ymm_ymm_m256_imm8_1
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_1/vdpps_ymm_ymm_m256_imm8_1.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 5 start: vdpps_ymm_ymm_m256_imm8_4
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_4/vdpps_ymm_ymm_m256_imm8_4.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 4 start: vdpps_ymm_ymm_m256_imm8_3
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_3/vdpps_ymm_ymm_m256_imm8_3.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 3 start: vdpps_ymm_ymm_m256_imm8_2
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_2/vdpps_ymm_ymm_m256_imm8_2.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 6 start: vdpps_ymm_ymm_m256_imm8_5
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_5/vdpps_ymm_ymm_m256_imm8_5.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 7 start: vdpps_ymm_ymm_m256_imm8_6
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_6/vdpps_ymm_ymm_m256_imm8_6.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 8 start: vdpps_ymm_ymm_m256_imm8_7
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_7/vdpps_ymm_ymm_m256_imm8_7.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 9 start: vdpps_ymm_ymm_m256_imm8_8
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_8/vdpps_ymm_ymm_m256_imm8_8.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 11 start: vdpps_ymm_ymm_m256_imm8_10
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_10/vdpps_ymm_ymm_m256_imm8_10.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 10 start: vdpps_ymm_ymm_m256_imm8_9
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_9/vdpps_ymm_ymm_m256_imm8_9.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 12 start: vdpps_ymm_ymm_m256_imm8_11
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_11/vdpps_ymm_ymm_m256_imm8_11.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 13 start: vdpps_ymm_ymm_m256_imm8_12
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_12/vdpps_ymm_ymm_m256_imm8_12.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 14 start: vdpps_ymm_ymm_m256_imm8_13
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_13/vdpps_ymm_ymm_m256_imm8_13.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 15 start: vdpps_ymm_ymm_m256_imm8_14
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_14/vdpps_ymm_ymm_m256_imm8_14.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 16 start: vdpps_ymm_ymm_m256_imm8_15
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_15/vdpps_ymm_ymm_m256_imm8_15.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 18 start: vdpps_ymm_ymm_m256_imm8_17
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_17/vdpps_ymm_ymm_m256_imm8_17.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 17 start: vdpps_ymm_ymm_m256_imm8_16
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_16/vdpps_ymm_ymm_m256_imm8_16.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 19 start: vdpps_ymm_ymm_m256_imm8_18
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_18/vdpps_ymm_ymm_m256_imm8_18.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 20 start: vdpps_ymm_ymm_m256_imm8_19
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_19/vdpps_ymm_ymm_m256_imm8_19.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 21 start: vdpps_ymm_ymm_m256_imm8_20
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_20/vdpps_ymm_ymm_m256_imm8_20.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 22 start: vdpps_ymm_ymm_m256_imm8_21
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_21/vdpps_ymm_ymm_m256_imm8_21.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 23 start: vdpps_ymm_ymm_m256_imm8_22
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_22/vdpps_ymm_ymm_m256_imm8_22.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 24 start: vdpps_ymm_ymm_m256_imm8_23
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_23/vdpps_ymm_ymm_m256_imm8_23.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 25 start: vdpps_ymm_ymm_m256_imm8_24
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_24/vdpps_ymm_ymm_m256_imm8_24.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 26 start: vdpps_ymm_ymm_m256_imm8_25
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_25/vdpps_ymm_ymm_m256_imm8_25.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 27 start: vdpps_ymm_ymm_m256_imm8_26
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_26/vdpps_ymm_ymm_m256_imm8_26.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 28 start: vdpps_ymm_ymm_m256_imm8_27
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_27/vdpps_ymm_ymm_m256_imm8_27.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 29 start: vdpps_ymm_ymm_m256_imm8_28
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_28/vdpps_ymm_ymm_m256_imm8_28.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 30 start: vdpps_ymm_ymm_m256_imm8_29
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_29/vdpps_ymm_ymm_m256_imm8_29.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 31 start: vdpps_ymm_ymm_m256_imm8_30
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_30/vdpps_ymm_ymm_m256_imm8_30.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 32 start: vdpps_ymm_ymm_m256_imm8_31
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_31/vdpps_ymm_ymm_m256_imm8_31.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 33 start: vdpps_ymm_ymm_m256_imm8_32
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_32/vdpps_ymm_ymm_m256_imm8_32.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 34 start: vdpps_ymm_ymm_m256_imm8_33
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_33/vdpps_ymm_ymm_m256_imm8_33.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 35 start: vdpps_ymm_ymm_m256_imm8_34
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_34/vdpps_ymm_ymm_m256_imm8_34.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 5000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 6000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_3: 139 s
Thread 4 done!: vdpps_ymm_ymm_m256_imm8_3
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_8: 156 s
Thread 9 done!: vdpps_ymm_ymm_m256_imm8_8
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 5000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_7: 168 s
Thread 8 done!: vdpps_ymm_ymm_m256_imm8_7
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_15: 174 s
Thread 16 done!: vdpps_ymm_ymm_m256_imm8_15
Execution time vdpps_ymm_ymm_m256_imm8_0: 175 s
Thread 1 done!: vdpps_ymm_ymm_m256_imm8_0
Execution time vdpps_ymm_ymm_m256_imm8_13: 176 s
Thread 14 done!: vdpps_ymm_ymm_m256_imm8_13
Execution time vdpps_ymm_ymm_m256_imm8_10: 177 s
Thread 11 done!: vdpps_ymm_ymm_m256_imm8_10
Execution time vdpps_ymm_ymm_m256_imm8_14: 177 s
Thread 15 done!: vdpps_ymm_ymm_m256_imm8_14
Execution time vdpps_ymm_ymm_m256_imm8_9: 178 s
Thread 10 done!: vdpps_ymm_ymm_m256_imm8_9
Execution time vdpps_ymm_ymm_m256_imm8_2: 179 s
Thread 3 done!: vdpps_ymm_ymm_m256_imm8_2
Execution time vdpps_ymm_ymm_m256_imm8_32: 178 s
Thread 33 done!: vdpps_ymm_ymm_m256_imm8_32
Execution time vdpps_ymm_ymm_m256_imm8_4: 179 s
Thread 5 done!: vdpps_ymm_ymm_m256_imm8_4
Execution time vdpps_ymm_ymm_m256_imm8_5: 179 s
Thread 6 done!: vdpps_ymm_ymm_m256_imm8_5
Execution time vdpps_ymm_ymm_m256_imm8_11: 179 s
Thread 12 done!: vdpps_ymm_ymm_m256_imm8_11
Execution time vdpps_ymm_ymm_m256_imm8_6: 180 s
Thread 7 done!: vdpps_ymm_ymm_m256_imm8_6
Execution time vdpps_ymm_ymm_m256_imm8_16: 181 s
Thread 17 done!: vdpps_ymm_ymm_m256_imm8_16
Execution time vdpps_ymm_ymm_m256_imm8_1: 181 s
Thread 2 done!: vdpps_ymm_ymm_m256_imm8_1
Execution time vdpps_ymm_ymm_m256_imm8_12: 182 s
Thread 13 done!: vdpps_ymm_ymm_m256_imm8_12
Execution time vdpps_ymm_ymm_m256_imm8_18: 183 s
Thread 19 done!: vdpps_ymm_ymm_m256_imm8_18
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_33: 202 s
Thread 34 done!: vdpps_ymm_ymm_m256_imm8_33
Execution time vdpps_ymm_ymm_m256_imm8_24: 204 s
Thread 25 done!: vdpps_ymm_ymm_m256_imm8_24
Execution time vdpps_ymm_ymm_m256_imm8_20: 205 s
Thread 21 done!: vdpps_ymm_ymm_m256_imm8_20
Execution time vdpps_ymm_ymm_m256_imm8_25: 206 s
Thread 26 done!: vdpps_ymm_ymm_m256_imm8_25
Execution time vdpps_ymm_ymm_m256_imm8_31: 205 s
Thread 32 done!: vdpps_ymm_ymm_m256_imm8_31
Execution time vdpps_ymm_ymm_m256_imm8_17: 206 s
Thread 18 done!: vdpps_ymm_ymm_m256_imm8_17
Execution time vdpps_ymm_ymm_m256_imm8_34: 205 s
Thread 35 done!: vdpps_ymm_ymm_m256_imm8_34
Execution time vdpps_ymm_ymm_m256_imm8_22: 207 s
Thread 23 done!: vdpps_ymm_ymm_m256_imm8_22
Execution time vdpps_ymm_ymm_m256_imm8_28: 207 s
Thread 29 done!: vdpps_ymm_ymm_m256_imm8_28
Execution time vdpps_ymm_ymm_m256_imm8_19: 207 s
Thread 20 done!: vdpps_ymm_ymm_m256_imm8_19
Execution time vdpps_ymm_ymm_m256_imm8_29: 206 s
Thread 30 done!: vdpps_ymm_ymm_m256_imm8_29
Execution time vdpps_ymm_ymm_m256_imm8_30: 207 s
Thread 31 done!: vdpps_ymm_ymm_m256_imm8_30
Execution time vdpps_ymm_ymm_m256_imm8_21: 208 s
Thread 22 done!: vdpps_ymm_ymm_m256_imm8_21
Execution time vdpps_ymm_ymm_m256_imm8_26: 208 s
Thread 27 done!: vdpps_ymm_ymm_m256_imm8_26
Execution time vdpps_ymm_ymm_m256_imm8_23: 208 s
Thread 24 done!: vdpps_ymm_ymm_m256_imm8_23
Execution time vdpps_ymm_ymm_m256_imm8_27: 210 s
Thread 28 done!: vdpps_ymm_ymm_m256_imm8_27
[4m[1m[34mFiring 35.[0m
Thread 36 start: vdpps_ymm_ymm_m256_imm8_35
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_35/vdpps_ymm_ymm_m256_imm8_35.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 37 start: vdpps_ymm_ymm_m256_imm8_36
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_36/vdpps_ymm_ymm_m256_imm8_36.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 38 start: vdpps_ymm_ymm_m256_imm8_37
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_37/vdpps_ymm_ymm_m256_imm8_37.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 39 start: vdpps_ymm_ymm_m256_imm8_38
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_38/vdpps_ymm_ymm_m256_imm8_38.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 40 start: vdpps_ymm_ymm_m256_imm8_39
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_39/vdpps_ymm_ymm_m256_imm8_39.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 41 start: vdpps_ymm_ymm_m256_imm8_40
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_40/vdpps_ymm_ymm_m256_imm8_40.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 42 start: vdpps_ymm_ymm_m256_imm8_41
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_41/vdpps_ymm_ymm_m256_imm8_41.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 43 start: vdpps_ymm_ymm_m256_imm8_42
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_42/vdpps_ymm_ymm_m256_imm8_42.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 44 start: vdpps_ymm_ymm_m256_imm8_43
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_43/vdpps_ymm_ymm_m256_imm8_43.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 45 start: vdpps_ymm_ymm_m256_imm8_44
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_44/vdpps_ymm_ymm_m256_imm8_44.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 46 start: vdpps_ymm_ymm_m256_imm8_45
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_45/vdpps_ymm_ymm_m256_imm8_45.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 47 start: vdpps_ymm_ymm_m256_imm8_46
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_46/vdpps_ymm_ymm_m256_imm8_46.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 48 start: vdpps_ymm_ymm_m256_imm8_47
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_47/vdpps_ymm_ymm_m256_imm8_47.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 49 start: vdpps_ymm_ymm_m256_imm8_48
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_48/vdpps_ymm_ymm_m256_imm8_48.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 50 start: vdpps_ymm_ymm_m256_imm8_49
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_49/vdpps_ymm_ymm_m256_imm8_49.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 51 start: vdpps_ymm_ymm_m256_imm8_50
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_50/vdpps_ymm_ymm_m256_imm8_50.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 52 start: vdpps_ymm_ymm_m256_imm8_51
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_51/vdpps_ymm_ymm_m256_imm8_51.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 53 start: vdpps_ymm_ymm_m256_imm8_52
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_52/vdpps_ymm_ymm_m256_imm8_52.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 54 start: vdpps_ymm_ymm_m256_imm8_53
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_53/vdpps_ymm_ymm_m256_imm8_53.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 55 start: vdpps_ymm_ymm_m256_imm8_54
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_54/vdpps_ymm_ymm_m256_imm8_54.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 56 start: vdpps_ymm_ymm_m256_imm8_55
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_55/vdpps_ymm_ymm_m256_imm8_55.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 57 start: vdpps_ymm_ymm_m256_imm8_56
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_56/vdpps_ymm_ymm_m256_imm8_56.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 58 start: vdpps_ymm_ymm_m256_imm8_57
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_57/vdpps_ymm_ymm_m256_imm8_57.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 59 start: vdpps_ymm_ymm_m256_imm8_58
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_58/vdpps_ymm_ymm_m256_imm8_58.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 60 start: vdpps_ymm_ymm_m256_imm8_59
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_59/vdpps_ymm_ymm_m256_imm8_59.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 61 start: vdpps_ymm_ymm_m256_imm8_60
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_60/vdpps_ymm_ymm_m256_imm8_60.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 62 start: vdpps_ymm_ymm_m256_imm8_61
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_61/vdpps_ymm_ymm_m256_imm8_61.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 63 start: vdpps_ymm_ymm_m256_imm8_62
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_62/vdpps_ymm_ymm_m256_imm8_62.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 64 start: vdpps_ymm_ymm_m256_imm8_63
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_63/vdpps_ymm_ymm_m256_imm8_63.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 65 start: vdpps_ymm_ymm_m256_imm8_64
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_64/vdpps_ymm_ymm_m256_imm8_64.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 66 start: vdpps_ymm_ymm_m256_imm8_65
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_65/vdpps_ymm_ymm_m256_imm8_65.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 67 start: vdpps_ymm_ymm_m256_imm8_66
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_66/vdpps_ymm_ymm_m256_imm8_66.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 68 start: vdpps_ymm_ymm_m256_imm8_67
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_67/vdpps_ymm_ymm_m256_imm8_67.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 69 start: vdpps_ymm_ymm_m256_imm8_68
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_68/vdpps_ymm_ymm_m256_imm8_68.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 70 start: vdpps_ymm_ymm_m256_imm8_69
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_69/vdpps_ymm_ymm_m256_imm8_69.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Completed 2000cases
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x3b, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4))))))
(let ((a!3 (concat (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)
                   #x00000000))
      (a!8 (concat (add_single (add_single (mul_single #xffffffff a!6)
                                           (mul_single #x7fffffff a!7))
                               #x00000000)
                   #x00000000)))
(let ((a!4 (concat a!3
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!9 (concat a!8
                   (add_single (add_single (mul_single #xffffffff a!6)
                                           (mul_single #x7fffffff a!7))
                               #x00000000))))
(let ((a!5 (concat a!4
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!10 (concat a!9
                    (add_single (add_single (mul_single #xffffffff a!6)
                                            (mul_single #x7fffffff a!7))
                                #x00000000))))
  (concat a!5 a!10)))))
    sandbox:   (concat (concat (concat #xcdfc005500000000 #xcdfc0055cdfc0055)
                #xffffffff00000000)
        #xffffffff7fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_59: 49 s
Thread 60 done!: vdpps_ymm_ymm_m256_imm8_59
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x3f, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4))))))
(let ((a!3 (concat (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!8 (concat (add_single (add_single (mul_single #xffffffff a!6)
                                           (mul_single #x7fffffff a!7))
                               #x00000000)
                   (add_single (add_single (mul_single #xffffffff a!6)
                                           (mul_single #x7fffffff a!7))
                               #x00000000))))
(let ((a!4 (concat a!3
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!9 (concat a!8
                   (add_single (add_single (mul_single #xffffffff a!6)
                                           (mul_single #x7fffffff a!7))
                               #x00000000))))
(let ((a!5 (concat a!4
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!10 (concat a!9
                    (add_single (add_single (mul_single #xffffffff a!6)
                                            (mul_single #x7fffffff a!7))
                                #x00000000))))
  (concat a!5 a!10)))))
    sandbox:   (concat (concat (concat #xcdfc0055cdfc0055 #xcdfc0055cdfc0055)
                #xffffffff7fffffff)
        #xffffffff7fffffff)

SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x3d, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4))))))
(let ((a!3 (concat (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!7 (concat (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000)
                   (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000))))
(let ((a!4 (concat (concat a!3 #x00000000)
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!8 (concat (concat a!7 #x00000000)
                   (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000))))
  (concat a!4 a!8))))
    sandbox:   (concat (concat (concat #xcdfc0055cdfc0055 #x00000000cdfc0055)
                #xffffffff7fffffff)
        #x000000007fffffff)

SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x36, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4))))))
(let ((a!3 (concat #x00000000
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!7 (concat #x00000000
                   (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000))))
(let ((a!4 (concat a!3
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!8 (concat a!7
                   (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000))))
  (concat (concat a!4 #x00000000) (concat a!8 #x00000000)))))
    sandbox:   (concat (concat (concat #x00000000cdfc0055 #xcdfc005500000000)
                #x000000007fffffff)
        #xffffffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_63: 50 s
Thread 64 done!: vdpps_ymm_ymm_m256_imm8_63
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x39, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4))))))
(let ((a!3 (concat (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)
                   #x00000000))
      (a!7 (concat (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000)
                   #x00000000)))
(let ((a!4 (concat (concat a!3 #x00000000)
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!8 (concat (concat a!7 #x00000000)
                   (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000))))
  (concat a!4 a!8))))
    sandbox:   (concat (concat (concat #xcdfc005500000000 #x00000000cdfc0055)
                #xffffffff00000000)
        #x000000007fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_61: 50 s
Thread 62 done!: vdpps_ymm_ymm_m256_imm8_61
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x3c, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!4 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4))))))
(let ((a!3 (concat (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!6 (concat (add_single (add_single (mul_single #xffffffff a!4)
                                           (mul_single #x7fffffff a!5))
                               #x00000000)
                   (add_single (add_single (mul_single #xffffffff a!4)
                                           (mul_single #x7fffffff a!5))
                               #x00000000))))
  (concat (concat (concat a!3 #x00000000) #x00000000)
          (concat (concat a!6 #x00000000) #x00000000))))
    sandbox:   (concat (concat (concat #xcdfc0055cdfc0055 #x0000000000000000)
                #xffffffff7fffffff)
        #x0000000000000000)

SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x37, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4))))))
(let ((a!3 (concat #x00000000
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!8 (concat #x00000000
                   (add_single (add_single (mul_single #xffffffff a!6)
                                           (mul_single #x7fffffff a!7))
                               #x00000000))))
(let ((a!4 (concat a!3
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!9 (concat a!8
                   (add_single (add_single (mul_single #xffffffff a!6)
                                           (mul_single #x7fffffff a!7))
                               #x00000000))))
(let ((a!5 (concat a!4
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!10 (concat a!9
                    (add_single (add_single (mul_single #xffffffff a!6)
                                            (mul_single #x7fffffff a!7))
                                #x00000000))))
  (concat a!5 a!10)))))
    sandbox:   (concat (concat (concat #x00000000cdfc0055 #xcdfc0055cdfc0055)
                #x000000007fffffff)
        #xffffffff7fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_54: 52 s
Thread 55 done!: vdpps_ymm_ymm_m256_imm8_54
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x33, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4))))))
(let ((a!3 (concat #x0000000000000000
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!7 (concat #x0000000000000000
                   (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000))))
(let ((a!4 (concat a!3
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!8 (concat a!7
                   (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000))))
  (concat a!4 a!8))))
    sandbox:   (concat (concat (concat #x0000000000000000 #xcdfc0055cdfc0055)
                #x0000000000000000)
        #xffffffff7fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_57: 52 s
Thread 58 done!: vdpps_ymm_ymm_m256_imm8_57
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x3e, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4))))))
(let ((a!3 (concat (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!7 (concat (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000)
                   (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000))))
(let ((a!4 (concat a!3
                   (add_single (add_single (mul_single #x39b417e7 a!1)
                                           (mul_single #xa3119651 a!2))
                               #x00000000)))
      (a!8 (concat a!7
                   (add_single (add_single (mul_single #xffffffff a!5)
                                           (mul_single #x7fffffff a!6))
                               #x00000000))))
  (concat (concat a!4 #x00000000) (concat a!8 #x00000000)))))
    sandbox:   (concat (concat (concat #xcdfc0055cdfc0055 #xcdfc005500000000)
                #xffffffff7fffffff)
        #xffffffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_60: 51 s
Thread 61 done!: vdpps_ymm_ymm_m256_imm8_60
Execution time vdpps_ymm_ymm_m256_imm8_55: 52 s
Thread 56 done!: vdpps_ymm_ymm_m256_imm8_55
Execution time vdpps_ymm_ymm_m256_imm8_51: 52 s
Thread 52 done!: vdpps_ymm_ymm_m256_imm8_51
Execution time vdpps_ymm_ymm_m256_imm8_62: 52 s
Thread 63 done!: vdpps_ymm_ymm_m256_imm8_62
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 6000cases
Completed 4000cases
Completed 6000cases
Completed 5000cases
Completed 6000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_67: 145 s
Thread 68 done!: vdpps_ymm_ymm_m256_imm8_67
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_48: 155 s
Thread 49 done!: vdpps_ymm_ymm_m256_imm8_48
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_64: 155 s
Thread 65 done!: vdpps_ymm_ymm_m256_imm8_64
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_39: 183 s
Thread 40 done!: vdpps_ymm_ymm_m256_imm8_39
Execution time vdpps_ymm_ymm_m256_imm8_38: 184 s
Thread 39 done!: vdpps_ymm_ymm_m256_imm8_38
Execution time vdpps_ymm_ymm_m256_imm8_68: 183 s
Thread 69 done!: vdpps_ymm_ymm_m256_imm8_68
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_65: 185 s
Thread 66 done!: vdpps_ymm_ymm_m256_imm8_65
Execution time vdpps_ymm_ymm_m256_imm8_66: 186 s
Thread 67 done!: vdpps_ymm_ymm_m256_imm8_66
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_46: 187 s
Thread 47 done!: vdpps_ymm_ymm_m256_imm8_46
Execution time vdpps_ymm_ymm_m256_imm8_36: 187 s
Thread 37 done!: vdpps_ymm_ymm_m256_imm8_36
Execution time vdpps_ymm_ymm_m256_imm8_44: 188 s
Thread 45 done!: vdpps_ymm_ymm_m256_imm8_44
Execution time vdpps_ymm_ymm_m256_imm8_35: 188 s
Thread 36 done!: vdpps_ymm_ymm_m256_imm8_35
Execution time vdpps_ymm_ymm_m256_imm8_45: 188 s
Thread 46 done!: vdpps_ymm_ymm_m256_imm8_45
Execution time vdpps_ymm_ymm_m256_imm8_47: 188 s
Thread 48 done!: vdpps_ymm_ymm_m256_imm8_47
Execution time vdpps_ymm_ymm_m256_imm8_41: 188 s
Thread 42 done!: vdpps_ymm_ymm_m256_imm8_41
Execution time vdpps_ymm_ymm_m256_imm8_42: 188 s
Thread 43 done!: vdpps_ymm_ymm_m256_imm8_42
Execution time vdpps_ymm_ymm_m256_imm8_69: 188 s
Thread 70 done!: vdpps_ymm_ymm_m256_imm8_69
Execution time vdpps_ymm_ymm_m256_imm8_37: 189 s
Thread 38 done!: vdpps_ymm_ymm_m256_imm8_37
Execution time vdpps_ymm_ymm_m256_imm8_40: 190 s
Thread 41 done!: vdpps_ymm_ymm_m256_imm8_40
Execution time vdpps_ymm_ymm_m256_imm8_43: 191 s
Thread 44 done!: vdpps_ymm_ymm_m256_imm8_43
Execution time vdpps_ymm_ymm_m256_imm8_52: 192 s
Thread 53 done!: vdpps_ymm_ymm_m256_imm8_52
Execution time vdpps_ymm_ymm_m256_imm8_50: 195 s
Thread 51 done!: vdpps_ymm_ymm_m256_imm8_50
Execution time vdpps_ymm_ymm_m256_imm8_49: 195 s
Thread 50 done!: vdpps_ymm_ymm_m256_imm8_49
Execution time vdpps_ymm_ymm_m256_imm8_58: 196 s
Thread 59 done!: vdpps_ymm_ymm_m256_imm8_58
Execution time vdpps_ymm_ymm_m256_imm8_56: 198 s
Thread 57 done!: vdpps_ymm_ymm_m256_imm8_56
Execution time vdpps_ymm_ymm_m256_imm8_53: 199 s
Thread 54 done!: vdpps_ymm_ymm_m256_imm8_53
[4m[1m[34mFiring 35.[0m
Thread 73 start: vdpps_ymm_ymm_m256_imm8_72
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_72/vdpps_ymm_ymm_m256_imm8_72.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 72 start: vdpps_ymm_ymm_m256_imm8_71
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_71/vdpps_ymm_ymm_m256_imm8_71.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 71 start: vdpps_ymm_ymm_m256_imm8_70
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_70/vdpps_ymm_ymm_m256_imm8_70.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 74 start: vdpps_ymm_ymm_m256_imm8_73
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_73/vdpps_ymm_ymm_m256_imm8_73.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 75 start: vdpps_ymm_ymm_m256_imm8_74
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_74/vdpps_ymm_ymm_m256_imm8_74.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 76 start: vdpps_ymm_ymm_m256_imm8_75
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_75/vdpps_ymm_ymm_m256_imm8_75.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 77 start: vdpps_ymm_ymm_m256_imm8_76
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_76/vdpps_ymm_ymm_m256_imm8_76.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 78 start: vdpps_ymm_ymm_m256_imm8_77
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_77/vdpps_ymm_ymm_m256_imm8_77.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 79 start: vdpps_ymm_ymm_m256_imm8_78
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_78/vdpps_ymm_ymm_m256_imm8_78.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 80 start: vdpps_ymm_ymm_m256_imm8_79
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_79/vdpps_ymm_ymm_m256_imm8_79.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 81 start: vdpps_ymm_ymm_m256_imm8_80
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_80/vdpps_ymm_ymm_m256_imm8_80.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 82 start: vdpps_ymm_ymm_m256_imm8_81
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_81/vdpps_ymm_ymm_m256_imm8_81.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 83 start: vdpps_ymm_ymm_m256_imm8_82
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_82/vdpps_ymm_ymm_m256_imm8_82.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 84 start: vdpps_ymm_ymm_m256_imm8_83
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_83/vdpps_ymm_ymm_m256_imm8_83.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 85 start: vdpps_ymm_ymm_m256_imm8_84
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_84/vdpps_ymm_ymm_m256_imm8_84.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 86 start: vdpps_ymm_ymm_m256_imm8_85
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_85/vdpps_ymm_ymm_m256_imm8_85.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 87 start: vdpps_ymm_ymm_m256_imm8_86
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_86/vdpps_ymm_ymm_m256_imm8_86.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 88 start: vdpps_ymm_ymm_m256_imm8_87
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_87/vdpps_ymm_ymm_m256_imm8_87.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 89 start: vdpps_ymm_ymm_m256_imm8_88
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_88/vdpps_ymm_ymm_m256_imm8_88.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 90 start: vdpps_ymm_ymm_m256_imm8_89
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_89/vdpps_ymm_ymm_m256_imm8_89.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 91 start: vdpps_ymm_ymm_m256_imm8_90
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_90/vdpps_ymm_ymm_m256_imm8_90.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 92 start: vdpps_ymm_ymm_m256_imm8_91
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_91/vdpps_ymm_ymm_m256_imm8_91.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 93 start: vdpps_ymm_ymm_m256_imm8_92
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_92/vdpps_ymm_ymm_m256_imm8_92.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 94 start: vdpps_ymm_ymm_m256_imm8_93
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_93/vdpps_ymm_ymm_m256_imm8_93.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 95 start: vdpps_ymm_ymm_m256_imm8_94
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_94/vdpps_ymm_ymm_m256_imm8_94.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 97 start: vdpps_ymm_ymm_m256_imm8_96
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_96/vdpps_ymm_ymm_m256_imm8_96.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 96 start: vdpps_ymm_ymm_m256_imm8_95
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_95/vdpps_ymm_ymm_m256_imm8_95.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 98 start: vdpps_ymm_ymm_m256_imm8_97
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_97/vdpps_ymm_ymm_m256_imm8_97.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 99 start: vdpps_ymm_ymm_m256_imm8_98
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_98/vdpps_ymm_ymm_m256_imm8_98.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 100 start: vdpps_ymm_ymm_m256_imm8_99
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_99/vdpps_ymm_ymm_m256_imm8_99.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 101 start: vdpps_ymm_ymm_m256_imm8_100
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_100/vdpps_ymm_ymm_m256_imm8_100.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 102 start: vdpps_ymm_ymm_m256_imm8_101
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_101/vdpps_ymm_ymm_m256_imm8_101.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 103 start: vdpps_ymm_ymm_m256_imm8_102
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_102/vdpps_ymm_ymm_m256_imm8_102.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 104 start: vdpps_ymm_ymm_m256_imm8_103
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_103/vdpps_ymm_ymm_m256_imm8_103.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 105 start: vdpps_ymm_ymm_m256_imm8_104
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_104/vdpps_ymm_ymm_m256_imm8_104.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x5d, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2) #x00000000)))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single (mul_single #xffc8c160 a!5) #x00000000))))
  (concat (concat (concat (concat a!3 a!3) #x00000000) a!3)
          (concat (concat (concat a!6 a!6) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #x77fe6b2977fe6b29 #x0000000077fe6b29)
                #xffc8c160ffc8c160)
        #x000000007fffffff)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Execution time vdpps_ymm_ymm_m256_imm8_93: 40 s
Thread 94 done!: vdpps_ymm_ymm_m256_imm8_93
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x59, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2) #x00000000)))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single (mul_single #xffc8c160 a!5) #x00000000))))
  (concat (concat (concat (concat a!3 #x00000000) #x00000000) a!3)
          (concat (concat (concat a!6 #x00000000) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #x77fe6b2900000000 #x0000000077fe6b29)
                #xffc8c16000000000)
        #x000000007fffffff)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Execution time vdpps_ymm_ymm_m256_imm8_89: 44 s
Thread 90 done!: vdpps_ymm_ymm_m256_imm8_89
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x56, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2) #x00000000)))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single (mul_single #xffc8c160 a!5) #x00000000))))
  (concat (concat (concat (concat #x00000000 a!3) a!3) #x00000000)
          (concat (concat (concat #x00000000 a!6) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #x0000000077fe6b29 #x77fe6b2900000000)
                #x00000000ffc8c160)
        #x7fffffff00000000)

SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x57, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2) #x00000000)))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single (mul_single #xffc8c160 a!5) #x00000000))))
  (concat (concat (concat (concat #x00000000 a!3) a!3) a!3)
          (concat (concat (concat #x00000000 a!6) a!6) a!6))))
    sandbox:   (concat (concat (concat #x0000000077fe6b29 #x77fe6b2977fe6b29)
                #x00000000ffc8c160)
        #x7fffffff7fffffff)

SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x5b, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2) #x00000000)))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single (mul_single #xffc8c160 a!5) #x00000000))))
  (concat (concat (concat (concat a!3 #x00000000) a!3) a!3)
          (concat (concat (concat a!6 #x00000000) a!6) a!6))))
    sandbox:   (concat (concat (concat #x77fe6b2900000000 #x77fe6b2977fe6b29)
                #xffc8c16000000000)
        #x7fffffff7fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_86: 54 s
Thread 87 done!: vdpps_ymm_ymm_m256_imm8_86
Execution time vdpps_ymm_ymm_m256_imm8_87: 54 s
Thread 88 done!: vdpps_ymm_ymm_m256_imm8_87
SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x55, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2) #x00000000)))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single (mul_single #xffc8c160 a!5) #x00000000))))
  (concat (concat (concat (concat #x00000000 a!3) #x00000000) a!3)
          (concat (concat (concat #x00000000 a!6) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #x0000000077fe6b29 #x0000000077fe6b29)
                #x00000000ffc8c160)
        #x000000007fffffff)

SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x5e, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2) #x00000000)))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single (mul_single #xffc8c160 a!5) #x00000000))))
  (concat (concat (concat (concat a!3 a!3) a!3) #x00000000)
          (concat (concat (concat a!6 a!6) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #x77fe6b2977fe6b29 #x77fe6b2900000000)
                #xffc8c160ffc8c160)
        #x7fffffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_91: 54 s
Thread 92 done!: vdpps_ymm_ymm_m256_imm8_91
Execution time vdpps_ymm_ymm_m256_imm8_85: 54 s
Thread 86 done!: vdpps_ymm_ymm_m256_imm8_85
Execution time vdpps_ymm_ymm_m256_imm8_94: 55 s
Thread 95 done!: vdpps_ymm_ymm_m256_imm8_94
SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x5a, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2) #x00000000)))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single (mul_single #xffc8c160 a!5) #x00000000))))
  (concat (concat (concat (concat a!3 #x00000000) a!3) #x00000000)
          (concat (concat (concat a!6 #x00000000) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #x77fe6b2900000000 #x77fe6b2900000000)
                #xffc8c16000000000)
        #x7fffffff00000000)

SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x5f, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2) #x00000000)))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single (mul_single #xffc8c160 a!5) #x00000000))))
  (concat (concat (concat (concat a!3 a!3) a!3) a!3)
          (concat (concat (concat a!6 a!6) a!6) a!6))))
    sandbox:   (concat (concat (concat #x77fe6b2977fe6b29 #x77fe6b2977fe6b29)
                #xffc8c160ffc8c160)
        #x7fffffff7fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_90: 56 s
Thread 91 done!: vdpps_ymm_ymm_m256_imm8_90
SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x65, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2) #x00000000)))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fffffff a!4))
                       (add_single (mul_single #xff98843f a!5) #x00000000))))
  (concat (concat (concat (concat #x00000000 a!3) #x00000000) a!3)
          (concat (concat (concat #x00000000 a!6) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #x000000006b28e5a8 #x000000006b28e5a8)
                #x00000000ffd8843f)
        #x000000007fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_101: 57 s
Thread 102 done!: vdpps_ymm_ymm_m256_imm8_101
Completed 2000cases
SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x66, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2) #x00000000)))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fffffff a!4))
                       (add_single (mul_single #xff98843f a!5) #x00000000))))
  (concat (concat (concat (concat #x00000000 a!3) a!3) #x00000000)
          (concat (concat (concat #x00000000 a!6) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #x000000006b28e5a8 #x6b28e5a800000000)
                #x00000000ffd8843f)
        #x7fffffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_102: 58 s
Thread 103 done!: vdpps_ymm_ymm_m256_imm8_102
Completed 2000cases
SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x67, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2) #x00000000)))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fffffff a!4))
                       (add_single (mul_single #xff98843f a!5) #x00000000))))
  (concat (concat (concat (concat #x00000000 a!3) a!3) a!3)
          (concat (concat (concat #x00000000 a!6) a!6) a!6))))
    sandbox:   (concat (concat (concat #x000000006b28e5a8 #x6b28e5a86b28e5a8)
                #x00000000ffd8843f)
        #x7fffffff7fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_103: 61 s
Thread 104 done!: vdpps_ymm_ymm_m256_imm8_103
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 6000cases
Completed 5000cases
Completed 6000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_95: 147 s
Thread 96 done!: vdpps_ymm_ymm_m256_imm8_95
Execution time vdpps_ymm_ymm_m256_imm8_96: 147 s
Thread 97 done!: vdpps_ymm_ymm_m256_imm8_96
Execution time vdpps_ymm_ymm_m256_imm8_80: 149 s
Thread 81 done!: vdpps_ymm_ymm_m256_imm8_80
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_75: 175 s
Thread 76 done!: vdpps_ymm_ymm_m256_imm8_75
Execution time vdpps_ymm_ymm_m256_imm8_70: 176 s
Thread 71 done!: vdpps_ymm_ymm_m256_imm8_70
Execution time vdpps_ymm_ymm_m256_imm8_77: 175 s
Thread 78 done!: vdpps_ymm_ymm_m256_imm8_77
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_79: 175 s
Thread 80 done!: vdpps_ymm_ymm_m256_imm8_79
Execution time vdpps_ymm_ymm_m256_imm8_74: 177 s
Thread 75 done!: vdpps_ymm_ymm_m256_imm8_74
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_76: 177 s
Thread 77 done!: vdpps_ymm_ymm_m256_imm8_76
Execution time vdpps_ymm_ymm_m256_imm8_73: 178 s
Thread 74 done!: vdpps_ymm_ymm_m256_imm8_73
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_78: 178 s
Thread 79 done!: vdpps_ymm_ymm_m256_imm8_78
Execution time vdpps_ymm_ymm_m256_imm8_71: 179 s
Thread 72 done!: vdpps_ymm_ymm_m256_imm8_71
Execution time vdpps_ymm_ymm_m256_imm8_72: 179 s
Thread 73 done!: vdpps_ymm_ymm_m256_imm8_72
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_98: 187 s
Thread 99 done!: vdpps_ymm_ymm_m256_imm8_98
Execution time vdpps_ymm_ymm_m256_imm8_97: 187 s
Thread 98 done!: vdpps_ymm_ymm_m256_imm8_97
Execution time vdpps_ymm_ymm_m256_imm8_82: 188 s
Thread 83 done!: vdpps_ymm_ymm_m256_imm8_82
Execution time vdpps_ymm_ymm_m256_imm8_81: 189 s
Thread 82 done!: vdpps_ymm_ymm_m256_imm8_81
Execution time vdpps_ymm_ymm_m256_imm8_99: 189 s
Thread 100 done!: vdpps_ymm_ymm_m256_imm8_99
Execution time vdpps_ymm_ymm_m256_imm8_88: 189 s
Thread 89 done!: vdpps_ymm_ymm_m256_imm8_88
Execution time vdpps_ymm_ymm_m256_imm8_100: 189 s
Thread 101 done!: vdpps_ymm_ymm_m256_imm8_100
Execution time vdpps_ymm_ymm_m256_imm8_83: 189 s
Thread 84 done!: vdpps_ymm_ymm_m256_imm8_83
Execution time vdpps_ymm_ymm_m256_imm8_84: 190 s
Thread 85 done!: vdpps_ymm_ymm_m256_imm8_84
Execution time vdpps_ymm_ymm_m256_imm8_104: 191 s
Thread 105 done!: vdpps_ymm_ymm_m256_imm8_104
Execution time vdpps_ymm_ymm_m256_imm8_92: 192 s
Thread 93 done!: vdpps_ymm_ymm_m256_imm8_92
[4m[1m[34mFiring 35.[0m
Thread 106 start: vdpps_ymm_ymm_m256_imm8_105
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_105/vdpps_ymm_ymm_m256_imm8_105.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 107 start: vdpps_ymm_ymm_m256_imm8_106
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_106/vdpps_ymm_ymm_m256_imm8_106.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 108 start: vdpps_ymm_ymm_m256_imm8_107
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_107/vdpps_ymm_ymm_m256_imm8_107.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 109 start: vdpps_ymm_ymm_m256_imm8_108
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_108/vdpps_ymm_ymm_m256_imm8_108.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 111 start: vdpps_ymm_ymm_m256_imm8_110
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_110/vdpps_ymm_ymm_m256_imm8_110.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 110 start: vdpps_ymm_ymm_m256_imm8_109
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_109/vdpps_ymm_ymm_m256_imm8_109.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 113 start: vdpps_ymm_ymm_m256_imm8_112
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_112/vdpps_ymm_ymm_m256_imm8_112.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 112 start: vdpps_ymm_ymm_m256_imm8_111
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_111/vdpps_ymm_ymm_m256_imm8_111.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 114 start: vdpps_ymm_ymm_m256_imm8_113
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_113/vdpps_ymm_ymm_m256_imm8_113.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 115 start: vdpps_ymm_ymm_m256_imm8_114
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_114/vdpps_ymm_ymm_m256_imm8_114.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 116 start: vdpps_ymm_ymm_m256_imm8_115
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_115/vdpps_ymm_ymm_m256_imm8_115.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 117 start: vdpps_ymm_ymm_m256_imm8_116
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_116/vdpps_ymm_ymm_m256_imm8_116.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 118 start: vdpps_ymm_ymm_m256_imm8_117
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_117/vdpps_ymm_ymm_m256_imm8_117.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 119 start: vdpps_ymm_ymm_m256_imm8_118
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_118/vdpps_ymm_ymm_m256_imm8_118.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 120 start: vdpps_ymm_ymm_m256_imm8_119
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_119/vdpps_ymm_ymm_m256_imm8_119.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 121 start: vdpps_ymm_ymm_m256_imm8_120
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_120/vdpps_ymm_ymm_m256_imm8_120.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 122 start: vdpps_ymm_ymm_m256_imm8_121
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_121/vdpps_ymm_ymm_m256_imm8_121.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 123 start: vdpps_ymm_ymm_m256_imm8_122
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_122/vdpps_ymm_ymm_m256_imm8_122.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 124 start: vdpps_ymm_ymm_m256_imm8_123
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_123/vdpps_ymm_ymm_m256_imm8_123.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 125 start: vdpps_ymm_ymm_m256_imm8_124
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_124/vdpps_ymm_ymm_m256_imm8_124.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 126 start: vdpps_ymm_ymm_m256_imm8_125
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_125/vdpps_ymm_ymm_m256_imm8_125.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 127 start: vdpps_ymm_ymm_m256_imm8_126
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_126/vdpps_ymm_ymm_m256_imm8_126.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 128 start: vdpps_ymm_ymm_m256_imm8_127
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_127/vdpps_ymm_ymm_m256_imm8_127.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 129 start: vdpps_ymm_ymm_m256_imm8_128
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_128/vdpps_ymm_ymm_m256_imm8_128.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 130 start: vdpps_ymm_ymm_m256_imm8_129
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_129/vdpps_ymm_ymm_m256_imm8_129.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 131 start: vdpps_ymm_ymm_m256_imm8_130
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_130/vdpps_ymm_ymm_m256_imm8_130.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 132 start: vdpps_ymm_ymm_m256_imm8_131
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_131/vdpps_ymm_ymm_m256_imm8_131.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 133 start: vdpps_ymm_ymm_m256_imm8_132
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_132/vdpps_ymm_ymm_m256_imm8_132.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 134 start: vdpps_ymm_ymm_m256_imm8_133
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_133/vdpps_ymm_ymm_m256_imm8_133.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 135 start: vdpps_ymm_ymm_m256_imm8_134
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_134/vdpps_ymm_ymm_m256_imm8_134.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 137 start: vdpps_ymm_ymm_m256_imm8_136
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_136/vdpps_ymm_ymm_m256_imm8_136.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 136 start: vdpps_ymm_ymm_m256_imm8_135
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_135/vdpps_ymm_ymm_m256_imm8_135.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 138 start: vdpps_ymm_ymm_m256_imm8_137
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_137/vdpps_ymm_ymm_m256_imm8_137.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 139 start: vdpps_ymm_ymm_m256_imm8_138
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_138/vdpps_ymm_ymm_m256_imm8_138.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 140 start: vdpps_ymm_ymm_m256_imm8_139
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_139/vdpps_ymm_ymm_m256_imm8_139.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x76, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #x7ece1038 a!5)
                                   (mul_single #x6f451610 a!6))
                       (add_single (mul_single #xfff35f5a a!7) #x00000000))))
  (concat (concat (concat (concat #x00000000 a!4) a!4) #x00000000)
          (concat (concat (concat #x00000000 a!8) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #x00000000dc053a28 #xdc053a2800000000)
                #x00000000fff35f5a)
        #xffc0000000000000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x77, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #x7ece1038 a!5)
                                   (mul_single #x6f451610 a!6))
                       (add_single (mul_single #xfff35f5a a!7) #x00000000))))
  (concat (concat (concat (concat #x00000000 a!4) a!4) a!4)
          (concat (concat (concat #x00000000 a!8) a!8) a!8))))
    sandbox:   (concat (concat (concat #x00000000dc053a28 #xdc053a28dc053a28)
                #x00000000fff35f5a)
        #xffc00000ffc00000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x79, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #x7ece1038 a!5)
                                   (mul_single #x6f451610 a!6))
                       (add_single (mul_single #xfff35f5a a!7) #x00000000))))
  (concat (concat (concat (concat a!4 #x00000000) #x00000000) a!4)
          (concat (concat (concat a!8 #x00000000) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #xdc053a2800000000 #x00000000dc053a28)
                #xfff35f5a00000000)
        #x00000000ffc00000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x7a, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #x7ece1038 a!5)
                                   (mul_single #x6f451610 a!6))
                       (add_single (mul_single #xfff35f5a a!7) #x00000000))))
  (concat (concat (concat (concat a!4 #x00000000) a!4) #x00000000)
          (concat (concat (concat a!8 #x00000000) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #xdc053a2800000000 #xdc053a2800000000)
                #xfff35f5a00000000)
        #xffc0000000000000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x75, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #x7ece1038 a!5)
                                   (mul_single #x6f451610 a!6))
                       (add_single (mul_single #xfff35f5a a!7) #x00000000))))
  (concat (concat (concat (concat #x00000000 a!4) #x00000000) a!4)
          (concat (concat (concat #x00000000 a!8) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #x00000000dc053a28 #x00000000dc053a28)
                #x00000000fff35f5a)
        #x00000000ffc00000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x7e, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #x7ece1038 a!5)
                                   (mul_single #x6f451610 a!6))
                       (add_single (mul_single #xfff35f5a a!7) #x00000000))))
  (concat (concat (concat (concat a!4 a!4) a!4) #x00000000)
          (concat (concat (concat a!8 a!8) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #xdc053a28dc053a28 #xdc053a2800000000)
                #xfff35f5afff35f5a)
        #xffc0000000000000)

Execution time vdpps_ymm_ymm_m256_imm8_118: 13 s
Thread 119 done!: vdpps_ymm_ymm_m256_imm8_118
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x7b, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #x7ece1038 a!5)
                                   (mul_single #x6f451610 a!6))
                       (add_single (mul_single #xfff35f5a a!7) #x00000000))))
  (concat (concat (concat (concat a!4 #x00000000) a!4) a!4)
          (concat (concat (concat a!8 #x00000000) a!8) a!8))))
    sandbox:   (concat (concat (concat #xdc053a2800000000 #xdc053a28dc053a28)
                #xfff35f5a00000000)
        #xffc00000ffc00000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x7d, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #x7ece1038 a!5)
                                   (mul_single #x6f451610 a!6))
                       (add_single (mul_single #xfff35f5a a!7) #x00000000))))
  (concat (concat (concat (concat a!4 a!4) #x00000000) a!4)
          (concat (concat (concat a!8 a!8) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #xdc053a28dc053a28 #x00000000dc053a28)
                #xfff35f5afff35f5a)
        #x00000000ffc00000)

Execution time vdpps_ymm_ymm_m256_imm8_119: 14 s
Thread 120 done!: vdpps_ymm_ymm_m256_imm8_119
Execution time vdpps_ymm_ymm_m256_imm8_121: 14 s
Thread 122 done!: vdpps_ymm_ymm_m256_imm8_121
Execution time vdpps_ymm_ymm_m256_imm8_122: 14 s
Thread 123 done!: vdpps_ymm_ymm_m256_imm8_122
Execution time vdpps_ymm_ymm_m256_imm8_117: 14 s
Thread 118 done!: vdpps_ymm_ymm_m256_imm8_117
Execution time vdpps_ymm_ymm_m256_imm8_126: 14 s
Thread 127 done!: vdpps_ymm_ymm_m256_imm8_126
Execution time vdpps_ymm_ymm_m256_imm8_123: 14 s
Thread 124 done!: vdpps_ymm_ymm_m256_imm8_123
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x7f, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #x7ece1038 a!5)
                                   (mul_single #x6f451610 a!6))
                       (add_single (mul_single #xfff35f5a a!7) #x00000000))))
  (concat (concat (concat (concat a!4 a!4) a!4) a!4)
          (concat (concat (concat a!8 a!8) a!8) a!8))))
    sandbox:   (concat (concat (concat #xdc053a28dc053a28 #xdc053a28dc053a28)
                #xfff35f5afff35f5a)
        #xffc00000ffc00000)

Execution time vdpps_ymm_ymm_m256_imm8_125: 14 s
Thread 126 done!: vdpps_ymm_ymm_m256_imm8_125
Execution time vdpps_ymm_ymm_m256_imm8_127: 15 s
Thread 128 done!: vdpps_ymm_ymm_m256_imm8_127
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x7c, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single (mul_single #x1f10d5de a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single (mul_single #xf7e6bf08 a!7) #x00000000))))
  (concat (concat (concat (concat a!4 a!4) #x00000000) #x00000000)
          (concat (concat (concat a!8 a!8) #x00000000) #x00000000))))
    sandbox:   (concat (concat (concat #xcdfc0055cdfc0055 #x0000000000000000)
                #xffffffff7fffffff)
        #x0000000000000000)

Execution time vdpps_ymm_ymm_m256_imm8_124: 46 s
Thread 125 done!: vdpps_ymm_ymm_m256_imm8_124
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x73, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff8)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe8))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single (mul_single #x1f10d5de a!3) #x00000000)))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single (mul_single #xf7e6bf08 a!7) #x00000000))))
  (concat (concat (concat #x0000000000000000 a!4) a!4)
          (concat (concat #x0000000000000000 a!8) a!8))))
    sandbox:   (concat (concat (concat #x0000000000000000 #xcdfc0055cdfc0055)
                #x0000000000000000)
        #xffffffff7fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_115: 47 s
Thread 116 done!: vdpps_ymm_ymm_m256_imm8_115
SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x69, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2) #x00000000)))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fffffff a!4))
                       (add_single (mul_single #xff98843f a!5) #x00000000))))
  (concat (concat (concat (concat a!3 #x00000000) #x00000000) a!3)
          (concat (concat (concat a!6 #x00000000) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #x6b28e5a800000000 #x000000006b28e5a8)
                #xffd8843f00000000)
        #x000000007fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_105: 49 s
Thread 106 done!: vdpps_ymm_ymm_m256_imm8_105
SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x6d, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2) #x00000000)))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fffffff a!4))
                       (add_single (mul_single #xff98843f a!5) #x00000000))))
  (concat (concat (concat (concat a!3 a!3) #x00000000) a!3)
          (concat (concat (concat a!6 a!6) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #x6b28e5a86b28e5a8 #x000000006b28e5a8)
                #xffd8843fffd8843f)
        #x000000007fffffff)

Completed 2000cases
Completed 2000cases
SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x6e, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2) #x00000000)))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fffffff a!4))
                       (add_single (mul_single #xff98843f a!5) #x00000000))))
  (concat (concat (concat (concat a!3 a!3) a!3) #x00000000)
          (concat (concat (concat a!6 a!6) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #x6b28e5a86b28e5a8 #x6b28e5a800000000)
                #xffd8843fffd8843f)
        #x7fffffff00000000)

SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x6f, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2) #x00000000)))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fffffff a!4))
                       (add_single (mul_single #xff98843f a!5) #x00000000))))
  (concat (concat (concat (concat a!3 a!3) a!3) a!3)
          (concat (concat (concat a!6 a!6) a!6) a!6))))
    sandbox:   (concat (concat (concat #x6b28e5a86b28e5a8 #x6b28e5a86b28e5a8)
                #xffd8843fffd8843f)
        #x7fffffff7fffffff)

SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x6b, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2) #x00000000)))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fffffff a!4))
                       (add_single (mul_single #xff98843f a!5) #x00000000))))
  (concat (concat (concat (concat a!3 #x00000000) a!3) a!3)
          (concat (concat (concat a!6 #x00000000) a!6) a!6))))
    sandbox:   (concat (concat (concat #x6b28e5a800000000 #x6b28e5a86b28e5a8)
                #xffd8843f00000000)
        #x7fffffff7fffffff)

Completed 2000cases
SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x6a, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2) #x00000000)))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fffffff a!4))
                       (add_single (mul_single #xff98843f a!5) #x00000000))))
  (concat (concat (concat (concat a!3 #x00000000) a!3) #x00000000)
          (concat (concat (concat a!6 #x00000000) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #x6b28e5a800000000 #x6b28e5a800000000)
                #xffd8843f00000000)
        #x7fffffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_110: 52 s
Thread 111 done!: vdpps_ymm_ymm_m256_imm8_110
Execution time vdpps_ymm_ymm_m256_imm8_107: 52 s
Thread 108 done!: vdpps_ymm_ymm_m256_imm8_107
Execution time vdpps_ymm_ymm_m256_imm8_106: 52 s
Thread 107 done!: vdpps_ymm_ymm_m256_imm8_106
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 2000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
Completed 4000cases
Completed 5000cases
Completed 6000cases
Completed 4000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 6000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_128: 125 s
Thread 129 done!: vdpps_ymm_ymm_m256_imm8_128
Execution time vdpps_ymm_ymm_m256_imm8_109: 128 s
Thread 110 done!: vdpps_ymm_ymm_m256_imm8_109
Execution time vdpps_ymm_ymm_m256_imm8_111: 128 s
Thread 112 done!: vdpps_ymm_ymm_m256_imm8_111
Execution time vdpps_ymm_ymm_m256_imm8_112: 128 s
Thread 113 done!: vdpps_ymm_ymm_m256_imm8_112
Completed 6000cases
Completed 5000cases
Completed 6000cases
Completed 6000cases
Completed 5000cases
Completed 6000cases
Completed 5000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 5000cases
Completed 6000cases
Completed 6000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_131: 141 s
Thread 132 done!: vdpps_ymm_ymm_m256_imm8_131
Execution time vdpps_ymm_ymm_m256_imm8_132: 145 s
Thread 133 done!: vdpps_ymm_ymm_m256_imm8_132
Execution time vdpps_ymm_ymm_m256_imm8_133: 146 s
Thread 134 done!: vdpps_ymm_ymm_m256_imm8_133
Execution time vdpps_ymm_ymm_m256_imm8_129: 147 s
Thread 130 done!: vdpps_ymm_ymm_m256_imm8_129
Execution time vdpps_ymm_ymm_m256_imm8_138: 148 s
Thread 139 done!: vdpps_ymm_ymm_m256_imm8_138
Execution time vdpps_ymm_ymm_m256_imm8_130: 148 s
Thread 131 done!: vdpps_ymm_ymm_m256_imm8_130
Execution time vdpps_ymm_ymm_m256_imm8_135: 149 s
Thread 136 done!: vdpps_ymm_ymm_m256_imm8_135
Execution time vdpps_ymm_ymm_m256_imm8_137: 149 s
Thread 138 done!: vdpps_ymm_ymm_m256_imm8_137
Execution time vdpps_ymm_ymm_m256_imm8_134: 150 s
Thread 135 done!: vdpps_ymm_ymm_m256_imm8_134
Execution time vdpps_ymm_ymm_m256_imm8_136: 150 s
Thread 137 done!: vdpps_ymm_ymm_m256_imm8_136
Execution time vdpps_ymm_ymm_m256_imm8_139: 151 s
Thread 140 done!: vdpps_ymm_ymm_m256_imm8_139
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_108: 164 s
Thread 109 done!: vdpps_ymm_ymm_m256_imm8_108
Execution time vdpps_ymm_ymm_m256_imm8_120: 169 s
Thread 121 done!: vdpps_ymm_ymm_m256_imm8_120
Execution time vdpps_ymm_ymm_m256_imm8_113: 170 s
Thread 114 done!: vdpps_ymm_ymm_m256_imm8_113
Execution time vdpps_ymm_ymm_m256_imm8_114: 170 s
Thread 115 done!: vdpps_ymm_ymm_m256_imm8_114
Execution time vdpps_ymm_ymm_m256_imm8_116: 173 s
Thread 117 done!: vdpps_ymm_ymm_m256_imm8_116
[4m[1m[34mFiring 35.[0m
Thread 141 start: vdpps_ymm_ymm_m256_imm8_140
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_140/vdpps_ymm_ymm_m256_imm8_140.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 145 start: vdpps_ymm_ymm_m256_imm8_144
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_144/vdpps_ymm_ymm_m256_imm8_144.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 144 start: vdpps_ymm_ymm_m256_imm8_143
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_143/vdpps_ymm_ymm_m256_imm8_143.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 142 start: vdpps_ymm_ymm_m256_imm8_141
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_141/vdpps_ymm_ymm_m256_imm8_141.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 148 start: vdpps_ymm_ymm_m256_imm8_147
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_147/vdpps_ymm_ymm_m256_imm8_147.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 143 start: vdpps_ymm_ymm_m256_imm8_142
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_142/vdpps_ymm_ymm_m256_imm8_142.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 147 start: vdpps_ymm_ymm_m256_imm8_146
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_146/vdpps_ymm_ymm_m256_imm8_146.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 146 start: vdpps_ymm_ymm_m256_imm8_145
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_145/vdpps_ymm_ymm_m256_imm8_145.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 149 start: vdpps_ymm_ymm_m256_imm8_148
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_148/vdpps_ymm_ymm_m256_imm8_148.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 150 start: vdpps_ymm_ymm_m256_imm8_149
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_149/vdpps_ymm_ymm_m256_imm8_149.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 151 start: vdpps_ymm_ymm_m256_imm8_150
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_150/vdpps_ymm_ymm_m256_imm8_150.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 152 start: vdpps_ymm_ymm_m256_imm8_151
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_151/vdpps_ymm_ymm_m256_imm8_151.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 153 start: vdpps_ymm_ymm_m256_imm8_152
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_152/vdpps_ymm_ymm_m256_imm8_152.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 154 start: vdpps_ymm_ymm_m256_imm8_153
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_153/vdpps_ymm_ymm_m256_imm8_153.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 155 start: vdpps_ymm_ymm_m256_imm8_154
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_154/vdpps_ymm_ymm_m256_imm8_154.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 156 start: vdpps_ymm_ymm_m256_imm8_155
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_155/vdpps_ymm_ymm_m256_imm8_155.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 158 start: vdpps_ymm_ymm_m256_imm8_157
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_157/vdpps_ymm_ymm_m256_imm8_157.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 159 start: vdpps_ymm_ymm_m256_imm8_158
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_158/vdpps_ymm_ymm_m256_imm8_158.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 157 start: vdpps_ymm_ymm_m256_imm8_156
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_156/vdpps_ymm_ymm_m256_imm8_156.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 160 start: vdpps_ymm_ymm_m256_imm8_159
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_159/vdpps_ymm_ymm_m256_imm8_159.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 161 start: vdpps_ymm_ymm_m256_imm8_160
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_160/vdpps_ymm_ymm_m256_imm8_160.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 162 start: vdpps_ymm_ymm_m256_imm8_161
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_161/vdpps_ymm_ymm_m256_imm8_161.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 163 start: vdpps_ymm_ymm_m256_imm8_162
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_162/vdpps_ymm_ymm_m256_imm8_162.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 164 start: vdpps_ymm_ymm_m256_imm8_163
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_163/vdpps_ymm_ymm_m256_imm8_163.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 165 start: vdpps_ymm_ymm_m256_imm8_164
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_164/vdpps_ymm_ymm_m256_imm8_164.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 166 start: vdpps_ymm_ymm_m256_imm8_165
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_165/vdpps_ymm_ymm_m256_imm8_165.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 167 start: vdpps_ymm_ymm_m256_imm8_166
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_166/vdpps_ymm_ymm_m256_imm8_166.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 168 start: vdpps_ymm_ymm_m256_imm8_167
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_167/vdpps_ymm_ymm_m256_imm8_167.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 169 start: vdpps_ymm_ymm_m256_imm8_168
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_168/vdpps_ymm_ymm_m256_imm8_168.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 170 start: vdpps_ymm_ymm_m256_imm8_169
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_169/vdpps_ymm_ymm_m256_imm8_169.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 171 start: vdpps_ymm_ymm_m256_imm8_170
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_170/vdpps_ymm_ymm_m256_imm8_170.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 172 start: vdpps_ymm_ymm_m256_imm8_171
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_171/vdpps_ymm_ymm_m256_imm8_171.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 173 start: vdpps_ymm_ymm_m256_imm8_172
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_172/vdpps_ymm_ymm_m256_imm8_172.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 174 start: vdpps_ymm_ymm_m256_imm8_173
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_173/vdpps_ymm_ymm_m256_imm8_173.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 175 start: vdpps_ymm_ymm_m256_imm8_174
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_174/vdpps_ymm_ymm_m256_imm8_174.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x96, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single (mul_single #x5400887f a!1) #x00000000)
                       (add_single #x00000000 (mul_single #x7539bf64 a!2))))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single #x00000000 (mul_single #x7fd4640d a!5)))))
  (concat (concat (concat (concat #x00000000 a!3) a!3) #x00000000)
          (concat (concat (concat #x00000000 a!6) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #x00000000f4fbb55e #xf4fbb55e00000000)
                #x000000007fd4640d)
        #x7fffffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_150: 82 s
Thread 151 done!: vdpps_ymm_ymm_m256_imm8_150
SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x9e, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single (mul_single #x5400887f a!1) #x00000000)
                       (add_single #x00000000 (mul_single #x7539bf64 a!2))))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single #x00000000 (mul_single #x7fd4640d a!5)))))
  (concat (concat (concat (concat a!3 a!3) a!3) #x00000000)
          (concat (concat (concat a!6 a!6) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #xf4fbb55ef4fbb55e #xf4fbb55e00000000)
                #x7fd4640d7fd4640d)
        #x7fffffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_158: 84 s
Thread 159 done!: vdpps_ymm_ymm_m256_imm8_158
SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x9a, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single (mul_single #x5400887f a!1) #x00000000)
                       (add_single #x00000000 (mul_single #x7539bf64 a!2))))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single #x00000000 (mul_single #x7fd4640d a!5)))))
  (concat (concat (concat (concat a!3 #x00000000) a!3) #x00000000)
          (concat (concat (concat a!6 #x00000000) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #xf4fbb55e00000000 #xf4fbb55e00000000)
                #x7fd4640d00000000)
        #x7fffffff00000000)

SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x95, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single (mul_single #x5400887f a!1) #x00000000)
                       (add_single #x00000000 (mul_single #x7539bf64 a!2))))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single #x00000000 (mul_single #x7fd4640d a!5)))))
  (concat (concat (concat (concat #x00000000 a!3) #x00000000) a!3)
          (concat (concat (concat #x00000000 a!6) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #x00000000f4fbb55e #x00000000f4fbb55e)
                #x000000007fd4640d)
        #x000000007fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_154: 85 s
Thread 155 done!: vdpps_ymm_ymm_m256_imm8_154
SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x97, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single (mul_single #x5400887f a!1) #x00000000)
                       (add_single #x00000000 (mul_single #x7539bf64 a!2))))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single #x00000000 (mul_single #x7fd4640d a!5)))))
  (concat (concat (concat (concat #x00000000 a!3) a!3) a!3)
          (concat (concat (concat #x00000000 a!6) a!6) a!6))))
    sandbox:   (concat (concat (concat #x00000000f4fbb55e #xf4fbb55ef4fbb55e)
                #x000000007fd4640d)
        #x7fffffff7fffffff)

SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x9d, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single (mul_single #x5400887f a!1) #x00000000)
                       (add_single #x00000000 (mul_single #x7539bf64 a!2))))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single #x00000000 (mul_single #x7fd4640d a!5)))))
  (concat (concat (concat (concat a!3 a!3) #x00000000) a!3)
          (concat (concat (concat a!6 a!6) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #xf4fbb55ef4fbb55e #x00000000f4fbb55e)
                #x7fd4640d7fd4640d)
        #x000000007fffffff)

Completed 3000cases
Execution time vdpps_ymm_ymm_m256_imm8_149: 85 s
Thread 150 done!: vdpps_ymm_ymm_m256_imm8_149
Execution time vdpps_ymm_ymm_m256_imm8_157: 86 s
Thread 158 done!: vdpps_ymm_ymm_m256_imm8_157
Execution time vdpps_ymm_ymm_m256_imm8_151: 86 s
Thread 152 done!: vdpps_ymm_ymm_m256_imm8_151
SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x9b, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single (mul_single #x5400887f a!1) #x00000000)
                       (add_single #x00000000 (mul_single #x7539bf64 a!2))))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single #x00000000 (mul_single #x7fd4640d a!5)))))
  (concat (concat (concat (concat a!3 #x00000000) a!3) a!3)
          (concat (concat (concat a!6 #x00000000) a!6) a!6))))
    sandbox:   (concat (concat (concat #xf4fbb55e00000000 #xf4fbb55ef4fbb55e)
                #x7fd4640d00000000)
        #x7fffffff7fffffff)

SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x9f, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single (mul_single #x5400887f a!1) #x00000000)
                       (add_single #x00000000 (mul_single #x7539bf64 a!2))))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single #x00000000 (mul_single #x7fd4640d a!5)))))
  (concat (concat (concat (concat a!3 a!3) a!3) a!3)
          (concat (concat (concat a!6 a!6) a!6) a!6))))
    sandbox:   (concat (concat (concat #xf4fbb55ef4fbb55e #xf4fbb55ef4fbb55e)
                #x7fd4640d7fd4640d)
        #x7fffffff7fffffff)

SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0x99, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single (mul_single #x5400887f a!1) #x00000000)
                       (add_single #x00000000 (mul_single #x7539bf64 a!2))))
      (a!6 (add_single (add_single (mul_single #x7fffffff a!4) #x00000000)
                       (add_single #x00000000 (mul_single #x7fd4640d a!5)))))
  (concat (concat (concat (concat a!3 #x00000000) #x00000000) a!3)
          (concat (concat (concat a!6 #x00000000) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #xf4fbb55e00000000 #x00000000f4fbb55e)
                #x7fd4640d00000000)
        #x000000007fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_155: 86 s
Thread 156 done!: vdpps_ymm_ymm_m256_imm8_155
Execution time vdpps_ymm_ymm_m256_imm8_159: 87 s
Thread 160 done!: vdpps_ymm_ymm_m256_imm8_159
Execution time vdpps_ymm_ymm_m256_imm8_153: 87 s
Thread 154 done!: vdpps_ymm_ymm_m256_imm8_153
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
SIGNAL 0 [normal exit]

%rax     31 76 55 51 c4 bc 5b 12
%rcx     27 70 95 35 00 05 d0 de
%rdx     48 61 ec 7b bc 4b bb 7f
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     f8 c8 10 79 a1 a0 e4 6b
%rsi     04 8f 16 ff 47 b5 13 cc
%rdi     05 e1 56 a8 81 a6 a7 32
%r8      0c 23 91 a1 83 b2 06 c2
%r9      a0 e7 76 d4 ee ad c3 75
%r10     e4 8d 76 b2 89 e7 9c 89
%r11     4b cb 47 89 c6 65 33 1d
%r12     83 fa f2 0e ee ce 7d 4d
%r13     a7 29 59 1e 89 72 a8 b5
%r14     a4 8b bd 86 a7 30 10 f5
%r15     85 c4 35 38 79 6a f1 f0

%ymm0    7a e5 f7 c7 60 33 92 28 b9 28 37 c9 84 ab 0b fe 04 db ed 0f 33 c4 b6 15 3a 44 6d 85 c1 73 93 b2
%ymm1    2c 7a 99 a2 00 b4 aa 39 54 77 a6 2c be 7e f5 f5 f9 4a e9 fb 45 0e 0e 36 3f f0 00 00 00 00 00 00
%ymm2    b0 2d 61 bf 01 e7 25 5f e6 71 b4 ad 1c 3d 07 f0 7f 89 fa 8a 8f b0 a0 94 7f ef ff ff ff ff ff ff
%ymm3    96 74 22 7f c4 f4 1e 05 f3 37 df 94 50 6e e0 a3 52 a3 9c 62 24 13 67 9a 3f f0 00 00 00 00 00 00
%ymm4    40 0c 40 b5 75 cc 93 f6 08 9e d8 03 ab a1 23 16 50 b5 36 ad 63 93 11 01 6f fe 99 d5 7b e2 dc 8b
%ymm5    f8 14 ba dc d3 ae 9b 1e 38 cf 8b 42 c7 ed 6a c4 42 c9 a1 2b 79 ec f5 cb 89 61 ba 88 f2 bb ee 1c
%ymm6    8d 12 2d e5 19 19 2b 3d 45 7d a2 27 44 d2 9b 02 0b ae 97 46 6c ce a5 41 55 b9 4c 89 30 ea cf a8
%ymm7    ef a1 4c f2 14 3a c5 2f 20 ac 04 e3 67 87 41 40 42 6e a4 40 63 f6 a9 1d 89 db 77 48 86 be fc fc
%ymm8    d9 af eb 90 c0 4a 44 ce 36 0a 08 07 ea 5c 03 07 f5 7c c6 b5 39 57 10 f9 f4 1a 50 d7 91 75 5f 48
%ymm9    e3 dd e1 98 04 32 ad 73 71 63 2f a3 2d 24 9b 26 3a 3f 23 33 4a a7 6d 95 6d 16 84 74 22 6a 24 4b
%ymm10   b3 91 9f ad ad c2 cb 15 be 99 68 4a 28 05 1b 84 d8 f7 e9 b2 bc aa 8f 89 60 e8 1b cb 7a 05 47 06
%ymm11   59 17 ef 73 64 5e d4 b7 b0 12 ec 9b 54 52 33 0a 2a 2e ee a6 56 f7 bc a4 3b 12 15 b2 b1 2d 96 e6
%ymm12   d6 6b 1c 50 11 04 61 9e a0 03 c9 e8 53 b7 fc b7 62 aa 84 58 7f 55 6a d9 ff 72 1d 5a 37 0b 45 85
%ymm13   9c 2a 40 3b 54 d5 1f 03 c3 1b a2 25 7b 9e 5c 92 4b a5 96 94 42 ec 10 ea 6c ba 80 93 bb 0d 76 61
%ymm14   99 57 c4 e3 bb 9a a3 7f 46 ce 60 42 0a 45 a0 e5 ca 02 89 37 b6 e4 a1 22 a1 b5 12 b7 49 58 37 b6
%ymm15   1f 9e 71 24 05 1a 60 22 5f c6 7f df 80 b1 7f 3d a6 3a 9d c1 70 9b 38 39 e4 54 97 c2 b3 e2 af fb

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   31 86 df 71 77 50 ed 00 
00000006 fffffff0   v v v v v v v v   c2 30 a2 92 2b 3d 6a 95 
00000006 ffffffe8   v v v v v v v v   d8 0f 07 4c c4 3c 93 6b 
00000006 ffffffe0   v v v v v v v v   62 ca e9 be 6d 48 f6 bf 
00000006 ffffffd8   v v v v v v v v   0f 8f 84 77 8d bc 5e 30 
00000006 ffffffd0   v v v v v v v v   05 65 27 96 65 5b 8e 8b 
00000006 ffffffc8   v v v v v v v v   4b ca b9 59 da c9 81 a4 
00000006 ffffffc0   v v v v v v v v   5d a1 c8 ad 39 67 3b 98 
00000006 ffffffb8   v v v v v v v v   01 c8 19 5d b7 f9 09 6e 
00000006 ffffffb0   v v v v v v v v   00 cc 08 d9 10 c3 d2 f1 
00000006 ffffffa8   v v v v v v v v   f0 ef d8 36 6c e0 dc af 
00000006 ffffffa0   v v v v v v v v   68 61 72 a0 65 73 7f a4 
00000006 ffffff98   v v v v v v v v   10 20 54 49 f9 3c 66 26 
00000006 ffffff90   v v v v v v v v   bc 45 07 1e d3 e3 19 b9 
00000006 ffffff88   v v v v v v v v   83 f7 5a bd 78 7b 3d c7 
00000006 ffffff80   v v v v v v v v   fb ff 21 c1 62 5f 50 c7 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xa6, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_817202 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xe671b4ad a!1))
                       (add_single #x00000000 (mul_single #xb02d61bf a!2))))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fefffff a!4))
                       (add_single #x00000000 (mul_single #x7f89fa8a a!5)))))
  (concat (concat (concat (concat #x00000000 a!3) a!3) #x00000000)
          (concat (concat (concat #x00000000 a!6) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #x000000006926c5b5 #x6926c5b500000000)
                #x000000007fc9fa8a)
        #x7fefffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_166: 118 s
Thread 167 done!: vdpps_ymm_ymm_m256_imm8_166
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 5000cases
SIGNAL 0 [normal exit]

%rax     31 76 55 51 c4 bc 5b 12
%rcx     27 70 95 35 00 05 d0 de
%rdx     48 61 ec 7b bc 4b bb 7f
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     f8 c8 10 79 a1 a0 e4 6b
%rsi     04 8f 16 ff 47 b5 13 cc
%rdi     05 e1 56 a8 81 a6 a7 32
%r8      0c 23 91 a1 83 b2 06 c2
%r9      a0 e7 76 d4 ee ad c3 75
%r10     e4 8d 76 b2 89 e7 9c 89
%r11     4b cb 47 89 c6 65 33 1d
%r12     83 fa f2 0e ee ce 7d 4d
%r13     a7 29 59 1e 89 72 a8 b5
%r14     a4 8b bd 86 a7 30 10 f5
%r15     85 c4 35 38 79 6a f1 f0

%ymm0    7a e5 f7 c7 60 33 92 28 b9 28 37 c9 84 ab 0b fe 04 db ed 0f 33 c4 b6 15 3a 44 6d 85 c1 73 93 b2
%ymm1    2c 7a 99 a2 00 b4 aa 39 54 77 a6 2c be 7e f5 f5 f9 4a e9 fb 45 0e 0e 36 3f f0 00 00 00 00 00 00
%ymm2    b0 2d 61 bf 01 e7 25 5f e6 71 b4 ad 1c 3d 07 f0 7f 89 fa 8a 8f b0 a0 94 7f ef ff ff ff ff ff ff
%ymm3    96 74 22 7f c4 f4 1e 05 f3 37 df 94 50 6e e0 a3 52 a3 9c 62 24 13 67 9a 3f f0 00 00 00 00 00 00
%ymm4    40 0c 40 b5 75 cc 93 f6 08 9e d8 03 ab a1 23 16 50 b5 36 ad 63 93 11 01 6f fe 99 d5 7b e2 dc 8b
%ymm5    f8 14 ba dc d3 ae 9b 1e 38 cf 8b 42 c7 ed 6a c4 42 c9 a1 2b 79 ec f5 cb 89 61 ba 88 f2 bb ee 1c
%ymm6    8d 12 2d e5 19 19 2b 3d 45 7d a2 27 44 d2 9b 02 0b ae 97 46 6c ce a5 41 55 b9 4c 89 30 ea cf a8
%ymm7    ef a1 4c f2 14 3a c5 2f 20 ac 04 e3 67 87 41 40 42 6e a4 40 63 f6 a9 1d 89 db 77 48 86 be fc fc
%ymm8    d9 af eb 90 c0 4a 44 ce 36 0a 08 07 ea 5c 03 07 f5 7c c6 b5 39 57 10 f9 f4 1a 50 d7 91 75 5f 48
%ymm9    e3 dd e1 98 04 32 ad 73 71 63 2f a3 2d 24 9b 26 3a 3f 23 33 4a a7 6d 95 6d 16 84 74 22 6a 24 4b
%ymm10   b3 91 9f ad ad c2 cb 15 be 99 68 4a 28 05 1b 84 d8 f7 e9 b2 bc aa 8f 89 60 e8 1b cb 7a 05 47 06
%ymm11   59 17 ef 73 64 5e d4 b7 b0 12 ec 9b 54 52 33 0a 2a 2e ee a6 56 f7 bc a4 3b 12 15 b2 b1 2d 96 e6
%ymm12   d6 6b 1c 50 11 04 61 9e a0 03 c9 e8 53 b7 fc b7 62 aa 84 58 7f 55 6a d9 ff 72 1d 5a 37 0b 45 85
%ymm13   9c 2a 40 3b 54 d5 1f 03 c3 1b a2 25 7b 9e 5c 92 4b a5 96 94 42 ec 10 ea 6c ba 80 93 bb 0d 76 61
%ymm14   99 57 c4 e3 bb 9a a3 7f 46 ce 60 42 0a 45 a0 e5 ca 02 89 37 b6 e4 a1 22 a1 b5 12 b7 49 58 37 b6
%ymm15   1f 9e 71 24 05 1a 60 22 5f c6 7f df 80 b1 7f 3d a6 3a 9d c1 70 9b 38 39 e4 54 97 c2 b3 e2 af fb

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   31 86 df 71 77 50 ed 00 
00000006 fffffff0   v v v v v v v v   c2 30 a2 92 2b 3d 6a 95 
00000006 ffffffe8   v v v v v v v v   d8 0f 07 4c c4 3c 93 6b 
00000006 ffffffe0   v v v v v v v v   62 ca e9 be 6d 48 f6 bf 
00000006 ffffffd8   v v v v v v v v   0f 8f 84 77 8d bc 5e 30 
00000006 ffffffd0   v v v v v v v v   05 65 27 96 65 5b 8e 8b 
00000006 ffffffc8   v v v v v v v v   4b ca b9 59 da c9 81 a4 
00000006 ffffffc0   v v v v v v v v   5d a1 c8 ad 39 67 3b 98 
00000006 ffffffb8   v v v v v v v v   01 c8 19 5d b7 f9 09 6e 
00000006 ffffffb0   v v v v v v v v   00 cc 08 d9 10 c3 d2 f1 
00000006 ffffffa8   v v v v v v v v   f0 ef d8 36 6c e0 dc af 
00000006 ffffffa0   v v v v v v v v   68 61 72 a0 65 73 7f a4 
00000006 ffffff98   v v v v v v v v   10 20 54 49 f9 3c 66 26 
00000006 ffffff90   v v v v v v v v   bc 45 07 1e d3 e3 19 b9 
00000006 ffffff88   v v v v v v v v   83 f7 5a bd 78 7b 3d c7 
00000006 ffffff80   v v v v v v v v   fb ff 21 c1 62 5f 50 c7 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xaa, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_817202 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xe671b4ad a!1))
                       (add_single #x00000000 (mul_single #xb02d61bf a!2))))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fefffff a!4))
                       (add_single #x00000000 (mul_single #x7f89fa8a a!5)))))
  (concat (concat (concat (concat a!3 #x00000000) a!3) #x00000000)
          (concat (concat (concat a!6 #x00000000) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #x6926c5b500000000 #x6926c5b500000000)
                #x7fc9fa8a00000000)
        #x7fefffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_170: 127 s
Thread 171 done!: vdpps_ymm_ymm_m256_imm8_170
SIGNAL 0 [normal exit]

%rax     31 76 55 51 c4 bc 5b 12
%rcx     27 70 95 35 00 05 d0 de
%rdx     48 61 ec 7b bc 4b bb 7f
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     f8 c8 10 79 a1 a0 e4 6b
%rsi     04 8f 16 ff 47 b5 13 cc
%rdi     05 e1 56 a8 81 a6 a7 32
%r8      0c 23 91 a1 83 b2 06 c2
%r9      a0 e7 76 d4 ee ad c3 75
%r10     e4 8d 76 b2 89 e7 9c 89
%r11     4b cb 47 89 c6 65 33 1d
%r12     83 fa f2 0e ee ce 7d 4d
%r13     a7 29 59 1e 89 72 a8 b5
%r14     a4 8b bd 86 a7 30 10 f5
%r15     85 c4 35 38 79 6a f1 f0

%ymm0    7a e5 f7 c7 60 33 92 28 b9 28 37 c9 84 ab 0b fe 04 db ed 0f 33 c4 b6 15 3a 44 6d 85 c1 73 93 b2
%ymm1    2c 7a 99 a2 00 b4 aa 39 54 77 a6 2c be 7e f5 f5 f9 4a e9 fb 45 0e 0e 36 3f f0 00 00 00 00 00 00
%ymm2    b0 2d 61 bf 01 e7 25 5f e6 71 b4 ad 1c 3d 07 f0 7f 89 fa 8a 8f b0 a0 94 7f ef ff ff ff ff ff ff
%ymm3    96 74 22 7f c4 f4 1e 05 f3 37 df 94 50 6e e0 a3 52 a3 9c 62 24 13 67 9a 3f f0 00 00 00 00 00 00
%ymm4    40 0c 40 b5 75 cc 93 f6 08 9e d8 03 ab a1 23 16 50 b5 36 ad 63 93 11 01 6f fe 99 d5 7b e2 dc 8b
%ymm5    f8 14 ba dc d3 ae 9b 1e 38 cf 8b 42 c7 ed 6a c4 42 c9 a1 2b 79 ec f5 cb 89 61 ba 88 f2 bb ee 1c
%ymm6    8d 12 2d e5 19 19 2b 3d 45 7d a2 27 44 d2 9b 02 0b ae 97 46 6c ce a5 41 55 b9 4c 89 30 ea cf a8
%ymm7    ef a1 4c f2 14 3a c5 2f 20 ac 04 e3 67 87 41 40 42 6e a4 40 63 f6 a9 1d 89 db 77 48 86 be fc fc
%ymm8    d9 af eb 90 c0 4a 44 ce 36 0a 08 07 ea 5c 03 07 f5 7c c6 b5 39 57 10 f9 f4 1a 50 d7 91 75 5f 48
%ymm9    e3 dd e1 98 04 32 ad 73 71 63 2f a3 2d 24 9b 26 3a 3f 23 33 4a a7 6d 95 6d 16 84 74 22 6a 24 4b
%ymm10   b3 91 9f ad ad c2 cb 15 be 99 68 4a 28 05 1b 84 d8 f7 e9 b2 bc aa 8f 89 60 e8 1b cb 7a 05 47 06
%ymm11   59 17 ef 73 64 5e d4 b7 b0 12 ec 9b 54 52 33 0a 2a 2e ee a6 56 f7 bc a4 3b 12 15 b2 b1 2d 96 e6
%ymm12   d6 6b 1c 50 11 04 61 9e a0 03 c9 e8 53 b7 fc b7 62 aa 84 58 7f 55 6a d9 ff 72 1d 5a 37 0b 45 85
%ymm13   9c 2a 40 3b 54 d5 1f 03 c3 1b a2 25 7b 9e 5c 92 4b a5 96 94 42 ec 10 ea 6c ba 80 93 bb 0d 76 61
%ymm14   99 57 c4 e3 bb 9a a3 7f 46 ce 60 42 0a 45 a0 e5 ca 02 89 37 b6 e4 a1 22 a1 b5 12 b7 49 58 37 b6
%ymm15   1f 9e 71 24 05 1a 60 22 5f c6 7f df 80 b1 7f 3d a6 3a 9d c1 70 9b 38 39 e4 54 97 c2 b3 e2 af fb

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   31 86 df 71 77 50 ed 00 
00000006 fffffff0   v v v v v v v v   c2 30 a2 92 2b 3d 6a 95 
00000006 ffffffe8   v v v v v v v v   d8 0f 07 4c c4 3c 93 6b 
00000006 ffffffe0   v v v v v v v v   62 ca e9 be 6d 48 f6 bf 
00000006 ffffffd8   v v v v v v v v   0f 8f 84 77 8d bc 5e 30 
00000006 ffffffd0   v v v v v v v v   05 65 27 96 65 5b 8e 8b 
00000006 ffffffc8   v v v v v v v v   4b ca b9 59 da c9 81 a4 
00000006 ffffffc0   v v v v v v v v   5d a1 c8 ad 39 67 3b 98 
00000006 ffffffb8   v v v v v v v v   01 c8 19 5d b7 f9 09 6e 
00000006 ffffffb0   v v v v v v v v   00 cc 08 d9 10 c3 d2 f1 
00000006 ffffffa8   v v v v v v v v   f0 ef d8 36 6c e0 dc af 
00000006 ffffffa0   v v v v v v v v   68 61 72 a0 65 73 7f a4 
00000006 ffffff98   v v v v v v v v   10 20 54 49 f9 3c 66 26 
00000006 ffffff90   v v v v v v v v   bc 45 07 1e d3 e3 19 b9 
00000006 ffffff88   v v v v v v v v   83 f7 5a bd 78 7b 3d c7 
00000006 ffffff80   v v v v v v v v   fb ff 21 c1 62 5f 50 c7 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xa7, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_817202 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xe671b4ad a!1))
                       (add_single #x00000000 (mul_single #xb02d61bf a!2))))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fefffff a!4))
                       (add_single #x00000000 (mul_single #x7f89fa8a a!5)))))
  (concat (concat (concat (concat #x00000000 a!3) a!3) a!3)
          (concat (concat (concat #x00000000 a!6) a!6) a!6))))
    sandbox:   (concat (concat (concat #x000000006926c5b5 #x6926c5b56926c5b5)
                #x000000007fc9fa8a)
        #x7fefffff7fefffff)

Execution time vdpps_ymm_ymm_m256_imm8_167: 129 s
Thread 168 done!: vdpps_ymm_ymm_m256_imm8_167
Completed 4000cases
Completed 4000cases
SIGNAL 0 [normal exit]

%rax     31 76 55 51 c4 bc 5b 12
%rcx     27 70 95 35 00 05 d0 de
%rdx     48 61 ec 7b bc 4b bb 7f
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     f8 c8 10 79 a1 a0 e4 6b
%rsi     04 8f 16 ff 47 b5 13 cc
%rdi     05 e1 56 a8 81 a6 a7 32
%r8      0c 23 91 a1 83 b2 06 c2
%r9      a0 e7 76 d4 ee ad c3 75
%r10     e4 8d 76 b2 89 e7 9c 89
%r11     4b cb 47 89 c6 65 33 1d
%r12     83 fa f2 0e ee ce 7d 4d
%r13     a7 29 59 1e 89 72 a8 b5
%r14     a4 8b bd 86 a7 30 10 f5
%r15     85 c4 35 38 79 6a f1 f0

%ymm0    7a e5 f7 c7 60 33 92 28 b9 28 37 c9 84 ab 0b fe 04 db ed 0f 33 c4 b6 15 3a 44 6d 85 c1 73 93 b2
%ymm1    2c 7a 99 a2 00 b4 aa 39 54 77 a6 2c be 7e f5 f5 f9 4a e9 fb 45 0e 0e 36 3f f0 00 00 00 00 00 00
%ymm2    b0 2d 61 bf 01 e7 25 5f e6 71 b4 ad 1c 3d 07 f0 7f 89 fa 8a 8f b0 a0 94 7f ef ff ff ff ff ff ff
%ymm3    96 74 22 7f c4 f4 1e 05 f3 37 df 94 50 6e e0 a3 52 a3 9c 62 24 13 67 9a 3f f0 00 00 00 00 00 00
%ymm4    40 0c 40 b5 75 cc 93 f6 08 9e d8 03 ab a1 23 16 50 b5 36 ad 63 93 11 01 6f fe 99 d5 7b e2 dc 8b
%ymm5    f8 14 ba dc d3 ae 9b 1e 38 cf 8b 42 c7 ed 6a c4 42 c9 a1 2b 79 ec f5 cb 89 61 ba 88 f2 bb ee 1c
%ymm6    8d 12 2d e5 19 19 2b 3d 45 7d a2 27 44 d2 9b 02 0b ae 97 46 6c ce a5 41 55 b9 4c 89 30 ea cf a8
%ymm7    ef a1 4c f2 14 3a c5 2f 20 ac 04 e3 67 87 41 40 42 6e a4 40 63 f6 a9 1d 89 db 77 48 86 be fc fc
%ymm8    d9 af eb 90 c0 4a 44 ce 36 0a 08 07 ea 5c 03 07 f5 7c c6 b5 39 57 10 f9 f4 1a 50 d7 91 75 5f 48
%ymm9    e3 dd e1 98 04 32 ad 73 71 63 2f a3 2d 24 9b 26 3a 3f 23 33 4a a7 6d 95 6d 16 84 74 22 6a 24 4b
%ymm10   b3 91 9f ad ad c2 cb 15 be 99 68 4a 28 05 1b 84 d8 f7 e9 b2 bc aa 8f 89 60 e8 1b cb 7a 05 47 06
%ymm11   59 17 ef 73 64 5e d4 b7 b0 12 ec 9b 54 52 33 0a 2a 2e ee a6 56 f7 bc a4 3b 12 15 b2 b1 2d 96 e6
%ymm12   d6 6b 1c 50 11 04 61 9e a0 03 c9 e8 53 b7 fc b7 62 aa 84 58 7f 55 6a d9 ff 72 1d 5a 37 0b 45 85
%ymm13   9c 2a 40 3b 54 d5 1f 03 c3 1b a2 25 7b 9e 5c 92 4b a5 96 94 42 ec 10 ea 6c ba 80 93 bb 0d 76 61
%ymm14   99 57 c4 e3 bb 9a a3 7f 46 ce 60 42 0a 45 a0 e5 ca 02 89 37 b6 e4 a1 22 a1 b5 12 b7 49 58 37 b6
%ymm15   1f 9e 71 24 05 1a 60 22 5f c6 7f df 80 b1 7f 3d a6 3a 9d c1 70 9b 38 39 e4 54 97 c2 b3 e2 af fb

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   31 86 df 71 77 50 ed 00 
00000006 fffffff0   v v v v v v v v   c2 30 a2 92 2b 3d 6a 95 
00000006 ffffffe8   v v v v v v v v   d8 0f 07 4c c4 3c 93 6b 
00000006 ffffffe0   v v v v v v v v   62 ca e9 be 6d 48 f6 bf 
00000006 ffffffd8   v v v v v v v v   0f 8f 84 77 8d bc 5e 30 
00000006 ffffffd0   v v v v v v v v   05 65 27 96 65 5b 8e 8b 
00000006 ffffffc8   v v v v v v v v   4b ca b9 59 da c9 81 a4 
00000006 ffffffc0   v v v v v v v v   5d a1 c8 ad 39 67 3b 98 
00000006 ffffffb8   v v v v v v v v   01 c8 19 5d b7 f9 09 6e 
00000006 ffffffb0   v v v v v v v v   00 cc 08 d9 10 c3 d2 f1 
00000006 ffffffa8   v v v v v v v v   f0 ef d8 36 6c e0 dc af 
00000006 ffffffa0   v v v v v v v v   68 61 72 a0 65 73 7f a4 
00000006 ffffff98   v v v v v v v v   10 20 54 49 f9 3c 66 26 
00000006 ffffff90   v v v v v v v v   bc 45 07 1e d3 e3 19 b9 
00000006 ffffff88   v v v v v v v v   83 f7 5a bd 78 7b 3d c7 
00000006 ffffff80   v v v v v v v v   fb ff 21 c1 62 5f 50 c7 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xa9, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_817202 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xe671b4ad a!1))
                       (add_single #x00000000 (mul_single #xb02d61bf a!2))))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fefffff a!4))
                       (add_single #x00000000 (mul_single #x7f89fa8a a!5)))))
  (concat (concat (concat (concat a!3 #x00000000) #x00000000) a!3)
          (concat (concat (concat a!6 #x00000000) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #x6926c5b500000000 #x000000006926c5b5)
                #x7fc9fa8a00000000)
        #x000000007fefffff)

Execution time vdpps_ymm_ymm_m256_imm8_169: 134 s
Thread 170 done!: vdpps_ymm_ymm_m256_imm8_169
Completed 4000cases
Completed 4000cases
SIGNAL 0 [normal exit]

%rax     31 76 55 51 c4 bc 5b 12
%rcx     27 70 95 35 00 05 d0 de
%rdx     48 61 ec 7b bc 4b bb 7f
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     f8 c8 10 79 a1 a0 e4 6b
%rsi     04 8f 16 ff 47 b5 13 cc
%rdi     05 e1 56 a8 81 a6 a7 32
%r8      0c 23 91 a1 83 b2 06 c2
%r9      a0 e7 76 d4 ee ad c3 75
%r10     e4 8d 76 b2 89 e7 9c 89
%r11     4b cb 47 89 c6 65 33 1d
%r12     83 fa f2 0e ee ce 7d 4d
%r13     a7 29 59 1e 89 72 a8 b5
%r14     a4 8b bd 86 a7 30 10 f5
%r15     85 c4 35 38 79 6a f1 f0

%ymm0    7a e5 f7 c7 60 33 92 28 b9 28 37 c9 84 ab 0b fe 04 db ed 0f 33 c4 b6 15 3a 44 6d 85 c1 73 93 b2
%ymm1    2c 7a 99 a2 00 b4 aa 39 54 77 a6 2c be 7e f5 f5 f9 4a e9 fb 45 0e 0e 36 3f f0 00 00 00 00 00 00
%ymm2    b0 2d 61 bf 01 e7 25 5f e6 71 b4 ad 1c 3d 07 f0 7f 89 fa 8a 8f b0 a0 94 7f ef ff ff ff ff ff ff
%ymm3    96 74 22 7f c4 f4 1e 05 f3 37 df 94 50 6e e0 a3 52 a3 9c 62 24 13 67 9a 3f f0 00 00 00 00 00 00
%ymm4    40 0c 40 b5 75 cc 93 f6 08 9e d8 03 ab a1 23 16 50 b5 36 ad 63 93 11 01 6f fe 99 d5 7b e2 dc 8b
%ymm5    f8 14 ba dc d3 ae 9b 1e 38 cf 8b 42 c7 ed 6a c4 42 c9 a1 2b 79 ec f5 cb 89 61 ba 88 f2 bb ee 1c
%ymm6    8d 12 2d e5 19 19 2b 3d 45 7d a2 27 44 d2 9b 02 0b ae 97 46 6c ce a5 41 55 b9 4c 89 30 ea cf a8
%ymm7    ef a1 4c f2 14 3a c5 2f 20 ac 04 e3 67 87 41 40 42 6e a4 40 63 f6 a9 1d 89 db 77 48 86 be fc fc
%ymm8    d9 af eb 90 c0 4a 44 ce 36 0a 08 07 ea 5c 03 07 f5 7c c6 b5 39 57 10 f9 f4 1a 50 d7 91 75 5f 48
%ymm9    e3 dd e1 98 04 32 ad 73 71 63 2f a3 2d 24 9b 26 3a 3f 23 33 4a a7 6d 95 6d 16 84 74 22 6a 24 4b
%ymm10   b3 91 9f ad ad c2 cb 15 be 99 68 4a 28 05 1b 84 d8 f7 e9 b2 bc aa 8f 89 60 e8 1b cb 7a 05 47 06
%ymm11   59 17 ef 73 64 5e d4 b7 b0 12 ec 9b 54 52 33 0a 2a 2e ee a6 56 f7 bc a4 3b 12 15 b2 b1 2d 96 e6
%ymm12   d6 6b 1c 50 11 04 61 9e a0 03 c9 e8 53 b7 fc b7 62 aa 84 58 7f 55 6a d9 ff 72 1d 5a 37 0b 45 85
%ymm13   9c 2a 40 3b 54 d5 1f 03 c3 1b a2 25 7b 9e 5c 92 4b a5 96 94 42 ec 10 ea 6c ba 80 93 bb 0d 76 61
%ymm14   99 57 c4 e3 bb 9a a3 7f 46 ce 60 42 0a 45 a0 e5 ca 02 89 37 b6 e4 a1 22 a1 b5 12 b7 49 58 37 b6
%ymm15   1f 9e 71 24 05 1a 60 22 5f c6 7f df 80 b1 7f 3d a6 3a 9d c1 70 9b 38 39 e4 54 97 c2 b3 e2 af fb

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   31 86 df 71 77 50 ed 00 
00000006 fffffff0   v v v v v v v v   c2 30 a2 92 2b 3d 6a 95 
00000006 ffffffe8   v v v v v v v v   d8 0f 07 4c c4 3c 93 6b 
00000006 ffffffe0   v v v v v v v v   62 ca e9 be 6d 48 f6 bf 
00000006 ffffffd8   v v v v v v v v   0f 8f 84 77 8d bc 5e 30 
00000006 ffffffd0   v v v v v v v v   05 65 27 96 65 5b 8e 8b 
00000006 ffffffc8   v v v v v v v v   4b ca b9 59 da c9 81 a4 
00000006 ffffffc0   v v v v v v v v   5d a1 c8 ad 39 67 3b 98 
00000006 ffffffb8   v v v v v v v v   01 c8 19 5d b7 f9 09 6e 
00000006 ffffffb0   v v v v v v v v   00 cc 08 d9 10 c3 d2 f1 
00000006 ffffffa8   v v v v v v v v   f0 ef d8 36 6c e0 dc af 
00000006 ffffffa0   v v v v v v v v   68 61 72 a0 65 73 7f a4 
00000006 ffffff98   v v v v v v v v   10 20 54 49 f9 3c 66 26 
00000006 ffffff90   v v v v v v v v   bc 45 07 1e d3 e3 19 b9 
00000006 ffffff88   v v v v v v v v   83 f7 5a bd 78 7b 3d c7 
00000006 ffffff80   v v v v v v v v   fb ff 21 c1 62 5f 50 c7 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xab, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_817202 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xe671b4ad a!1))
                       (add_single #x00000000 (mul_single #xb02d61bf a!2))))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fefffff a!4))
                       (add_single #x00000000 (mul_single #x7f89fa8a a!5)))))
  (concat (concat (concat (concat a!3 #x00000000) a!3) a!3)
          (concat (concat (concat a!6 #x00000000) a!6) a!6))))
    sandbox:   (concat (concat (concat #x6926c5b500000000 #x6926c5b56926c5b5)
                #x7fc9fa8a00000000)
        #x7fefffff7fefffff)

Completed 4000cases
Completed 4000cases
Execution time vdpps_ymm_ymm_m256_imm8_171: 135 s
Thread 172 done!: vdpps_ymm_ymm_m256_imm8_171
SIGNAL 0 [normal exit]

%rax     31 76 55 51 c4 bc 5b 12
%rcx     27 70 95 35 00 05 d0 de
%rdx     48 61 ec 7b bc 4b bb 7f
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     f8 c8 10 79 a1 a0 e4 6b
%rsi     04 8f 16 ff 47 b5 13 cc
%rdi     05 e1 56 a8 81 a6 a7 32
%r8      0c 23 91 a1 83 b2 06 c2
%r9      a0 e7 76 d4 ee ad c3 75
%r10     e4 8d 76 b2 89 e7 9c 89
%r11     4b cb 47 89 c6 65 33 1d
%r12     83 fa f2 0e ee ce 7d 4d
%r13     a7 29 59 1e 89 72 a8 b5
%r14     a4 8b bd 86 a7 30 10 f5
%r15     85 c4 35 38 79 6a f1 f0

%ymm0    7a e5 f7 c7 60 33 92 28 b9 28 37 c9 84 ab 0b fe 04 db ed 0f 33 c4 b6 15 3a 44 6d 85 c1 73 93 b2
%ymm1    2c 7a 99 a2 00 b4 aa 39 54 77 a6 2c be 7e f5 f5 f9 4a e9 fb 45 0e 0e 36 3f f0 00 00 00 00 00 00
%ymm2    b0 2d 61 bf 01 e7 25 5f e6 71 b4 ad 1c 3d 07 f0 7f 89 fa 8a 8f b0 a0 94 7f ef ff ff ff ff ff ff
%ymm3    96 74 22 7f c4 f4 1e 05 f3 37 df 94 50 6e e0 a3 52 a3 9c 62 24 13 67 9a 3f f0 00 00 00 00 00 00
%ymm4    40 0c 40 b5 75 cc 93 f6 08 9e d8 03 ab a1 23 16 50 b5 36 ad 63 93 11 01 6f fe 99 d5 7b e2 dc 8b
%ymm5    f8 14 ba dc d3 ae 9b 1e 38 cf 8b 42 c7 ed 6a c4 42 c9 a1 2b 79 ec f5 cb 89 61 ba 88 f2 bb ee 1c
%ymm6    8d 12 2d e5 19 19 2b 3d 45 7d a2 27 44 d2 9b 02 0b ae 97 46 6c ce a5 41 55 b9 4c 89 30 ea cf a8
%ymm7    ef a1 4c f2 14 3a c5 2f 20 ac 04 e3 67 87 41 40 42 6e a4 40 63 f6 a9 1d 89 db 77 48 86 be fc fc
%ymm8    d9 af eb 90 c0 4a 44 ce 36 0a 08 07 ea 5c 03 07 f5 7c c6 b5 39 57 10 f9 f4 1a 50 d7 91 75 5f 48
%ymm9    e3 dd e1 98 04 32 ad 73 71 63 2f a3 2d 24 9b 26 3a 3f 23 33 4a a7 6d 95 6d 16 84 74 22 6a 24 4b
%ymm10   b3 91 9f ad ad c2 cb 15 be 99 68 4a 28 05 1b 84 d8 f7 e9 b2 bc aa 8f 89 60 e8 1b cb 7a 05 47 06
%ymm11   59 17 ef 73 64 5e d4 b7 b0 12 ec 9b 54 52 33 0a 2a 2e ee a6 56 f7 bc a4 3b 12 15 b2 b1 2d 96 e6
%ymm12   d6 6b 1c 50 11 04 61 9e a0 03 c9 e8 53 b7 fc b7 62 aa 84 58 7f 55 6a d9 ff 72 1d 5a 37 0b 45 85
%ymm13   9c 2a 40 3b 54 d5 1f 03 c3 1b a2 25 7b 9e 5c 92 4b a5 96 94 42 ec 10 ea 6c ba 80 93 bb 0d 76 61
%ymm14   99 57 c4 e3 bb 9a a3 7f 46 ce 60 42 0a 45 a0 e5 ca 02 89 37 b6 e4 a1 22 a1 b5 12 b7 49 58 37 b6
%ymm15   1f 9e 71 24 05 1a 60 22 5f c6 7f df 80 b1 7f 3d a6 3a 9d c1 70 9b 38 39 e4 54 97 c2 b3 e2 af fb

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   31 86 df 71 77 50 ed 00 
00000006 fffffff0   v v v v v v v v   c2 30 a2 92 2b 3d 6a 95 
00000006 ffffffe8   v v v v v v v v   d8 0f 07 4c c4 3c 93 6b 
00000006 ffffffe0   v v v v v v v v   62 ca e9 be 6d 48 f6 bf 
00000006 ffffffd8   v v v v v v v v   0f 8f 84 77 8d bc 5e 30 
00000006 ffffffd0   v v v v v v v v   05 65 27 96 65 5b 8e 8b 
00000006 ffffffc8   v v v v v v v v   4b ca b9 59 da c9 81 a4 
00000006 ffffffc0   v v v v v v v v   5d a1 c8 ad 39 67 3b 98 
00000006 ffffffb8   v v v v v v v v   01 c8 19 5d b7 f9 09 6e 
00000006 ffffffb0   v v v v v v v v   00 cc 08 d9 10 c3 d2 f1 
00000006 ffffffa8   v v v v v v v v   f0 ef d8 36 6c e0 dc af 
00000006 ffffffa0   v v v v v v v v   68 61 72 a0 65 73 7f a4 
00000006 ffffff98   v v v v v v v v   10 20 54 49 f9 3c 66 26 
00000006 ffffff90   v v v v v v v v   bc 45 07 1e d3 e3 19 b9 
00000006 ffffff88   v v v v v v v v   83 f7 5a bd 78 7b 3d c7 
00000006 ffffff80   v v v v v v v v   fb ff 21 c1 62 5f 50 c7 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xae, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_817202 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xe671b4ad a!1))
                       (add_single #x00000000 (mul_single #xb02d61bf a!2))))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fefffff a!4))
                       (add_single #x00000000 (mul_single #x7f89fa8a a!5)))))
  (concat (concat (concat (concat a!3 a!3) a!3) #x00000000)
          (concat (concat (concat a!6 a!6) a!6) #x00000000))))
    sandbox:   (concat (concat (concat #x6926c5b56926c5b5 #x6926c5b500000000)
                #x7fc9fa8a7fc9fa8a)
        #x7fefffff00000000)

Completed 4000cases
Execution time vdpps_ymm_ymm_m256_imm8_174: 135 s
Thread 175 done!: vdpps_ymm_ymm_m256_imm8_174
SIGNAL 0 [normal exit]

%rax     31 76 55 51 c4 bc 5b 12
%rcx     27 70 95 35 00 05 d0 de
%rdx     48 61 ec 7b bc 4b bb 7f
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     f8 c8 10 79 a1 a0 e4 6b
%rsi     04 8f 16 ff 47 b5 13 cc
%rdi     05 e1 56 a8 81 a6 a7 32
%r8      0c 23 91 a1 83 b2 06 c2
%r9      a0 e7 76 d4 ee ad c3 75
%r10     e4 8d 76 b2 89 e7 9c 89
%r11     4b cb 47 89 c6 65 33 1d
%r12     83 fa f2 0e ee ce 7d 4d
%r13     a7 29 59 1e 89 72 a8 b5
%r14     a4 8b bd 86 a7 30 10 f5
%r15     85 c4 35 38 79 6a f1 f0

%ymm0    7a e5 f7 c7 60 33 92 28 b9 28 37 c9 84 ab 0b fe 04 db ed 0f 33 c4 b6 15 3a 44 6d 85 c1 73 93 b2
%ymm1    2c 7a 99 a2 00 b4 aa 39 54 77 a6 2c be 7e f5 f5 f9 4a e9 fb 45 0e 0e 36 3f f0 00 00 00 00 00 00
%ymm2    b0 2d 61 bf 01 e7 25 5f e6 71 b4 ad 1c 3d 07 f0 7f 89 fa 8a 8f b0 a0 94 7f ef ff ff ff ff ff ff
%ymm3    96 74 22 7f c4 f4 1e 05 f3 37 df 94 50 6e e0 a3 52 a3 9c 62 24 13 67 9a 3f f0 00 00 00 00 00 00
%ymm4    40 0c 40 b5 75 cc 93 f6 08 9e d8 03 ab a1 23 16 50 b5 36 ad 63 93 11 01 6f fe 99 d5 7b e2 dc 8b
%ymm5    f8 14 ba dc d3 ae 9b 1e 38 cf 8b 42 c7 ed 6a c4 42 c9 a1 2b 79 ec f5 cb 89 61 ba 88 f2 bb ee 1c
%ymm6    8d 12 2d e5 19 19 2b 3d 45 7d a2 27 44 d2 9b 02 0b ae 97 46 6c ce a5 41 55 b9 4c 89 30 ea cf a8
%ymm7    ef a1 4c f2 14 3a c5 2f 20 ac 04 e3 67 87 41 40 42 6e a4 40 63 f6 a9 1d 89 db 77 48 86 be fc fc
%ymm8    d9 af eb 90 c0 4a 44 ce 36 0a 08 07 ea 5c 03 07 f5 7c c6 b5 39 57 10 f9 f4 1a 50 d7 91 75 5f 48
%ymm9    e3 dd e1 98 04 32 ad 73 71 63 2f a3 2d 24 9b 26 3a 3f 23 33 4a a7 6d 95 6d 16 84 74 22 6a 24 4b
%ymm10   b3 91 9f ad ad c2 cb 15 be 99 68 4a 28 05 1b 84 d8 f7 e9 b2 bc aa 8f 89 60 e8 1b cb 7a 05 47 06
%ymm11   59 17 ef 73 64 5e d4 b7 b0 12 ec 9b 54 52 33 0a 2a 2e ee a6 56 f7 bc a4 3b 12 15 b2 b1 2d 96 e6
%ymm12   d6 6b 1c 50 11 04 61 9e a0 03 c9 e8 53 b7 fc b7 62 aa 84 58 7f 55 6a d9 ff 72 1d 5a 37 0b 45 85
%ymm13   9c 2a 40 3b 54 d5 1f 03 c3 1b a2 25 7b 9e 5c 92 4b a5 96 94 42 ec 10 ea 6c ba 80 93 bb 0d 76 61
%ymm14   99 57 c4 e3 bb 9a a3 7f 46 ce 60 42 0a 45 a0 e5 ca 02 89 37 b6 e4 a1 22 a1 b5 12 b7 49 58 37 b6
%ymm15   1f 9e 71 24 05 1a 60 22 5f c6 7f df 80 b1 7f 3d a6 3a 9d c1 70 9b 38 39 e4 54 97 c2 b3 e2 af fb

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   31 86 df 71 77 50 ed 00 
00000006 fffffff0   v v v v v v v v   c2 30 a2 92 2b 3d 6a 95 
00000006 ffffffe8   v v v v v v v v   d8 0f 07 4c c4 3c 93 6b 
00000006 ffffffe0   v v v v v v v v   62 ca e9 be 6d 48 f6 bf 
00000006 ffffffd8   v v v v v v v v   0f 8f 84 77 8d bc 5e 30 
00000006 ffffffd0   v v v v v v v v   05 65 27 96 65 5b 8e 8b 
00000006 ffffffc8   v v v v v v v v   4b ca b9 59 da c9 81 a4 
00000006 ffffffc0   v v v v v v v v   5d a1 c8 ad 39 67 3b 98 
00000006 ffffffb8   v v v v v v v v   01 c8 19 5d b7 f9 09 6e 
00000006 ffffffb0   v v v v v v v v   00 cc 08 d9 10 c3 d2 f1 
00000006 ffffffa8   v v v v v v v v   f0 ef d8 36 6c e0 dc af 
00000006 ffffffa0   v v v v v v v v   68 61 72 a0 65 73 7f a4 
00000006 ffffff98   v v v v v v v v   10 20 54 49 f9 3c 66 26 
00000006 ffffff90   v v v v v v v v   bc 45 07 1e d3 e3 19 b9 
00000006 ffffff88   v v v v v v v v   83 f7 5a bd 78 7b 3d c7 
00000006 ffffff80   v v v v v v v v   fb ff 21 c1 62 5f 50 c7 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xad, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_817202 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xe671b4ad a!1))
                       (add_single #x00000000 (mul_single #xb02d61bf a!2))))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fefffff a!4))
                       (add_single #x00000000 (mul_single #x7f89fa8a a!5)))))
  (concat (concat (concat (concat a!3 a!3) #x00000000) a!3)
          (concat (concat (concat a!6 a!6) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #x6926c5b56926c5b5 #x000000006926c5b5)
                #x7fc9fa8a7fc9fa8a)
        #x000000007fefffff)

Completed 4000cases
Execution time vdpps_ymm_ymm_m256_imm8_173: 136 s
Thread 174 done!: vdpps_ymm_ymm_m256_imm8_173
Completed 4000cases
SIGNAL 0 [normal exit]

%rax     31 76 55 51 c4 bc 5b 12
%rcx     27 70 95 35 00 05 d0 de
%rdx     48 61 ec 7b bc 4b bb 7f
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     f8 c8 10 79 a1 a0 e4 6b
%rsi     04 8f 16 ff 47 b5 13 cc
%rdi     05 e1 56 a8 81 a6 a7 32
%r8      0c 23 91 a1 83 b2 06 c2
%r9      a0 e7 76 d4 ee ad c3 75
%r10     e4 8d 76 b2 89 e7 9c 89
%r11     4b cb 47 89 c6 65 33 1d
%r12     83 fa f2 0e ee ce 7d 4d
%r13     a7 29 59 1e 89 72 a8 b5
%r14     a4 8b bd 86 a7 30 10 f5
%r15     85 c4 35 38 79 6a f1 f0

%ymm0    7a e5 f7 c7 60 33 92 28 b9 28 37 c9 84 ab 0b fe 04 db ed 0f 33 c4 b6 15 3a 44 6d 85 c1 73 93 b2
%ymm1    2c 7a 99 a2 00 b4 aa 39 54 77 a6 2c be 7e f5 f5 f9 4a e9 fb 45 0e 0e 36 3f f0 00 00 00 00 00 00
%ymm2    b0 2d 61 bf 01 e7 25 5f e6 71 b4 ad 1c 3d 07 f0 7f 89 fa 8a 8f b0 a0 94 7f ef ff ff ff ff ff ff
%ymm3    96 74 22 7f c4 f4 1e 05 f3 37 df 94 50 6e e0 a3 52 a3 9c 62 24 13 67 9a 3f f0 00 00 00 00 00 00
%ymm4    40 0c 40 b5 75 cc 93 f6 08 9e d8 03 ab a1 23 16 50 b5 36 ad 63 93 11 01 6f fe 99 d5 7b e2 dc 8b
%ymm5    f8 14 ba dc d3 ae 9b 1e 38 cf 8b 42 c7 ed 6a c4 42 c9 a1 2b 79 ec f5 cb 89 61 ba 88 f2 bb ee 1c
%ymm6    8d 12 2d e5 19 19 2b 3d 45 7d a2 27 44 d2 9b 02 0b ae 97 46 6c ce a5 41 55 b9 4c 89 30 ea cf a8
%ymm7    ef a1 4c f2 14 3a c5 2f 20 ac 04 e3 67 87 41 40 42 6e a4 40 63 f6 a9 1d 89 db 77 48 86 be fc fc
%ymm8    d9 af eb 90 c0 4a 44 ce 36 0a 08 07 ea 5c 03 07 f5 7c c6 b5 39 57 10 f9 f4 1a 50 d7 91 75 5f 48
%ymm9    e3 dd e1 98 04 32 ad 73 71 63 2f a3 2d 24 9b 26 3a 3f 23 33 4a a7 6d 95 6d 16 84 74 22 6a 24 4b
%ymm10   b3 91 9f ad ad c2 cb 15 be 99 68 4a 28 05 1b 84 d8 f7 e9 b2 bc aa 8f 89 60 e8 1b cb 7a 05 47 06
%ymm11   59 17 ef 73 64 5e d4 b7 b0 12 ec 9b 54 52 33 0a 2a 2e ee a6 56 f7 bc a4 3b 12 15 b2 b1 2d 96 e6
%ymm12   d6 6b 1c 50 11 04 61 9e a0 03 c9 e8 53 b7 fc b7 62 aa 84 58 7f 55 6a d9 ff 72 1d 5a 37 0b 45 85
%ymm13   9c 2a 40 3b 54 d5 1f 03 c3 1b a2 25 7b 9e 5c 92 4b a5 96 94 42 ec 10 ea 6c ba 80 93 bb 0d 76 61
%ymm14   99 57 c4 e3 bb 9a a3 7f 46 ce 60 42 0a 45 a0 e5 ca 02 89 37 b6 e4 a1 22 a1 b5 12 b7 49 58 37 b6
%ymm15   1f 9e 71 24 05 1a 60 22 5f c6 7f df 80 b1 7f 3d a6 3a 9d c1 70 9b 38 39 e4 54 97 c2 b3 e2 af fb

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   31 86 df 71 77 50 ed 00 
00000006 fffffff0   v v v v v v v v   c2 30 a2 92 2b 3d 6a 95 
00000006 ffffffe8   v v v v v v v v   d8 0f 07 4c c4 3c 93 6b 
00000006 ffffffe0   v v v v v v v v   62 ca e9 be 6d 48 f6 bf 
00000006 ffffffd8   v v v v v v v v   0f 8f 84 77 8d bc 5e 30 
00000006 ffffffd0   v v v v v v v v   05 65 27 96 65 5b 8e 8b 
00000006 ffffffc8   v v v v v v v v   4b ca b9 59 da c9 81 a4 
00000006 ffffffc0   v v v v v v v v   5d a1 c8 ad 39 67 3b 98 
00000006 ffffffb8   v v v v v v v v   01 c8 19 5d b7 f9 09 6e 
00000006 ffffffb0   v v v v v v v v   00 cc 08 d9 10 c3 d2 f1 
00000006 ffffffa8   v v v v v v v v   f0 ef d8 36 6c e0 dc af 
00000006 ffffffa0   v v v v v v v v   68 61 72 a0 65 73 7f a4 
00000006 ffffff98   v v v v v v v v   10 20 54 49 f9 3c 66 26 
00000006 ffffff90   v v v v v v v v   bc 45 07 1e d3 e3 19 b9 
00000006 ffffff88   v v v v v v v v   83 f7 5a bd 78 7b 3d c7 
00000006 ffffff80   v v v v v v v v   fb ff 21 c1 62 5f 50 c7 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xa5, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_817202 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xe671b4ad a!1))
                       (add_single #x00000000 (mul_single #xb02d61bf a!2))))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fefffff a!4))
                       (add_single #x00000000 (mul_single #x7f89fa8a a!5)))))
  (concat (concat (concat (concat #x00000000 a!3) #x00000000) a!3)
          (concat (concat (concat #x00000000 a!6) #x00000000) a!6))))
    sandbox:   (concat (concat (concat #x000000006926c5b5 #x000000006926c5b5)
                #x000000007fc9fa8a)
        #x000000007fefffff)

Completed 4000cases
Execution time vdpps_ymm_ymm_m256_imm8_165: 139 s
Thread 166 done!: vdpps_ymm_ymm_m256_imm8_165
Completed 6000cases
Completed 5000cases
Completed 5000cases
Completed 6000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_160: 149 s
Thread 161 done!: vdpps_ymm_ymm_m256_imm8_160
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_144: 157 s
Thread 145 done!: vdpps_ymm_ymm_m256_imm8_144
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_142: 178 s
Thread 143 done!: vdpps_ymm_ymm_m256_imm8_142
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_140: 180 s
Thread 141 done!: vdpps_ymm_ymm_m256_imm8_140
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_141: 181 s
Thread 142 done!: vdpps_ymm_ymm_m256_imm8_141
Execution time vdpps_ymm_ymm_m256_imm8_148: 181 s
Thread 149 done!: vdpps_ymm_ymm_m256_imm8_148
Execution time vdpps_ymm_ymm_m256_imm8_143: 181 s
Thread 144 done!: vdpps_ymm_ymm_m256_imm8_143
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_152: 185 s
Thread 153 done!: vdpps_ymm_ymm_m256_imm8_152
Execution time vdpps_ymm_ymm_m256_imm8_145: 192 s
Thread 146 done!: vdpps_ymm_ymm_m256_imm8_145
Execution time vdpps_ymm_ymm_m256_imm8_146: 192 s
Thread 147 done!: vdpps_ymm_ymm_m256_imm8_146
Execution time vdpps_ymm_ymm_m256_imm8_164: 192 s
Thread 165 done!: vdpps_ymm_ymm_m256_imm8_164
Execution time vdpps_ymm_ymm_m256_imm8_161: 193 s
Thread 162 done!: vdpps_ymm_ymm_m256_imm8_161
Execution time vdpps_ymm_ymm_m256_imm8_162: 193 s
Thread 163 done!: vdpps_ymm_ymm_m256_imm8_162
Execution time vdpps_ymm_ymm_m256_imm8_172: 192 s
Thread 173 done!: vdpps_ymm_ymm_m256_imm8_172
Execution time vdpps_ymm_ymm_m256_imm8_156: 194 s
Thread 157 done!: vdpps_ymm_ymm_m256_imm8_156
Execution time vdpps_ymm_ymm_m256_imm8_168: 194 s
Thread 169 done!: vdpps_ymm_ymm_m256_imm8_168
Execution time vdpps_ymm_ymm_m256_imm8_163: 195 s
Thread 164 done!: vdpps_ymm_ymm_m256_imm8_163
Execution time vdpps_ymm_ymm_m256_imm8_147: 195 s
Thread 148 done!: vdpps_ymm_ymm_m256_imm8_147
[4m[1m[34mFiring 35.[0m
Thread 176 start: vdpps_ymm_ymm_m256_imm8_175
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_175/vdpps_ymm_ymm_m256_imm8_175.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 178 start: vdpps_ymm_ymm_m256_imm8_177
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_177/vdpps_ymm_ymm_m256_imm8_177.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 180 start: vdpps_ymm_ymm_m256_imm8_179
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_179/vdpps_ymm_ymm_m256_imm8_179.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 179 start: vdpps_ymm_ymm_m256_imm8_178
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_178/vdpps_ymm_ymm_m256_imm8_178.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 177 start: vdpps_ymm_ymm_m256_imm8_176
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_176/vdpps_ymm_ymm_m256_imm8_176.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 181 start: vdpps_ymm_ymm_m256_imm8_180
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_180/vdpps_ymm_ymm_m256_imm8_180.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 182 start: vdpps_ymm_ymm_m256_imm8_181
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_181/vdpps_ymm_ymm_m256_imm8_181.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 183 start: vdpps_ymm_ymm_m256_imm8_182
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_182/vdpps_ymm_ymm_m256_imm8_182.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 184 start: vdpps_ymm_ymm_m256_imm8_183
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_183/vdpps_ymm_ymm_m256_imm8_183.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 185 start: vdpps_ymm_ymm_m256_imm8_184
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_184/vdpps_ymm_ymm_m256_imm8_184.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 186 start: vdpps_ymm_ymm_m256_imm8_185
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_185/vdpps_ymm_ymm_m256_imm8_185.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 187 start: vdpps_ymm_ymm_m256_imm8_186
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_186/vdpps_ymm_ymm_m256_imm8_186.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 188 start: vdpps_ymm_ymm_m256_imm8_187
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_187/vdpps_ymm_ymm_m256_imm8_187.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 189 start: vdpps_ymm_ymm_m256_imm8_188
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_188/vdpps_ymm_ymm_m256_imm8_188.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 190 start: vdpps_ymm_ymm_m256_imm8_189
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_189/vdpps_ymm_ymm_m256_imm8_189.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 191 start: vdpps_ymm_ymm_m256_imm8_190
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_190/vdpps_ymm_ymm_m256_imm8_190.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 192 start: vdpps_ymm_ymm_m256_imm8_191
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_191/vdpps_ymm_ymm_m256_imm8_191.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 193 start: vdpps_ymm_ymm_m256_imm8_192
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_192/vdpps_ymm_ymm_m256_imm8_192.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 194 start: vdpps_ymm_ymm_m256_imm8_193
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_193/vdpps_ymm_ymm_m256_imm8_193.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 195 start: vdpps_ymm_ymm_m256_imm8_194
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_194/vdpps_ymm_ymm_m256_imm8_194.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 196 start: vdpps_ymm_ymm_m256_imm8_195
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_195/vdpps_ymm_ymm_m256_imm8_195.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 197 start: vdpps_ymm_ymm_m256_imm8_196
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_196/vdpps_ymm_ymm_m256_imm8_196.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 198 start: vdpps_ymm_ymm_m256_imm8_197
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_197/vdpps_ymm_ymm_m256_imm8_197.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 200 start: vdpps_ymm_ymm_m256_imm8_199
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_199/vdpps_ymm_ymm_m256_imm8_199.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 199 start: vdpps_ymm_ymm_m256_imm8_198
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_198/vdpps_ymm_ymm_m256_imm8_198.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 201 start: vdpps_ymm_ymm_m256_imm8_200
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_200/vdpps_ymm_ymm_m256_imm8_200.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 202 start: vdpps_ymm_ymm_m256_imm8_201
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_201/vdpps_ymm_ymm_m256_imm8_201.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 203 start: vdpps_ymm_ymm_m256_imm8_202
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_202/vdpps_ymm_ymm_m256_imm8_202.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 204 start: vdpps_ymm_ymm_m256_imm8_203
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_203/vdpps_ymm_ymm_m256_imm8_203.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 205 start: vdpps_ymm_ymm_m256_imm8_204
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_204/vdpps_ymm_ymm_m256_imm8_204.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 206 start: vdpps_ymm_ymm_m256_imm8_205
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_205/vdpps_ymm_ymm_m256_imm8_205.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 207 start: vdpps_ymm_ymm_m256_imm8_206
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_206/vdpps_ymm_ymm_m256_imm8_206.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 208 start: vdpps_ymm_ymm_m256_imm8_207
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_207/vdpps_ymm_ymm_m256_imm8_207.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 209 start: vdpps_ymm_ymm_m256_imm8_208
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_208/vdpps_ymm_ymm_m256_imm8_208.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 210 start: vdpps_ymm_ymm_m256_imm8_209
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_209/vdpps_ymm_ymm_m256_imm8_209.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xc6, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!3 (concat #x00000000
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!7 (concat #x00000000
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6))))))
(let ((a!4 (concat a!3
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!8 (concat a!7
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6))))))
  (concat (concat a!4 #x00000000) (concat a!8 #x00000000)))))
    sandbox:   (concat (concat (concat #x00000000fffb1ac0 #xffc9aa9700000000)
                #x000000007f800000)
        #x7f80000000000000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xce, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!3 (concat (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!7 (concat (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6)))
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6))))))
(let ((a!4 (concat a!3
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!8 (concat a!7
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6))))))
  (concat (concat a!4 #x00000000) (concat a!8 #x00000000)))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #xffc9aa9700000000)
                #x7f8000007f800000)
        #x7f80000000000000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xc3, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!3 (concat #x0000000000000000
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!7 (concat #x0000000000000000
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6))))))
(let ((a!4 (concat a!3
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!8 (concat a!7
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6))))))
  (concat a!4 a!8))))
    sandbox:   (concat (concat (concat #x0000000000000000 #xffc9aa97fffb1ac0)
                #x0000000000000000)
        #x7f8000007f800000)

Execution time vdpps_ymm_ymm_m256_imm8_198: 45 s
Thread 199 done!: vdpps_ymm_ymm_m256_imm8_198
Execution time vdpps_ymm_ymm_m256_imm8_206: 45 s
Thread 207 done!: vdpps_ymm_ymm_m256_imm8_206
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xcf, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!3 (concat (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!8 (concat (add_single #x00000000
                               (add_single (mul_single #x7000603f a!6)
                                           (mul_single #x5e5a2829 a!7)))
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!6)
                                           (mul_single #x5e5a2829 a!7))))))
(let ((a!4 (concat a!3
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!9 (concat a!8
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!6)
                                           (mul_single #x5e5a2829 a!7))))))
(let ((a!5 (concat a!4
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!10 (concat a!9
                    (add_single #x00000000
                                (add_single (mul_single #x7000603f a!6)
                                            (mul_single #x5e5a2829 a!7))))))
  (concat a!5 a!10)))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #xffc9aa97fffb1ac0)
                #x7f8000007f800000)
        #x7f8000007f800000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Execution time vdpps_ymm_ymm_m256_imm8_195: 46 s
Thread 196 done!: vdpps_ymm_ymm_m256_imm8_195
Completed 2000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xcc, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!3 (concat (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!6 (concat (add_single #x00000000
                               (add_single (mul_single #x7000603f a!4)
                                           (mul_single #x5e5a2829 a!5)))
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!4)
                                           (mul_single #x5e5a2829 a!5))))))
  (concat (concat (concat a!3 #x00000000) #x00000000)
          (concat (concat a!6 #x00000000) #x00000000))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #x0000000000000000)
                #x7f8000007f800000)
        #x0000000000000000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xc7, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!3 (concat #x00000000
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!8 (concat #x00000000
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!6)
                                           (mul_single #x5e5a2829 a!7))))))
(let ((a!4 (concat a!3
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!9 (concat a!8
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!6)
                                           (mul_single #x5e5a2829 a!7))))))
(let ((a!5 (concat a!4
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!10 (concat a!9
                    (add_single #x00000000
                                (add_single (mul_single #x7000603f a!6)
                                            (mul_single #x5e5a2829 a!7))))))
  (concat a!5 a!10)))))
    sandbox:   (concat (concat (concat #x00000000fffb1ac0 #xffc9aa97fffb1ac0)
                #x000000007f800000)
        #x7f8000007f800000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xc9, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!3 (concat (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))
                   #x00000000))
      (a!7 (concat (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6)))
                   #x00000000)))
(let ((a!4 (concat (concat a!3 #x00000000)
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!8 (concat (concat a!7 #x00000000)
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6))))))
  (concat a!4 a!8))))
    sandbox:   (concat (concat (concat #xffc9aa9700000000 #x00000000fffb1ac0)
                #x7f80000000000000)
        #x000000007f800000)

Execution time vdpps_ymm_ymm_m256_imm8_207: 46 s
Thread 208 done!: vdpps_ymm_ymm_m256_imm8_207
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xcd, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!3 (concat (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!7 (concat (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6)))
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6))))))
(let ((a!4 (concat (concat a!3 #x00000000)
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!8 (concat (concat a!7 #x00000000)
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!5)
                                           (mul_single #x5e5a2829 a!6))))))
  (concat a!4 a!8))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #x00000000fffb1ac0)
                #x7f8000007f800000)
        #x000000007f800000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases



Sandbox and validator do not agree for 'vdpps $0xcb, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!3 (concat (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))
                   #x00000000))
      (a!8 (concat (add_single #x00000000
                               (add_single (mul_single #x7000603f a!6)
                                           (mul_single #x5e5a2829 a!7)))
                   #x00000000)))
(let ((a!4 (concat a!3
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!9 (concat a!8
                   (add_single #x00000000
                               (add_single (mul_single #x7000603f a!6)
                                           (mul_single #x5e5a2829 a!7))))))
(let ((a!5 (concat a!4
                   (add_single #x00000000
                               (add_single (mul_single #xff89aa97 a!1)
                                           (mul_single #xffbb1ac0 a!2)))))
      (a!10 (concat a!9
                    (add_single #x00000000
                                (add_single (mul_single #x7000603f a!6)
                                            (mul_single #x5e5a2829 a!7))))))
  (concat a!5 a!10)))))
    sandbox:   (concat (concat (concat #xffc9aa9700000000 #xffc9aa97fffb1ac0)
                #x7f80000000000000)
        #x7f8000007f800000)

Execution time vdpps_ymm_ymm_m256_imm8_204: 47 s
Thread 205 done!: vdpps_ymm_ymm_m256_imm8_204
Execution time vdpps_ymm_ymm_m256_imm8_199: 47 s
Thread 200 done!: vdpps_ymm_ymm_m256_imm8_199
Execution time vdpps_ymm_ymm_m256_imm8_201: 47 s
Thread 202 done!: vdpps_ymm_ymm_m256_imm8_201
Execution time vdpps_ymm_ymm_m256_imm8_205: 47 s
Thread 206 done!: vdpps_ymm_ymm_m256_imm8_205
Execution time vdpps_ymm_ymm_m256_imm8_203: 47 s
Thread 204 done!: vdpps_ymm_ymm_m256_imm8_203
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xb6, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single #x00000000 (mul_single #x8a841deb a!3))))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single #x00000000 (mul_single #x1e3af142 a!7)))))
  (concat (concat (concat (concat #x00000000 a!4) a!4) #x00000000)
          (concat (concat (concat #x00000000 a!8) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #x00000000cdfc0055 #xcdfc005500000000)
                #x000000007fffffff)
        #xffffffff00000000)

SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xb9, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single #x00000000 (mul_single #x8a841deb a!3))))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single #x00000000 (mul_single #x1e3af142 a!7)))))
  (concat (concat (concat (concat a!4 #x00000000) #x00000000) a!4)
          (concat (concat (concat a!8 #x00000000) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #xcdfc005500000000 #x00000000cdfc0055)
                #xffffffff00000000)
        #x000000007fffffff)




Sandbox and validator do not agree for 'vdpps $0xb3, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single #x00000000 (mul_single #x8a841deb a!3))))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single #x00000000 (mul_single #x1e3af142 a!7)))))
  (concat (concat (concat #x0000000000000000 a!4) a!4)
          (concat (concat #x0000000000000000 a!8) a!8))))
    sandbox:   (concat (concat (concat #x0000000000000000 #xcdfc0055cdfc0055)
                #x0000000000000000)
        #xffffffff7fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_182: 51 s
Thread 183 done!: vdpps_ymm_ymm_m256_imm8_182
Execution time vdpps_ymm_ymm_m256_imm8_185: 52 s
Thread 186 done!: vdpps_ymm_ymm_m256_imm8_185
Execution time vdpps_ymm_ymm_m256_imm8_179: 52 s
Thread 180 done!: vdpps_ymm_ymm_m256_imm8_179
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xbd, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single #x00000000 (mul_single #x8a841deb a!3))))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single #x00000000 (mul_single #x1e3af142 a!7)))))
  (concat (concat (concat (concat a!4 a!4) #x00000000) a!4)
          (concat (concat (concat a!8 a!8) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #xcdfc0055cdfc0055 #x00000000cdfc0055)
                #xffffffff7fffffff)
        #x000000007fffffff)

SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xb7, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single #x00000000 (mul_single #x8a841deb a!3))))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single #x00000000 (mul_single #x1e3af142 a!7)))))
  (concat (concat (concat (concat #x00000000 a!4) a!4) a!4)
          (concat (concat (concat #x00000000 a!8) a!8) a!8))))
    sandbox:   (concat (concat (concat #x00000000cdfc0055 #xcdfc0055cdfc0055)
                #x000000007fffffff)
        #xffffffff7fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_189: 52 s
Thread 190 done!: vdpps_ymm_ymm_m256_imm8_189
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xbf, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single #x00000000 (mul_single #x8a841deb a!3))))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single #x00000000 (mul_single #x1e3af142 a!7)))))
  (concat (concat (concat (concat a!4 a!4) a!4) a!4)
          (concat (concat (concat a!8 a!8) a!8) a!8))))
    sandbox:   (concat (concat (concat #xcdfc0055cdfc0055 #xcdfc0055cdfc0055)
                #xffffffff7fffffff)
        #xffffffff7fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_183: 53 s
Thread 184 done!: vdpps_ymm_ymm_m256_imm8_183
SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xbb, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single #x00000000 (mul_single #x8a841deb a!3))))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single #x00000000 (mul_single #x1e3af142 a!7)))))
  (concat (concat (concat (concat a!4 #x00000000) a!4) a!4)
          (concat (concat (concat a!8 #x00000000) a!8) a!8))))
    sandbox:   (concat (concat (concat #xcdfc005500000000 #xcdfc0055cdfc0055)
                #xffffffff00000000)
        #xffffffff7fffffff)

SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xbe, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single #x00000000 (mul_single #x8a841deb a!3))))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single #x00000000 (mul_single #x1e3af142 a!7)))))
  (concat (concat (concat (concat a!4 a!4) a!4) #x00000000)
          (concat (concat (concat a!8 a!8) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #xcdfc0055cdfc0055 #xcdfc005500000000)
                #xffffffff7fffffff)
        #xffffffff00000000)

SIGNAL 0 [normal exit]

%rax     a6 da 8a 0a 3e 53 35 a6
%rcx     ac 82 7f bc 94 53 e3 35
%rdx     2e e5 e0 2e e8 ca f8 62
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     c2 61 74 60 b5 f2 e0 f9
%rsi     0b c9 90 0c 9b ab 2c 6c
%rdi     52 83 54 76 86 09 ce 2f
%r8      ce 7a c7 d5 1c 39 bf f3
%r9      4d ca e5 e0 07 83 6c a7
%r10     34 29 b1 05 1d e8 75 11
%r11     7a 48 3d 86 f6 ba 32 80
%r12     f0 a1 11 49 d2 96 82 fd
%r13     1a ab c2 09 5e f8 24 7d
%r14     c4 70 61 44 3c 38 93 37
%r15     64 93 03 67 19 ba 2a 93

%ymm0    a0 51 f9 1b ed 66 18 85 4c 5d 5b b9 99 eb 58 54 af 20 c1 78 06 16 b6 fc b8 be d8 3b ce 37 2a 85
%ymm1    65 0d 16 41 6d c4 48 52 d7 e2 3a 52 95 dc f6 dc 43 0b 83 ef 5b 63 2d e3 00 00 00 00 00 00 00 00
%ymm2    8a 84 1d eb 1f 10 d5 de a3 11 96 51 39 b4 17 e7 1e 3a f1 42 f7 e6 bf 08 7f ff ff ff ff ff ff ff
%ymm3    2c 1e d1 94 94 4c 77 a8 2d 67 d3 4f c4 c2 b9 73 88 05 5c a1 e6 21 b0 a4 00 00 00 00 00 00 00 00
%ymm4    87 b8 fe 6e 8c e0 9d f8 4c 50 81 a4 23 1a d1 d4 56 0f 1b e3 86 16 87 e5 30 66 35 8c 3b 6b a7 19
%ymm5    1a 6e c3 75 e7 0b 76 79 7e 96 dc 86 49 8b 04 a5 68 ea d4 93 93 c5 78 b0 3f 61 28 59 31 c2 24 a5
%ymm6    45 a5 56 5e 8a e8 9a 15 01 8f 9f 88 11 09 ac 8b bf 21 86 1a b9 9c 45 25 09 80 ad 59 41 4c 30 e7
%ymm7    9a 75 12 13 30 6d bd d2 e3 d4 37 cd d3 a8 2e 4a 97 25 9e 0c 66 7d 85 4c c4 e9 06 9e e0 86 f1 87
%ymm8    3c de e3 39 43 6d 26 30 3d b9 73 6b d6 9e 34 08 cb 8c da 81 f5 b4 e3 e9 4e 66 63 02 a2 7a fc 03
%ymm9    32 f2 d7 53 b5 f9 70 7c b5 03 56 85 c5 9d 12 5a c7 74 26 be a8 9a e4 27 a5 30 44 bc e1 de 58 df
%ymm10   a6 69 c5 76 37 d3 9f e3 1d a6 73 a1 f1 70 4b 6b aa ae 59 50 e7 e5 2a 28 3c 90 44 15 eb 14 d0 2f
%ymm11   b6 e4 ae 20 3e 45 5b c7 0e 88 28 2a 6b 81 b7 ca 90 47 7f 25 9d d1 cc 4c ea e7 22 c1 aa 91 7d 95
%ymm12   d8 17 5c ac 61 78 fd 40 3a b8 e5 72 aa 5c 4a 80 f1 c9 c8 27 38 81 a8 13 e4 d7 47 97 ed 60 75 2c
%ymm13   70 fb 58 9f 23 41 43 77 e0 cb 79 a0 91 c1 bb 1e 16 5e d4 96 6d 0b ce 45 d2 4d 9d bf 69 c5 77 d1
%ymm14   14 0d 71 44 9d 76 eb fe 53 aa bb dc c9 f0 62 29 5f a1 6e 40 8b 10 6c f4 a3 61 26 5d 8f d9 c0 d0
%ymm15   d8 91 64 a7 7d 56 36 39 b9 c0 4d bb 6d a3 00 91 da 10 2e b0 b1 8d 42 71 02 32 04 0d 8f a3 e7 31

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   96 08 94 a9 b0 39 bf a4 
00000006 fffffff0   v v v v v v v v   62 55 7e 5b d3 b3 1a fa 
00000006 ffffffe8   v v v v v v v v   53 cc e2 d4 d3 f1 85 23 
00000006 ffffffe0   v v v v v v v v   ef 5c 2c fb 85 96 ee ec 
00000006 ffffffd8   v v v v v v v v   58 5b ea 0c d7 69 26 07 
00000006 ffffffd0   v v v v v v v v   82 ca 41 d9 60 4e 17 7f 
00000006 ffffffc8   v v v v v v v v   f8 f1 4f b0 02 29 f7 f4 
00000006 ffffffc0   v v v v v v v v   d7 96 0d 99 3e 93 02 4c 
00000006 ffffffb8   v v v v v v v v   84 81 e6 d0 e7 5b c5 a8 
00000006 ffffffb0   v v v v v v v v   6a f3 c2 e1 55 26 30 48 
00000006 ffffffa8   v v v v v v v v   ef 26 b8 0e 52 61 e6 3e 
00000006 ffffffa0   v v v v v v v v   58 7a 97 f2 0f 81 66 b4 
00000006 ffffff98   v v v v v v v v   99 8a 0a 3f f1 d2 e6 89 
00000006 ffffff90   v v v v v v v v   9e 9b b1 0d 37 0a 90 e1 
00000006 ffffff88   v v v v v v v v   d4 57 27 14 09 6c a7 66 
00000006 ffffff80   v v v v v v v v   6b 16 8c 5b e7 db a9 5a 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xbc, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_119054 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_119054 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_119054 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_119054 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_119054
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_119054
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x39b417e7 a!1)
                                   (mul_single #xa3119651 a!2))
                       (add_single #x00000000 (mul_single #x8a841deb a!3))))
      (a!8 (add_single (add_single (mul_single #xffffffff a!5)
                                   (mul_single #x7fffffff a!6))
                       (add_single #x00000000 (mul_single #x1e3af142 a!7)))))
  (concat (concat (concat (concat a!4 a!4) #x00000000) #x00000000)
          (concat (concat (concat a!8 a!8) #x00000000) #x00000000))))
    sandbox:   (concat (concat (concat #xcdfc0055cdfc0055 #x0000000000000000)
                #xffffffff7fffffff)
        #x0000000000000000)

Execution time vdpps_ymm_ymm_m256_imm8_191: 53 s
Thread 192 done!: vdpps_ymm_ymm_m256_imm8_191
Execution time vdpps_ymm_ymm_m256_imm8_187: 53 s
Thread 188 done!: vdpps_ymm_ymm_m256_imm8_187
Execution time vdpps_ymm_ymm_m256_imm8_190: 53 s
Thread 191 done!: vdpps_ymm_ymm_m256_imm8_190
Execution time vdpps_ymm_ymm_m256_imm8_188: 53 s
Thread 189 done!: vdpps_ymm_ymm_m256_imm8_188
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 3000cases
SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xb5, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x5400887f a!1)
                                   (mul_single #xe9535992 a!2))
                       (add_single #x00000000 (mul_single #x7539bf64 a!3))))
      (a!8 (add_single (add_single (mul_single #x7fffffff a!5)
                                   (mul_single #x00000000 a!6))
                       (add_single #x00000000 (mul_single #x7fd4640d a!7)))))
  (concat (concat (concat (concat #x00000000 a!4) #x00000000) a!4)
          (concat (concat (concat #x00000000 a!8) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #x00000000f4fbb55e #x00000000f4fbb55e)
                #x000000007fd4640d)
        #x000000007fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_181: 75 s
Thread 182 done!: vdpps_ymm_ymm_m256_imm8_181
SIGNAL 0 [normal exit]

%rax     82 9a 01 ec b7 e5 bf c6
%rcx     d4 5b 80 e1 bd 03 b5 8c
%rdx     0e ab f5 4b 79 5f 34 91
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     a6 d3 23 15 fe c7 94 1d
%rsi     ff b0 ca 27 a2 1f 32 57
%rdi     58 d7 04 36 c1 6c d4 71
%r8      28 08 f8 0b fe 67 a4 80
%r9      4a 47 fa f3 a1 27 d0 8c
%r10     a2 53 9c 31 54 ec 67 2c
%r11     44 ff 3a c4 a6 63 c0 70
%r12     ea 12 4b 5e ea 43 66 de
%r13     60 58 d3 33 0e 8c 39 1b
%r14     50 0e 07 e0 6c b4 44 3a
%r15     8b d0 f6 ac 8b f7 72 c7

%ymm0    9f 62 33 43 d7 63 4d 2b d7 56 b9 10 06 aa 08 25 3e 54 e1 04 f4 88 30 c1 7a a4 87 5e ba 75 13 5c
%ymm1    35 3a 39 ef 9b d7 bc 57 ff 59 0a d4 81 b3 1b 71 ad 71 69 88 32 14 a7 2e 00 00 00 00 00 00 80 00
%ymm2    75 39 bf 64 04 84 2a 15 e9 53 59 92 54 00 88 7f 7f d4 64 0d 27 f3 a4 9f 00 00 00 00 7f ff ff ff
%ymm3    3f 27 53 ec b2 1a 2d 4e 15 a9 23 00 bf d0 a6 2d 7c a6 a5 fc 27 d1 98 19 ff ff ff ff ff ff ff ff
%ymm4    f7 81 f5 91 42 ce 3d 55 1c 23 28 ce 0e 7f ab 0e bf db 67 92 5f c1 ec 62 9a 1b ca 81 71 24 0c 66
%ymm5    68 4b 82 66 54 01 71 c3 bf a2 85 69 86 62 41 b7 54 c2 0c 46 03 31 de 71 d2 1d 84 70 82 69 a6 01
%ymm6    85 c8 ca 5d 60 7e da fa 2a d9 89 67 1a e6 e2 b1 60 80 6f a9 2c ad 9c e6 aa 6b 07 39 98 ea b4 28
%ymm7    87 e0 c1 09 5a f9 3f fd 98 c0 23 9e 96 49 15 2e 2f 2f 4c 7e ce cc 0e 25 a0 61 89 ba b7 1e b3 7e
%ymm8    25 3d 00 b1 b5 20 ef ac c6 f6 6d c8 5e ad a5 bf 17 5c aa e8 2d 7b 9c af ac cf a0 87 2f 3f fe 74
%ymm9    a8 31 79 a9 0b 3c a9 5a 86 88 6b da c2 74 6c fa 16 bf 54 57 a8 f8 ad c0 cb 32 24 1c 85 54 7c fe
%ymm10   48 69 f0 53 c1 bf da 18 b4 9e 6f 59 18 e6 ee 3e 24 7a d1 2a 63 12 d5 0c 69 dd 5f a9 11 2d 85 f5
%ymm11   02 d7 f3 8c 8f 89 9c 3b c8 dc 61 b0 28 c2 41 cf aa 5a e0 6c 36 66 9b 0c 03 89 37 f6 1f 5a 97 76
%ymm12   c5 c9 22 3b c7 4b 48 3a bc bf 9e 80 f7 c2 1f 47 99 5d 06 ca b2 ab ea 46 75 83 ab 68 80 22 31 8a
%ymm13   09 29 43 b5 64 79 93 28 b2 48 e0 78 8c 21 d9 0b 2a 17 ec e3 7e 8f dd b3 dc 31 c9 96 bc 46 eb 54
%ymm14   71 4e 98 42 44 6f ff 8f 0b 86 fc e2 d3 b4 02 5b 28 e1 82 1c b7 6a 30 d4 ec a1 f7 39 c5 c6 6f 2e
%ymm15   78 82 1e 70 11 d0 d8 ce 8b 69 cf fc 5e 49 00 7b 75 4c 79 1a 24 97 98 08 e0 2d d7 0b 41 36 14 08

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   30 50 1c 4c d2 99 80 a5 
00000006 fffffff0   v v v v v v v v   85 0b 78 7b e0 7a aa 11 
00000006 ffffffe8   v v v v v v v v   c0 d2 ed 17 6c f5 c8 72 
00000006 ffffffe0   v v v v v v v v   c8 89 ee d5 ea ba 16 e3 
00000006 ffffffd8   v v v v v v v v   7e 83 cc 2d 13 75 2c 0a 
00000006 ffffffd0   v v v v v v v v   2b fe d1 cf ba d7 24 a8 
00000006 ffffffc8   v v v v v v v v   66 f8 4f fa 2d 3f 84 f3 
00000006 ffffffc0   v v v v v v v v   9f 34 be 06 3b 93 17 51 
00000006 ffffffb8   v v v v v v v v   70 56 00 09 4a 2e 39 5c 
00000006 ffffffb0   v v v v v v v v   43 f9 ab 12 71 2c 59 6b 
00000006 ffffffa8   v v v v v v v v   cb 10 76 3a a0 50 34 98 
00000006 ffffffa0   v v v v v v v v   f8 2b ef ea 23 c1 51 67 
00000006 ffffff98   v v v v v v v v   0c d2 cf ee eb 40 b1 31 
00000006 ffffff90   v v v v v v v v   88 7f b9 06 61 48 f5 91 
00000006 ffffff88   v v v v v v v v   70 26 05 07 57 09 a9 0e 
00000006 ffffff80   v v v v v v v v   08 2e 99 bc b5 7f 97 1d 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xba, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_370346 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_370346 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffe4)))))
      (a!7 (concat (select TMP_ARR_64_8_370346 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_370346 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_370346
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_370346
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x5400887f a!1)
                                   (mul_single #xe9535992 a!2))
                       (add_single #x00000000 (mul_single #x7539bf64 a!3))))
      (a!8 (add_single (add_single (mul_single #x7fffffff a!5)
                                   (mul_single #x00000000 a!6))
                       (add_single #x00000000 (mul_single #x7fd4640d a!7)))))
  (concat (concat (concat (concat a!4 #x00000000) a!4) #x00000000)
          (concat (concat (concat a!8 #x00000000) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #xf4fbb55e00000000 #xf4fbb55e00000000)
                #x7fd4640d00000000)
        #x7fffffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_186: 76 s
Thread 187 done!: vdpps_ymm_ymm_m256_imm8_186
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 4000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 5000cases
Completed 3000cases
Completed 3000cases
Completed 5000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 6000cases
SIGNAL 0 [normal exit]

%rax     31 76 55 51 c4 bc 5b 12
%rcx     27 70 95 35 00 05 d0 de
%rdx     48 61 ec 7b bc 4b bb 7f
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     f8 c8 10 79 a1 a0 e4 6b
%rsi     04 8f 16 ff 47 b5 13 cc
%rdi     05 e1 56 a8 81 a6 a7 32
%r8      0c 23 91 a1 83 b2 06 c2
%r9      a0 e7 76 d4 ee ad c3 75
%r10     e4 8d 76 b2 89 e7 9c 89
%r11     4b cb 47 89 c6 65 33 1d
%r12     83 fa f2 0e ee ce 7d 4d
%r13     a7 29 59 1e 89 72 a8 b5
%r14     a4 8b bd 86 a7 30 10 f5
%r15     85 c4 35 38 79 6a f1 f0

%ymm0    7a e5 f7 c7 60 33 92 28 b9 28 37 c9 84 ab 0b fe 04 db ed 0f 33 c4 b6 15 3a 44 6d 85 c1 73 93 b2
%ymm1    2c 7a 99 a2 00 b4 aa 39 54 77 a6 2c be 7e f5 f5 f9 4a e9 fb 45 0e 0e 36 3f f0 00 00 00 00 00 00
%ymm2    b0 2d 61 bf 01 e7 25 5f e6 71 b4 ad 1c 3d 07 f0 7f 89 fa 8a 8f b0 a0 94 7f ef ff ff ff ff ff ff
%ymm3    96 74 22 7f c4 f4 1e 05 f3 37 df 94 50 6e e0 a3 52 a3 9c 62 24 13 67 9a 3f f0 00 00 00 00 00 00
%ymm4    40 0c 40 b5 75 cc 93 f6 08 9e d8 03 ab a1 23 16 50 b5 36 ad 63 93 11 01 6f fe 99 d5 7b e2 dc 8b
%ymm5    f8 14 ba dc d3 ae 9b 1e 38 cf 8b 42 c7 ed 6a c4 42 c9 a1 2b 79 ec f5 cb 89 61 ba 88 f2 bb ee 1c
%ymm6    8d 12 2d e5 19 19 2b 3d 45 7d a2 27 44 d2 9b 02 0b ae 97 46 6c ce a5 41 55 b9 4c 89 30 ea cf a8
%ymm7    ef a1 4c f2 14 3a c5 2f 20 ac 04 e3 67 87 41 40 42 6e a4 40 63 f6 a9 1d 89 db 77 48 86 be fc fc
%ymm8    d9 af eb 90 c0 4a 44 ce 36 0a 08 07 ea 5c 03 07 f5 7c c6 b5 39 57 10 f9 f4 1a 50 d7 91 75 5f 48
%ymm9    e3 dd e1 98 04 32 ad 73 71 63 2f a3 2d 24 9b 26 3a 3f 23 33 4a a7 6d 95 6d 16 84 74 22 6a 24 4b
%ymm10   b3 91 9f ad ad c2 cb 15 be 99 68 4a 28 05 1b 84 d8 f7 e9 b2 bc aa 8f 89 60 e8 1b cb 7a 05 47 06
%ymm11   59 17 ef 73 64 5e d4 b7 b0 12 ec 9b 54 52 33 0a 2a 2e ee a6 56 f7 bc a4 3b 12 15 b2 b1 2d 96 e6
%ymm12   d6 6b 1c 50 11 04 61 9e a0 03 c9 e8 53 b7 fc b7 62 aa 84 58 7f 55 6a d9 ff 72 1d 5a 37 0b 45 85
%ymm13   9c 2a 40 3b 54 d5 1f 03 c3 1b a2 25 7b 9e 5c 92 4b a5 96 94 42 ec 10 ea 6c ba 80 93 bb 0d 76 61
%ymm14   99 57 c4 e3 bb 9a a3 7f 46 ce 60 42 0a 45 a0 e5 ca 02 89 37 b6 e4 a1 22 a1 b5 12 b7 49 58 37 b6
%ymm15   1f 9e 71 24 05 1a 60 22 5f c6 7f df 80 b1 7f 3d a6 3a 9d c1 70 9b 38 39 e4 54 97 c2 b3 e2 af fb

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   31 86 df 71 77 50 ed 00 
00000006 fffffff0   v v v v v v v v   c2 30 a2 92 2b 3d 6a 95 
00000006 ffffffe8   v v v v v v v v   d8 0f 07 4c c4 3c 93 6b 
00000006 ffffffe0   v v v v v v v v   62 ca e9 be 6d 48 f6 bf 
00000006 ffffffd8   v v v v v v v v   0f 8f 84 77 8d bc 5e 30 
00000006 ffffffd0   v v v v v v v v   05 65 27 96 65 5b 8e 8b 
00000006 ffffffc8   v v v v v v v v   4b ca b9 59 da c9 81 a4 
00000006 ffffffc0   v v v v v v v v   5d a1 c8 ad 39 67 3b 98 
00000006 ffffffb8   v v v v v v v v   01 c8 19 5d b7 f9 09 6e 
00000006 ffffffb0   v v v v v v v v   00 cc 08 d9 10 c3 d2 f1 
00000006 ffffffa8   v v v v v v v v   f0 ef d8 36 6c e0 dc af 
00000006 ffffffa0   v v v v v v v v   68 61 72 a0 65 73 7f a4 
00000006 ffffff98   v v v v v v v v   10 20 54 49 f9 3c 66 26 
00000006 ffffff90   v v v v v v v v   bc 45 07 1e d3 e3 19 b9 
00000006 ffffff88   v v v v v v v v   83 f7 5a bd 78 7b 3d c7 
00000006 ffffff80   v v v v v v v v   fb ff 21 c1 62 5f 50 c7 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xaf, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_817202 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_817202 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006fffffffc)))))
      (a!4 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffe4)))))
      (a!5 (concat (select TMP_ARR_64_8_817202 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_817202 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_817202
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_817202
                                           #x00000006ffffffec))))))
(let ((a!3 (add_single (add_single #x00000000 (mul_single #xe671b4ad a!1))
                       (add_single #x00000000 (mul_single #xb02d61bf a!2))))
      (a!6 (add_single (add_single #x00000000 (mul_single #x7fefffff a!4))
                       (add_single #x00000000 (mul_single #x7f89fa8a a!5)))))
  (concat (concat (concat (concat a!3 a!3) a!3) a!3)
          (concat (concat (concat a!6 a!6) a!6) a!6))))
    sandbox:   (concat (concat (concat #x6926c5b56926c5b5 #x6926c5b56926c5b5)
                #x7fc9fa8a7fc9fa8a)
        #x7fefffff7fefffff)

Execution time vdpps_ymm_ymm_m256_imm8_175: 110 s
Thread 176 done!: vdpps_ymm_ymm_m256_imm8_175
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Execution time vdpps_ymm_ymm_m256_imm8_208: 119 s
Thread 209 done!: vdpps_ymm_ymm_m256_imm8_208
Completed 6000cases
Completed 6000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Execution time vdpps_ymm_ymm_m256_imm8_192: 129 s
Thread 193 done!: vdpps_ymm_ymm_m256_imm8_192
Execution time vdpps_ymm_ymm_m256_imm8_176: 129 s
Thread 177 done!: vdpps_ymm_ymm_m256_imm8_176
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_194: 157 s
Thread 195 done!: vdpps_ymm_ymm_m256_imm8_194
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_193: 157 s
Thread 194 done!: vdpps_ymm_ymm_m256_imm8_193
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_196: 160 s
Thread 197 done!: vdpps_ymm_ymm_m256_imm8_196
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_202: 161 s
Thread 203 done!: vdpps_ymm_ymm_m256_imm8_202
Execution time vdpps_ymm_ymm_m256_imm8_200: 161 s
Thread 201 done!: vdpps_ymm_ymm_m256_imm8_200
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_197: 163 s
Thread 198 done!: vdpps_ymm_ymm_m256_imm8_197
Execution time vdpps_ymm_ymm_m256_imm8_209: 165 s
Thread 210 done!: vdpps_ymm_ymm_m256_imm8_209
Execution time vdpps_ymm_ymm_m256_imm8_177: 169 s
Thread 178 done!: vdpps_ymm_ymm_m256_imm8_177
Execution time vdpps_ymm_ymm_m256_imm8_178: 171 s
Thread 179 done!: vdpps_ymm_ymm_m256_imm8_178
Execution time vdpps_ymm_ymm_m256_imm8_184: 172 s
Thread 185 done!: vdpps_ymm_ymm_m256_imm8_184
Execution time vdpps_ymm_ymm_m256_imm8_180: 176 s
Thread 181 done!: vdpps_ymm_ymm_m256_imm8_180
[4m[1m[34mFiring 35.[0m
Thread 212 start: vdpps_ymm_ymm_m256_imm8_211
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_211/vdpps_ymm_ymm_m256_imm8_211.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 213 start: vdpps_ymm_ymm_m256_imm8_212
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_212/vdpps_ymm_ymm_m256_imm8_212.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 211 start: vdpps_ymm_ymm_m256_imm8_210
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_210/vdpps_ymm_ymm_m256_imm8_210.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 214 start: vdpps_ymm_ymm_m256_imm8_213
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_213/vdpps_ymm_ymm_m256_imm8_213.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 215 start: vdpps_ymm_ymm_m256_imm8_214
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_214/vdpps_ymm_ymm_m256_imm8_214.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 216 start: vdpps_ymm_ymm_m256_imm8_215
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_215/vdpps_ymm_ymm_m256_imm8_215.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 218 start: vdpps_ymm_ymm_m256_imm8_217
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_217/vdpps_ymm_ymm_m256_imm8_217.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 217 start: vdpps_ymm_ymm_m256_imm8_216
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_216/vdpps_ymm_ymm_m256_imm8_216.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 219 start: vdpps_ymm_ymm_m256_imm8_218
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_218/vdpps_ymm_ymm_m256_imm8_218.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 220 start: vdpps_ymm_ymm_m256_imm8_219
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_219/vdpps_ymm_ymm_m256_imm8_219.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 221 start: vdpps_ymm_ymm_m256_imm8_220
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_220/vdpps_ymm_ymm_m256_imm8_220.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 222 start: vdpps_ymm_ymm_m256_imm8_221
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_221/vdpps_ymm_ymm_m256_imm8_221.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 223 start: vdpps_ymm_ymm_m256_imm8_222
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_222/vdpps_ymm_ymm_m256_imm8_222.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 224 start: vdpps_ymm_ymm_m256_imm8_223
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_223/vdpps_ymm_ymm_m256_imm8_223.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 225 start: vdpps_ymm_ymm_m256_imm8_224
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_224/vdpps_ymm_ymm_m256_imm8_224.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 227 start: vdpps_ymm_ymm_m256_imm8_226
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_226/vdpps_ymm_ymm_m256_imm8_226.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 226 start: vdpps_ymm_ymm_m256_imm8_225
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_225/vdpps_ymm_ymm_m256_imm8_225.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 228 start: vdpps_ymm_ymm_m256_imm8_227
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_227/vdpps_ymm_ymm_m256_imm8_227.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 229 start: vdpps_ymm_ymm_m256_imm8_228
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_228/vdpps_ymm_ymm_m256_imm8_228.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 230 start: vdpps_ymm_ymm_m256_imm8_229
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_229/vdpps_ymm_ymm_m256_imm8_229.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 231 start: vdpps_ymm_ymm_m256_imm8_230
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_230/vdpps_ymm_ymm_m256_imm8_230.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 232 start: vdpps_ymm_ymm_m256_imm8_231
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_231/vdpps_ymm_ymm_m256_imm8_231.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 233 start: vdpps_ymm_ymm_m256_imm8_232
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_232/vdpps_ymm_ymm_m256_imm8_232.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 234 start: vdpps_ymm_ymm_m256_imm8_233
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_233/vdpps_ymm_ymm_m256_imm8_233.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 235 start: vdpps_ymm_ymm_m256_imm8_234
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_234/vdpps_ymm_ymm_m256_imm8_234.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 236 start: vdpps_ymm_ymm_m256_imm8_235
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_235/vdpps_ymm_ymm_m256_imm8_235.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 237 start: vdpps_ymm_ymm_m256_imm8_236
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_236/vdpps_ymm_ymm_m256_imm8_236.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 238 start: vdpps_ymm_ymm_m256_imm8_237
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_237/vdpps_ymm_ymm_m256_imm8_237.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 240 start: vdpps_ymm_ymm_m256_imm8_239
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_239/vdpps_ymm_ymm_m256_imm8_239.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 239 start: vdpps_ymm_ymm_m256_imm8_238
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_238/vdpps_ymm_ymm_m256_imm8_238.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 244 start: vdpps_ymm_ymm_m256_imm8_243
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_243/vdpps_ymm_ymm_m256_imm8_243.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 243 start: vdpps_ymm_ymm_m256_imm8_242
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_242/vdpps_ymm_ymm_m256_imm8_242.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 241 start: vdpps_ymm_ymm_m256_imm8_240
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_240/vdpps_ymm_ymm_m256_imm8_240.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 242 start: vdpps_ymm_ymm_m256_imm8_241
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_241/vdpps_ymm_ymm_m256_imm8_241.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 245 start: vdpps_ymm_ymm_m256_imm8_244
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_244/vdpps_ymm_ymm_m256_imm8_244.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xdb, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #xd5277b40 a!1) #x00000000)
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single (mul_single #x9e71aa3f a!5) #x00000000)
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 #x00000000) a!4) a!4)
          (concat (concat (concat a!8 #x00000000) a!8) a!8))))
    sandbox:   (concat (concat (concat #xffc9aa9700000000 #xffc9aa97fffb1ac0)
                #x7f80000000000000)
        #x7f8000007f800000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Execution time vdpps_ymm_ymm_m256_imm8_219: 45 s
Thread 220 done!: vdpps_ymm_ymm_m256_imm8_219
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xdd, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #xd5277b40 a!1) #x00000000)
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single (mul_single #x9e71aa3f a!5) #x00000000)
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 a!4) #x00000000) a!4)
          (concat (concat (concat a!8 a!8) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #x00000000fffb1ac0)
                #x7f8000007f800000)
        #x000000007f800000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xde, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #xd5277b40 a!1) #x00000000)
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single (mul_single #x9e71aa3f a!5) #x00000000)
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 a!4) a!4) #x00000000)
          (concat (concat (concat a!8 a!8) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #xffc9aa9700000000)
                #x7f8000007f800000)
        #x7f80000000000000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Execution time vdpps_ymm_ymm_m256_imm8_221: 47 s
Thread 222 done!: vdpps_ymm_ymm_m256_imm8_221
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Execution time vdpps_ymm_ymm_m256_imm8_222: 47 s
Thread 223 done!: vdpps_ymm_ymm_m256_imm8_222
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xe9, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #x2f04e46c a!1))
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x9769a028 a!5))
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 #x00000000) #x00000000) a!4)
          (concat (concat (concat a!8 #x00000000) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #xffc9aa9700000000 #x00000000fffb1ac0)
                #x7f80000000000000)
        #x000000007f800000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xdf, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #xd5277b40 a!1) #x00000000)
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single (mul_single #x9e71aa3f a!5) #x00000000)
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 a!4) a!4) a!4)
          (concat (concat (concat a!8 a!8) a!8) a!8))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #xffc9aa97fffb1ac0)
                #x7f8000007f800000)
        #x7f8000007f800000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xd3, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #xd5277b40 a!1) #x00000000)
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single (mul_single #x9e71aa3f a!5) #x00000000)
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat #x0000000000000000 a!4) a!4)
          (concat (concat #x0000000000000000 a!8) a!8))))
    sandbox:   (concat (concat (concat #x0000000000000000 #xffc9aa97fffb1ac0)
                #x0000000000000000)
        #x7f8000007f800000)

Execution time vdpps_ymm_ymm_m256_imm8_233: 48 s
Thread 234 done!: vdpps_ymm_ymm_m256_imm8_233
Execution time vdpps_ymm_ymm_m256_imm8_223: 49 s
Thread 224 done!: vdpps_ymm_ymm_m256_imm8_223
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

SIGNAL 0 [normal exit]
%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79


%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)
%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xd6, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #xd5277b40 a!1) #x00000000)
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single (mul_single #x9e71aa3f a!5) #x00000000)
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat #x00000000 a!4) a!4) #x00000000)
          (concat (concat (concat #x00000000 a!8) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #x00000000fffb1ac0 #xffc9aa9700000000)
                #x000000007f800000)
        #x7f80000000000000)




Sandbox and validator do not agree for 'vdpps $0xdc, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #xd5277b40 a!1) #x00000000)
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single (mul_single #x9e71aa3f a!5) #x00000000)
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 a!4) #x00000000) #x00000000)
          (concat (concat (concat a!8 a!8) #x00000000) #x00000000))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #x0000000000000000)
                #x7f8000007f800000)
        #x0000000000000000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xe3, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #x2f04e46c a!1))
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x9769a028 a!5))
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat #x0000000000000000 a!4) a!4)
          (concat (concat #x0000000000000000 a!8) a!8))))
    sandbox:   (concat (concat (concat #x0000000000000000 #xffc9aa97fffb1ac0)
                #x0000000000000000)
        #x7f8000007f800000)

Execution time vdpps_ymm_ymm_m256_imm8_211: 49 s
Thread 212 done!: vdpps_ymm_ymm_m256_imm8_211
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xed, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #x2f04e46c a!1))
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x9769a028 a!5))
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 a!4) #x00000000) a!4)
          (concat (concat (concat a!8 a!8) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #x00000000fffb1ac0)
                #x7f8000007f800000)
        #x000000007f800000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)
Execution time vdpps_ymm_ymm_m256_imm8_214: 50 s
Thread 215 done!: vdpps_ymm_ymm_m256_imm8_214



Sandbox and validator do not agree for 'vdpps $0xee, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #x2f04e46c a!1))
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x9769a028 a!5))
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 a!4) a!4) #x00000000)
          (concat (concat (concat a!8 a!8) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #xffc9aa9700000000)
                #x7f8000007f800000)
        #x7f80000000000000)

Execution time vdpps_ymm_ymm_m256_imm8_220: 50 s
Thread 221 done!: vdpps_ymm_ymm_m256_imm8_220
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xd9, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #xd5277b40 a!1) #x00000000)
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single (mul_single #x9e71aa3f a!5) #x00000000)
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 #x00000000) #x00000000) a!4)
          (concat (concat (concat a!8 #x00000000) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #xffc9aa9700000000 #x00000000fffb1ac0)
                #x7f80000000000000)
        #x000000007f800000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xd7, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #xd5277b40 a!1) #x00000000)
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single (mul_single #x9e71aa3f a!5) #x00000000)
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat #x00000000 a!4) a!4) a!4)
          (concat (concat (concat #x00000000 a!8) a!8) a!8))))
    sandbox:   (concat (concat (concat #x00000000fffb1ac0 #xffc9aa97fffb1ac0)
                #x000000007f800000)
        #x7f8000007f800000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

Execution time vdpps_ymm_ymm_m256_imm8_227: 50 s
Thread 228 done!: vdpps_ymm_ymm_m256_imm8_227
%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xeb, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #x2f04e46c a!1))
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x9769a028 a!5))
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 #x00000000) a!4) a!4)
          (concat (concat (concat a!8 #x00000000) a!8) a!8))))
    sandbox:   (concat (concat (concat #xffc9aa9700000000 #xffc9aa97fffb1ac0)
                #x7f80000000000000)
        #x7f8000007f800000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xe7, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #x2f04e46c a!1))
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x9769a028 a!5))
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat #x00000000 a!4) a!4) a!4)
          (concat (concat (concat #x00000000 a!8) a!8) a!8))))
    sandbox:   (concat (concat (concat #x00000000fffb1ac0 #xffc9aa97fffb1ac0)
                #x000000007f800000)
        #x7f8000007f800000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xec, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #x2f04e46c a!1))
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x9769a028 a!5))
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 a!4) #x00000000) #x00000000)
          (concat (concat (concat a!8 a!8) #x00000000) #x00000000))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #x0000000000000000)
                #x7f8000007f800000)
        #x0000000000000000)

SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xe6, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #x2f04e46c a!1))
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x9769a028 a!5))
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat #x00000000 a!4) a!4) #x00000000)
          (concat (concat (concat #x00000000 a!8) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #x00000000fffb1ac0 #xffc9aa9700000000)
                #x000000007f800000)
        #x7f80000000000000)

Execution time vdpps_ymm_ymm_m256_imm8_237: 49 s
Thread 238 done!: vdpps_ymm_ymm_m256_imm8_237
Execution time vdpps_ymm_ymm_m256_imm8_217: 50 s
Thread 218 done!: vdpps_ymm_ymm_m256_imm8_217
Execution time vdpps_ymm_ymm_m256_imm8_235: 49 s
Thread 236 done!: vdpps_ymm_ymm_m256_imm8_235
Execution time vdpps_ymm_ymm_m256_imm8_215: 50 s
Thread 216 done!: vdpps_ymm_ymm_m256_imm8_215
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xef, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #x2f04e46c a!1))
                       (add_single (mul_single #xff89aa97 a!2)
                                   (mul_single #xffbb1ac0 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x9769a028 a!5))
                       (add_single (mul_single #x7000603f a!6)
                                   (mul_single #x5e5a2829 a!7)))))
  (concat (concat (concat (concat a!4 a!4) a!4) a!4)
          (concat (concat (concat a!8 a!8) a!8) a!8))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #xffc9aa97fffb1ac0)
                #x7f8000007f800000)
        #x7f8000007f800000)

Execution time vdpps_ymm_ymm_m256_imm8_230: 50 s
Thread 231 done!: vdpps_ymm_ymm_m256_imm8_230
Execution time vdpps_ymm_ymm_m256_imm8_231: 51 s
Thread 232 done!: vdpps_ymm_ymm_m256_imm8_231
Execution time vdpps_ymm_ymm_m256_imm8_236: 50 s
Thread 237 done!: vdpps_ymm_ymm_m256_imm8_236
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xf3, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xd5277b40 a!1)
                                   (mul_single #x2f04e46c a!2))
                       (add_single (mul_single #xff89aa97 a!3)
                                   (mul_single #xffbb1ac0 a!4))))
      (a!10 (add_single (add_single (mul_single #x9e71aa3f a!6)
                                    (mul_single #x9769a028 a!7))
                        (add_single (mul_single #x7000603f a!8)
                                    (mul_single #x5e5a2829 a!9)))))
  (concat (concat (concat #x0000000000000000 a!5) a!5)
          (concat (concat #x0000000000000000 a!10) a!10))))
    sandbox:   (concat (concat (concat #x0000000000000000 #xffc9aa97fffb1ac0)
                #x0000000000000000)
        #x7f8000007f800000)

Execution time vdpps_ymm_ymm_m256_imm8_238: 50 s
Thread 239 done!: vdpps_ymm_ymm_m256_imm8_238
Execution time vdpps_ymm_ymm_m256_imm8_239: 50 s
Thread 240 done!: vdpps_ymm_ymm_m256_imm8_239
Execution time vdpps_ymm_ymm_m256_imm8_243: 50 s
Thread 244 done!: vdpps_ymm_ymm_m256_imm8_243
SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xea, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2)
                                   (mul_single #x0751a926 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x7fffffff a!5))
                       (add_single (mul_single #xff98843f a!6)
                                   (mul_single #xc4272505 a!7)))))
  (concat (concat (concat (concat a!4 #x00000000) a!4) #x00000000)
          (concat (concat (concat a!8 #x00000000) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #x6b28e5a800000000 #x6b28e5a800000000)
                #xffd8843f00000000)
        #x7fffffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_234: 52 s
Thread 235 done!: vdpps_ymm_ymm_m256_imm8_234
SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xd5, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2)
                                   (mul_single #xaafe53ad a!3))))
      (a!8 (add_single (add_single (mul_single #x7fffffff a!5) #x00000000)
                       (add_single (mul_single #xffc8c160 a!6)
                                   (mul_single #xc3165a60 a!7)))))
  (concat (concat (concat (concat #x00000000 a!4) #x00000000) a!4)
          (concat (concat (concat #x00000000 a!8) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #x0000000077fe6b29 #x0000000077fe6b29)
                #x00000000ffc8c160)
        #x000000007fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_213: 55 s
Thread 214 done!: vdpps_ymm_ymm_m256_imm8_213
Completed 2000cases
Completed 2000cases
SIGNAL 0 [normal exit]

%rax     67 60 4a b2 de ea 54 08
%rcx     18 8f 07 4c 6a 79 95 87
%rdx     56 31 c0 5b 06 e5 04 59
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     07 73 f5 ae 5b 66 a7 0e
%rsi     12 aa 3f 19 54 0d 58 f9
%rdi     2c 07 0d 18 cc ce 59 99
%r8      a8 a6 20 9a ab f2 20 37
%r9      fb 7d 76 01 75 03 0c c7
%r10     63 fa fa c9 e8 4f 8a cf
%r11     0c 98 37 d5 6b 2f c8 53
%r12     71 9a 5e aa f1 b7 8a 57
%r13     e3 67 64 14 6c e7 9d 6a
%r14     03 1b c5 b0 b8 cb b6 ee
%r15     d9 6f 07 81 62 6f 4a 8d

%ymm0    34 5f e7 a2 86 78 9b 04 16 2c ba 89 29 9f c4 78 e7 f9 c2 f8 16 5b 94 02 ef ad 64 84 3c ca 26 91
%ymm1    70 de d4 62 aa 75 7a 08 ef 02 6c ea ec 40 30 63 17 91 9f 9e aa a6 dc b2 ff ff ff ff ff ff ff ff
%ymm2    aa fe 53 ad 8e 75 d9 2c ca 64 b1 c2 75 af 56 8a c3 16 5a 60 ff c8 c1 60 00 00 00 00 7f ff ff ff
%ymm3    47 e2 50 a5 38 52 52 8b c4 dd b2 98 12 4e e6 50 d9 37 fa 4e 73 e4 f4 13 00 00 00 00 00 00 7f ff
%ymm4    5c 16 43 0c cf 60 bc 29 28 6a d7 9d a6 fa eb 0e e8 9d 27 98 c4 f0 9e 76 7d ba 81 6a d5 55 18 50
%ymm5    76 9d ea 1a 40 d4 d7 34 05 77 78 db 4e 0e 04 b1 68 09 c5 5a 21 28 33 89 63 42 eb ed c5 31 6c 5b
%ymm6    68 73 0d 11 fd 70 27 e3 2f 53 0b fb 4e 94 82 72 46 74 6e 95 0b 65 cf b1 43 a7 7e ba 44 3b ce 56
%ymm7    63 60 f2 87 f8 7e 7a e7 81 0a c0 9e db 6d 92 e0 1f fe 5d ac b8 e9 3e 23 de d9 53 2d 95 ac af db
%ymm8    fc 1d 48 5b ba e7 69 33 ef ea b8 08 69 ae 48 cb d3 db 39 f3 bc 3b 95 0f 83 ac d1 60 ce f8 0c a1
%ymm9    51 8b 43 fc 8f 25 b4 34 6b cd cb 38 de e0 7f d6 77 d1 8e ab fe b3 72 0b f7 37 76 e7 b4 ca 16 54
%ymm10   8a fb cb 31 aa 40 ee ae b1 c9 f9 7d 5e 2c b2 26 4e d2 a6 78 5b d5 ea af d6 37 3d cb 40 05 55 59
%ymm11   28 35 2e 08 aa 32 3c 79 88 fc 8a da 4a c1 e0 cd 63 b4 1a 3d 65 48 97 ed ed c2 02 3e eb cb 01 20
%ymm12   db 3e b2 ac 15 7d 7e 0d d3 4b d1 5a c3 d5 cf e9 8a 0e 09 bd aa 55 a3 6d ef 5a d6 02 6d 14 00 2f
%ymm13   2c 00 94 7a 25 56 c7 79 41 4a fb 33 77 af 62 1d ec 8d 4d 02 03 3f f9 45 95 a4 a2 28 b5 48 52 b2
%ymm14   69 7c b6 82 50 b6 ee d6 91 97 0e 18 56 c4 1d 23 4d 6e c0 30 82 33 e3 7f 30 a3 86 ea 0e e1 48 e6
%ymm15   86 f7 f1 88 8e 75 d1 0b 25 1b 1d 4f 89 86 40 71 2f 7c 53 0c 2e e5 4c fe 63 19 1b e4 e9 77 5e fe

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   e9 1f 4e 4a cc 4f d2 5d 
00000006 fffffff0   v v v v v v v v   22 9c 40 05 41 b9 ba f2 
00000006 ffffffe8   v v v v v v v v   91 8e 12 04 3e 54 d3 7b 
00000006 ffffffe0   v v v v v v v v   5d 46 86 45 78 ab 4c 9e 
00000006 ffffffd8   v v v v v v v v   53 ff 78 6f 2c 36 1c 1d 
00000006 ffffffd0   v v v v v v v v   5a 87 4b 4f 27 2b e0 8d 
00000006 ffffffc8   v v v v v v v v   50 be 31 c3 f7 8d f5 17 
00000006 ffffffc0   v v v v v v v v   ce db f9 d9 57 4d 26 e4 
00000006 ffffffb8   v v v v v v v v   d3 42 52 0f db 95 d2 0b 
00000006 ffffffb0   v v v v v v v v   60 1f 6f 9a db 22 5b 8d 
00000006 ffffffa8   v v v v v v v v   c6 a4 ce e0 bf 1a 1e f4 
00000006 ffffffa0   v v v v v v v v   83 ac b3 73 7a e3 92 c4 
00000006 ffffff98   v v v v v v v v   67 bd 3c d0 35 b3 9c c5 
00000006 ffffff90   v v v v v v v v   44 4d 3f 4d 5b b7 bf e6 
00000006 ffffff88   v v v v v v v v   e5 b4 c1 ca 96 72 41 10 
00000006 ffffff80   v v v v v v v v   32 d0 e1 b6 7c d4 87 97 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xda, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_148724 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_148724 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_148724 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe0)))))
      (a!6 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_148724 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_148724 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_148724
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_148724
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single (mul_single #x75af568a a!1) #x00000000)
                       (add_single (mul_single #x8e75d92c a!2)
                                   (mul_single #xaafe53ad a!3))))
      (a!8 (add_single (add_single (mul_single #x7fffffff a!5) #x00000000)
                       (add_single (mul_single #xffc8c160 a!6)
                                   (mul_single #xc3165a60 a!7)))))
  (concat (concat (concat (concat a!4 #x00000000) a!4) #x00000000)
          (concat (concat (concat a!8 #x00000000) a!8) #x00000000))))
    sandbox:   (concat (concat (concat #x77fe6b2900000000 #x77fe6b2900000000)
                #xffc8c16000000000)
        #x7fffffff00000000)

Execution time vdpps_ymm_ymm_m256_imm8_218: 56 s
Thread 219 done!: vdpps_ymm_ymm_m256_imm8_218
SIGNAL 0 [normal exit]

%rax     0f ee a7 78 7c 75 76 d8
%rcx     1b 69 cf 1d 3e 22 e1 bf
%rdx     31 b0 12 fb 4d c4 0b 2d
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     0e e2 57 e1 c6 ee 11 a9
%rsi     06 8f 0c b9 5e 5b a6 62
%rdi     3c f5 8a d5 98 b7 e4 13
%r8      41 73 0c 97 c4 1c cf d3
%r9      1b 0d e9 b9 fe 07 61 1d
%r10     87 4f 08 74 49 79 68 90
%r11     64 fe 15 91 c1 1f 06 ec
%r12     44 bd 9c 26 7c 28 1a e4
%r13     3e d2 4f ae b6 42 c4 fd
%r14     40 b4 d6 54 2c 87 4b b8
%r15     cd d2 00 e8 6e 02 d3 dd

%ymm0    19 38 31 ff 6b 5f ff 83 f1 fd af 14 bc fb 3d 68 cf b6 1d 17 78 4b c7 ca 94 85 06 97 41 49 fb 1a
%ymm1    80 f9 5f 54 e0 26 22 e1 bb c3 e2 38 d2 e5 88 be 28 8d 81 c0 be ca a3 a7 00 00 00 00 00 00 00 7f
%ymm2    07 51 a9 26 d0 af c7 7c cf a1 5a ee e6 96 0c ae c4 27 25 05 ff 98 84 3f 7f ff ff ff ff ff ff ff
%ymm3    b6 f3 05 b9 ec b4 10 c5 e4 61 fe 67 91 5d 0d a3 77 77 96 c9 b3 6f a3 ad 7f ff ff ff ff ff ff ff
%ymm4    10 57 d5 75 a0 e2 70 e7 f6 bb d6 30 d7 75 32 70 e4 d5 62 41 5e eb aa 95 38 3b f2 8b cb e7 62 9a
%ymm5    40 41 11 09 31 ba 34 bb 19 52 4b 32 5c 90 5c 2c b8 e6 f9 48 02 24 e6 c1 c5 fa 17 30 c2 db 3e 37
%ymm6    a0 bb ed 51 7b ac 40 71 7b 86 3d bf 6c ea 74 3a 8e e4 de 62 2b f7 68 e3 f5 44 fd 33 7f 02 1c 4f
%ymm7    fe 65 8b f5 c5 d0 08 74 55 5c 34 e3 e1 ae a6 21 41 bc ad 07 2e c9 29 cc 9e 32 63 bb 3d 1f be 09
%ymm8    21 73 60 d8 75 fb 4c 80 36 7c 78 c2 27 1c 8e 44 3b e0 9d 19 9e e1 6c 97 b3 a2 6d e7 04 3b 84 49
%ymm9    f7 2c 85 13 0a 12 b3 32 9d b8 e6 1d 82 69 a5 c0 42 89 32 fe 4e 52 60 34 b3 7f c8 1c cb 26 af e4
%ymm10   51 3f 9a 1c 48 6e 97 35 64 85 82 31 e8 ca 4b cb 48 e2 26 88 a0 9d 56 a2 4f 04 41 1a 51 c2 52 34
%ymm11   3e 55 d8 51 04 99 b7 e8 50 48 51 1b e4 cc 98 b3 e4 ce 67 19 85 85 f3 fd e5 56 a6 43 07 a2 02 ec
%ymm12   3e 17 ea 64 d9 94 8b 87 90 f2 d0 a8 a2 88 57 87 a3 8b ee f0 a7 20 89 8e 9b 03 9b 9e 1e 45 f7 da
%ymm13   a6 73 4d c4 34 36 da d0 5d 46 45 d5 b6 52 05 0e b0 7d b7 29 d9 2c 3b e9 85 1a 60 f7 7f 5c 5c e1
%ymm14   d2 57 64 29 b1 f1 dc ec bd a6 12 ec 49 cc a7 74 16 55 6f 08 a4 f2 51 7b 18 25 40 2f a0 25 cf a9
%ymm15   0c 19 d9 d8 47 82 73 1d d1 82 41 e4 c5 9a d2 d8 51 06 31 dd f0 dc 6e e8 37 7c 97 bc 63 72 7c 34

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   3d 9f 2f 59 d9 f5 fa 20 
00000006 fffffff0   v v v v v v v v   42 65 f0 7b 03 22 0f 85 
00000006 ffffffe8   v v v v v v v v   79 91 b1 26 20 a1 69 f5 
00000006 ffffffe0   v v v v v v v v   47 58 8e 18 7d 8a 5b e4 
00000006 ffffffd8   v v v v v v v v   c5 3a 5e b9 b2 95 2f c7 
00000006 ffffffd0   v v v v v v v v   62 ce 6c 7d a9 7e d4 52 
00000006 ffffffc8   v v v v v v v v   71 10 bd 2b 5a 11 66 2e 
00000006 ffffffc0   v v v v v v v v   db 04 bd 99 c4 21 86 0c 
00000006 ffffffb8   v v v v v v v v   88 c9 8a eb 32 61 5b e5 
00000006 ffffffb0   v v v v v v v v   24 ee a9 57 0d c3 95 45 
00000006 ffffffa8   v v v v v v v v   b6 ac c5 2b 36 62 71 42 
00000006 ffffffa0   v v v v v v v v   40 9c 13 b8 99 bc 82 9c 
00000006 ffffff98   v v v v v v v v   97 28 90 4d 3d 6d 3b cd 
00000006 ffffff90   v v v v v v v v   e1 e6 c1 c7 0d e9 80 8b 
00000006 ffffff88   v v v v v v v v   76 63 ba f4 22 d5 2f 87 
00000006 ffffff80   v v v v v v v v   03 56 36 fc 25 59 0c 49 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xe5, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_183812 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff4)))))
      (a!2 (concat (select TMP_ARR_64_8_183812 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffff8)))))
      (a!3 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_183812 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006fffffffc)))))
      (a!5 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe4)))))
      (a!6 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffe8)))))
      (a!7 (concat (select TMP_ARR_64_8_183812 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_183812 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_183812
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_183812
                                           #x00000006ffffffec))))))
(let ((a!4 (add_single (add_single #x00000000 (mul_single #xcfa15aee a!1))
                       (add_single (mul_single #xd0afc77c a!2)
                                   (mul_single #x0751a926 a!3))))
      (a!8 (add_single (add_single #x00000000 (mul_single #x7fffffff a!5))
                       (add_single (mul_single #xff98843f a!6)
                                   (mul_single #xc4272505 a!7)))))
  (concat (concat (concat (concat #x00000000 a!4) #x00000000) a!4)
          (concat (concat (concat #x00000000 a!8) #x00000000) a!8))))
    sandbox:   (concat (concat (concat #x000000006b28e5a8 #x000000006b28e5a8)
                #x00000000ffd8843f)
        #x000000007fffffff)

Execution time vdpps_ymm_ymm_m256_imm8_229: 59 s
Thread 230 done!: vdpps_ymm_ymm_m256_imm8_229
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 3000cases
Completed 2000cases
Completed 2000cases
Completed 2000cases
Completed 3000cases
Completed 4000cases
Completed 4000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 3000cases
Completed 5000cases
Completed 5000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 6000cases
Completed 6000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Completed 4000cases
Execution time vdpps_ymm_ymm_m256_imm8_240: 123 s
Thread 241 done!: vdpps_ymm_ymm_m256_imm8_240
Execution time vdpps_ymm_ymm_m256_imm8_224: 124 s
Thread 225 done!: vdpps_ymm_ymm_m256_imm8_224
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 5000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_226: 159 s
Thread 227 done!: vdpps_ymm_ymm_m256_imm8_226
Completed 6000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_225: 165 s
Thread 226 done!: vdpps_ymm_ymm_m256_imm8_225
Execution time vdpps_ymm_ymm_m256_imm8_210: 166 s
Thread 211 done!: vdpps_ymm_ymm_m256_imm8_210
Execution time vdpps_ymm_ymm_m256_imm8_228: 166 s
Thread 229 done!: vdpps_ymm_ymm_m256_imm8_228
Execution time vdpps_ymm_ymm_m256_imm8_232: 166 s
Thread 233 done!: vdpps_ymm_ymm_m256_imm8_232
Execution time vdpps_ymm_ymm_m256_imm8_212: 167 s
Thread 213 done!: vdpps_ymm_ymm_m256_imm8_212
Execution time vdpps_ymm_ymm_m256_imm8_216: 172 s
Thread 217 done!: vdpps_ymm_ymm_m256_imm8_216
Execution time vdpps_ymm_ymm_m256_imm8_241: 172 s
Thread 242 done!: vdpps_ymm_ymm_m256_imm8_241
Execution time vdpps_ymm_ymm_m256_imm8_242: 174 s
Thread 243 done!: vdpps_ymm_ymm_m256_imm8_242
Execution time vdpps_ymm_ymm_m256_imm8_244: 174 s
Thread 245 done!: vdpps_ymm_ymm_m256_imm8_244
[4m[1m[34mFiring Last 11[0m
Thread 246 start: vdpps_ymm_ymm_m256_imm8_245
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_245/vdpps_ymm_ymm_m256_imm8_245.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 247 start: vdpps_ymm_ymm_m256_imm8_246
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_246/vdpps_ymm_ymm_m256_imm8_246.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 249 start: vdpps_ymm_ymm_m256_imm8_248
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_248/vdpps_ymm_ymm_m256_imm8_248.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 248 start: vdpps_ymm_ymm_m256_imm8_247
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_247/vdpps_ymm_ymm_m256_imm8_247.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 250 start: vdpps_ymm_ymm_m256_imm8_249
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_249/vdpps_ymm_ymm_m256_imm8_249.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 251 start: vdpps_ymm_ymm_m256_imm8_250
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_250/vdpps_ymm_ymm_m256_imm8_250.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 252 start: vdpps_ymm_ymm_m256_imm8_251
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_251/vdpps_ymm_ymm_m256_imm8_251.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 253 start: vdpps_ymm_ymm_m256_imm8_252
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_252/vdpps_ymm_ymm_m256_imm8_252.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 254 start: vdpps_ymm_ymm_m256_imm8_253
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_253/vdpps_ymm_ymm_m256_imm8_253.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 255 start: vdpps_ymm_ymm_m256_imm8_254
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_254/vdpps_ymm_ymm_m256_imm8_254.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Thread 256 start: vdpps_ymm_ymm_m256_imm8_255
timeout 30m  /home/sdasgup3/Github/strata/stoke/./bin/stoke_check_circuit --strata_path /home/sdasgup3/Github/strata-data/circuits --target concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/vdpps_ymm_ymm_m256_imm8_255/vdpps_ymm_ymm_m256_imm8_255.s --functions /home/sdasgup3/Github/strata-data/data-regs/functions --testcases concrete_instances/memory-variants/vdpps_ymm_ymm_m256_imm8/instructions/../testcases.09.tc --def_in "{ %rbx %ymm2 }" --live_out "{ %ymm1 }" --maybe_undef_out "{ }" 
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xf6, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffffd)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffed)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3)
                                   (mul_single #xf65f41f9 a!4))))
      (a!10 (add_single (add_single (mul_single #x7ece1038 a!6)
                                    (mul_single #x6f451610 a!7))
                        (add_single (mul_single #xfff35f5a a!8)
                                    (mul_single #xc14e07ea a!9)))))
  (concat (concat (concat (concat #x00000000 a!5) a!5) #x00000000)
          (concat (concat (concat #x00000000 a!10) a!10) #x00000000))))
    sandbox:   (concat (concat (concat #x00000000ff800000 #xff80000000000000)
                #x00000000fff35f5a)
        #xffc0000000000000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xfe, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffffd)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffed)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3)
                                   (mul_single #xf65f41f9 a!4))))
      (a!10 (add_single (add_single (mul_single #x7ece1038 a!6)
                                    (mul_single #x6f451610 a!7))
                        (add_single (mul_single #xfff35f5a a!8)
                                    (mul_single #xc14e07ea a!9)))))
  (concat (concat (concat (concat a!5 a!5) a!5) #x00000000)
          (concat (concat (concat a!10 a!10) a!10) #x00000000))))
    sandbox:   (concat (concat (concat #xff800000ff800000 #xff80000000000000)
                #xfff35f5afff35f5a)
        #xffc0000000000000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xf7, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffffd)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffed)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3)
                                   (mul_single #xf65f41f9 a!4))))
      (a!10 (add_single (add_single (mul_single #x7ece1038 a!6)
                                    (mul_single #x6f451610 a!7))
                        (add_single (mul_single #xfff35f5a a!8)
                                    (mul_single #xc14e07ea a!9)))))
  (concat (concat (concat (concat #x00000000 a!5) a!5) a!5)
          (concat (concat (concat #x00000000 a!10) a!10) a!10))))
    sandbox:   (concat (concat (concat #x00000000ff800000 #xff800000ff800000)
                #x00000000fff35f5a)
        #xffc00000ffc00000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xfd, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffffd)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffed)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3)
                                   (mul_single #xf65f41f9 a!4))))
      (a!10 (add_single (add_single (mul_single #x7ece1038 a!6)
                                    (mul_single #x6f451610 a!7))
                        (add_single (mul_single #xfff35f5a a!8)
                                    (mul_single #xc14e07ea a!9)))))
  (concat (concat (concat (concat a!5 a!5) #x00000000) a!5)
          (concat (concat (concat a!10 a!10) #x00000000) a!10))))
    sandbox:   (concat (concat (concat #xff800000ff800000 #x00000000ff800000)
                #xfff35f5afff35f5a)
        #x00000000ffc00000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xf5, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffffd)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffed)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3)
                                   (mul_single #xf65f41f9 a!4))))
      (a!10 (add_single (add_single (mul_single #x7ece1038 a!6)
                                    (mul_single #x6f451610 a!7))
                        (add_single (mul_single #xfff35f5a a!8)
                                    (mul_single #xc14e07ea a!9)))))
  (concat (concat (concat (concat #x00000000 a!5) #x00000000) a!5)
          (concat (concat (concat #x00000000 a!10) #x00000000) a!10))))
    sandbox:   (concat (concat (concat #x00000000ff800000 #x00000000ff800000)
                #x00000000fff35f5a)
        #x00000000ffc00000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xf9, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffffd)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffed)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3)
                                   (mul_single #xf65f41f9 a!4))))
      (a!10 (add_single (add_single (mul_single #x7ece1038 a!6)
                                    (mul_single #x6f451610 a!7))
                        (add_single (mul_single #xfff35f5a a!8)
                                    (mul_single #xc14e07ea a!9)))))
  (concat (concat (concat (concat a!5 #x00000000) #x00000000) a!5)
          (concat (concat (concat a!10 #x00000000) #x00000000) a!10))))
    sandbox:   (concat (concat (concat #xff80000000000000 #x00000000ff800000)
                #xfff35f5a00000000)
        #x00000000ffc00000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xfa, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffffd)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffed)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3)
                                   (mul_single #xf65f41f9 a!4))))
      (a!10 (add_single (add_single (mul_single #x7ece1038 a!6)
                                    (mul_single #x6f451610 a!7))
                        (add_single (mul_single #xfff35f5a a!8)
                                    (mul_single #xc14e07ea a!9)))))
  (concat (concat (concat (concat a!5 #x00000000) a!5) #x00000000)
          (concat (concat (concat a!10 #x00000000) a!10) #x00000000))))
    sandbox:   (concat (concat (concat #xff80000000000000 #xff80000000000000)
                #xfff35f5a00000000)
        #xffc0000000000000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xff, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffffd)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffed)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3)
                                   (mul_single #xf65f41f9 a!4))))
      (a!10 (add_single (add_single (mul_single #x7ece1038 a!6)
                                    (mul_single #x6f451610 a!7))
                        (add_single (mul_single #xfff35f5a a!8)
                                    (mul_single #xc14e07ea a!9)))))
  (concat (concat (concat (concat a!5 a!5) a!5) a!5)
          (concat (concat (concat a!10 a!10) a!10) a!10))))
    sandbox:   (concat (concat (concat #xff800000ff800000 #xff800000ff800000)
                #xfff35f5afff35f5a)
        #xffc00000ffc00000)

Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
SIGNAL 0 [normal exit]

%rax     1a d4 30 be a0 b9 f4 8f
%rcx     e0 04 e5 7a 9c 9f 1b e8
%rdx     13 06 bc 4f 62 58 5a 55
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     eb d0 b3 e0 75 d5 da f6
%rsi     68 ca 86 59 21 8b 6f 97
%rdi     f1 16 c9 a7 c2 73 b8 28
%r8      ad 8d 1c 2a 42 98 f3 82
%r9      e7 84 e5 62 df cd 03 f7
%r10     57 52 5f e1 ea 5a b3 22
%r11     18 8e 39 39 00 ff 91 e7
%r12     79 00 ac 6d c5 f7 45 74
%r13     50 a1 00 44 38 b0 ed 79
%r14     ac 20 ac 24 21 92 bc ce
%r15     33 be a5 20 bd 4f 43 62

%ymm0    30 cd ed f8 15 ad 38 7e d3 cd 7f bb 8e a5 91 9c d2 ab f0 11 de 14 28 48 61 41 b9 06 54 1c 01 54
%ymm1    71 bb 48 ee 90 8a bb f5 fd bc 3c df 0f 87 e0 84 97 28 d4 93 d9 77 25 f7 e7 38 73 a4 c0 81 55 ac
%ymm2    f6 5f 41 f9 0a 66 73 57 c9 57 55 52 b1 35 42 d8 c1 4e 07 ea ff f3 5f 5a 6f 45 16 10 7e ce 10 38
%ymm3    e2 47 93 43 c6 1f 1b 0b 21 d1 2b 59 7d b3 a9 67 c2 fd ca a0 97 8c 4c 3f d6 61 2d ba ab 66 1c d1
%ymm4    a2 89 c5 8b 30 f3 97 96 a3 04 4a fc 17 67 37 5f ef 07 aa fb 4d be 54 2f 56 1b 2c 3a c5 18 68 0b
%ymm5    42 6e f8 5b 44 4c 0b 45 ee 1a 8d c9 9b 5b 98 5b ed cc c0 f4 0b 6c fe e5 f7 10 9b f3 f8 7a de dc
%ymm6    1f cf 6e 51 83 56 d8 2f ad a4 da 22 db 89 cc 8c b2 6c 4c eb a2 ae e5 5a 24 c7 1c 5e c6 8c 21 28
%ymm7    ac f2 99 04 3e 97 c7 42 b3 6a 6f 8b 96 e9 ed f3 7c 60 b0 12 47 34 f7 51 eb 0b f1 79 b4 33 da 95
%ymm8    3a ea ba 77 ec b1 05 47 4f f3 0a 38 4f 62 6b a2 67 5b a9 3d 49 6e d5 d3 22 2d d4 8b 0d 29 04 76
%ymm9    5a d5 98 af 20 cf 12 39 de ba 43 f0 fd c4 b1 a3 79 55 cb 1f cd 2f a3 48 93 dc 7d 37 23 24 6b fc
%ymm10   3f 06 d2 63 06 2e 4a 35 71 3e a3 06 88 2e c1 ed d4 ed 28 ea cd 23 c9 9a 49 25 12 28 23 f8 34 34
%ymm11   ef 46 18 35 77 bf 7b ae 4e af 9b e6 a9 5f be fe 3c 17 ad a2 61 c2 24 bb ef 9b 72 a3 7c fd 60 82
%ymm12   9f a3 7f fa cf 9d 2c 03 83 7d 30 72 67 35 6c fe 98 14 2f e6 e4 3f 91 10 e1 d9 04 01 ef 49 91 85
%ymm13   21 38 05 d1 a2 d3 1c e5 56 5e 66 15 bc 96 bc 4b 98 7f c7 32 0f de 03 19 6b 8d c2 47 ba 02 1b fb
%ymm14   17 45 87 74 f2 9d 4c be 34 cc 9e 13 79 ae c8 17 58 bc 34 ae 00 6b b7 36 86 dd a7 f9 11 4e 70 88
%ymm15   64 3a 4e 95 c2 a5 15 92 cc 2a 18 94 ba 56 dd 15 db 34 41 2e f9 c3 1a 60 a6 53 8c d4 e1 0b 46 dd

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   6a c7 d5 a0 7d 0f d5 1b 
00000006 fffffff0   v v v v v v v v   93 8a 5b 6a 6a 3c 29 0e 
00000006 ffffffe8   v v v v v v v v   53 61 8c 96 b1 29 04 b8 
00000006 ffffffe0   v v v v v v v v   5b 80 68 10 f4 17 46 d8 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)
Execution time vdpps_ymm_ymm_m256_imm8_254: 8 s
Thread 255 done!: vdpps_ymm_ymm_m256_imm8_254



Sandbox and validator do not agree for 'vdpps $0xfb, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff1)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_6302 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff5)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_6302 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffff9)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_6302 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_6302 #x00000006fffffffd)
                                   (select TMP_ARR_64_8_6302 #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_6302 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_6302 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_6302 #x00000006ffffffed)
                                   (select TMP_ARR_64_8_6302 #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xb13542d8 a!1)
                                   (mul_single #xc9575552 a!2))
                       (add_single (mul_single #x0a667357 a!3)
                                   (mul_single #xf65f41f9 a!4))))
      (a!10 (add_single (add_single (mul_single #x7ece1038 a!6)
                                    (mul_single #x6f451610 a!7))
                        (add_single (mul_single #xfff35f5a a!8)
                                    (mul_single #xc14e07ea a!9)))))
  (concat (concat (concat (concat a!5 #x00000000) a!5) a!5)
          (concat (concat (concat a!10 #x00000000) a!10) a!10))))
    sandbox:   (concat (concat (concat #xff80000000000000 #xff800000ff800000)
                #xfff35f5a00000000)
        #xffc00000ffc00000)

Execution time vdpps_ymm_ymm_m256_imm8_253: 8 s
Thread 254 done!: vdpps_ymm_ymm_m256_imm8_253
Execution time vdpps_ymm_ymm_m256_imm8_245: 8 s
Thread 246 done!: vdpps_ymm_ymm_m256_imm8_245
Execution time vdpps_ymm_ymm_m256_imm8_246: 8 s
Thread 247 done!: vdpps_ymm_ymm_m256_imm8_246
Execution time vdpps_ymm_ymm_m256_imm8_249: 8 s
Thread 250 done!: vdpps_ymm_ymm_m256_imm8_249
Execution time vdpps_ymm_ymm_m256_imm8_250: 9 s
Thread 251 done!: vdpps_ymm_ymm_m256_imm8_250
Execution time vdpps_ymm_ymm_m256_imm8_255: 9 s
Thread 256 done!: vdpps_ymm_ymm_m256_imm8_255
Execution time vdpps_ymm_ymm_m256_imm8_251: 9 s
Thread 252 done!: vdpps_ymm_ymm_m256_imm8_251
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
Reading the Testsuit
Preparing Sandbox
Run 6630 tests
Collect Results
Check Equivalence
Completed 1000cases
SIGNAL 0 [normal exit]

%rax     8a 20 45 b9 33 fe 81 b8
%rcx     00 00 00 00 00 00 00 80
%rdx     7b 6e ac 88 cb 9a c6 ac
%rbx     00 00 00 06 ff ff ff e0
%rsp     00 00 00 06 ff ff ff f8
%rbp     74 c7 89 c8 09 70 da 0d
%rsi     97 52 ae 0d d7 3f 61 4f
%rdi     57 2e 67 4e 34 ac c6 f2
%r8      b6 e5 66 a9 1e 1a 5b 20
%r9      2d 7d 86 de 09 bf 55 41
%r10     5d 8c 56 6a f5 04 bc e7
%r11     c0 c1 bf a0 6a 91 39 1c
%r12     83 79 c3 42 c3 de db 1a
%r13     a6 23 09 be f6 8c 38 18
%r14     99 8d 27 7d 30 9b 27 c5
%r15     f7 c0 c4 dd 00 03 1e 60

%ymm0    37 6f b5 97 77 f5 d2 9a f4 cf 7c 94 36 ef 6c b9 bf d1 92 fa 2b 6f f1 6d 79 65 34 61 e2 bb 9e a0
%ymm1    bc 91 15 68 5a a6 b2 c3 2f bd f0 94 c9 21 18 35 ea 28 c8 31 69 f7 9e 6f cb 2f 7e 5e b5 19 2a 54
%ymm2    ff bb 1a c0 ff 89 aa 97 2f 04 e4 6c d5 27 7b 40 5e 5a 28 29 70 00 60 3f 97 69 a0 28 9e 71 aa 3f
%ymm3    54 2f 4b 90 2f 90 76 6f 91 ed c5 fa be c1 15 52 ec ee d6 ab 90 7c 83 67 0c 83 07 cd ec 9d 2c c4
%ymm4    ad fa 31 35 a6 02 ea 16 d3 5a a0 63 c9 b3 9e cf f5 dd ba a3 f1 cb cc 46 3b 50 c3 d3 44 40 cc 77
%ymm5    19 52 af 1b a5 b5 e9 70 0f e7 85 f9 14 2b 59 b0 61 a6 12 92 b1 34 d8 0e 43 0c 42 fd d1 f1 3a fe
%ymm6    9d 39 db b4 20 88 04 05 e3 4f 1b 73 3f 34 ed 46 20 c2 ec 70 61 46 5e cf 94 29 f7 86 e6 ea 44 e9
%ymm7    d3 96 4a b4 f9 11 d9 45 f1 50 40 ec 6d f1 d0 fa b2 9c 0d 6c 7b 4a 7f 0b e9 39 ad 1a a5 84 23 1f
%ymm8    61 e1 55 f3 0e bf a9 5a c6 98 81 81 a7 31 40 bb c3 4f eb c9 9d 4f bc 31 d3 71 b1 c8 88 78 1a 6d
%ymm9    34 3f a0 c4 de be 6e ea b0 af 41 55 e9 a8 d4 68 01 a3 28 45 df d9 5a 16 3c 0b 5a 0b 38 e9 59 70
%ymm10   4d a9 09 53 75 ca b3 b1 ec f5 43 02 45 93 c1 ef aa 18 1b 41 17 78 19 d2 99 40 77 82 04 6c 28 f9
%ymm11   44 5e 3e 12 11 94 09 be 1f 3e 0a 6d 52 15 2a 50 d0 97 8f e1 ed 76 c5 ab 5f 4d 92 8d b4 51 15 31
%ymm12   4e 85 0a fb 41 ab bd 2e 9a 28 25 dc 09 e7 d1 9c 95 bc 71 45 eb da b6 0a ed 3f 45 42 e0 f8 b0 53
%ymm13   2b 0a ff 71 bb 7a 67 c0 39 bb 03 0b 21 db e5 45 d1 fe 74 35 69 b8 c4 24 cc e9 6e c2 fc 2f 7d ba
%ymm14   54 5c 40 d8 31 36 d8 c0 7a 5e 59 ba 24 9e b6 19 7c db 34 37 0a 35 c3 d4 cc 0b 10 a7 3e 27 39 7c
%ymm15   28 f7 5a af a2 fe 6f ca cc 39 f2 0c be 94 b2 04 6f 14 4e 56 98 72 22 61 68 ec 9e 94 20 93 83 79

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffff80 ]
[ 16 valid rows shown ]

00000006 fffffff8   v v v v v v v v   90 57 c7 34 bf 3d 18 b1 
00000006 fffffff0   v v v v v v v v   8e ac 7b 7a ab c3 47 ae 
00000006 ffffffe8   v v v v v v v v   62 65 bc 7d cd be 5d 71 
00000006 ffffffe0   v v v v v v v v   f4 fe e2 9e c7 7f c8 5c 
00000006 ffffffd8   v v v v v v v v   97 8a 1c 0e ae 6c 36 14 
00000006 ffffffd0   v v v v v v v v   00 b8 33 fd 60 e2 f1 e5 
00000006 ffffffc8   v v v v v v v v   97 fe 1f 5c ca 5f 8e 56 
00000006 ffffffc0   v v v v v v v v   36 63 d6 6b e8 3e 40 89 
00000006 ffffffb8   v v v v v v v v   db af d8 9a 6c 7d e1 03 
00000006 ffffffb0   v v v v v v v v   58 51 0c 7b 4a f3 c6 3b 
00000006 ffffffa8   v v v v v v v v   34 c0 ce 74 29 2b 80 cb 
00000006 ffffffa0   v v v v v v v v   7b 98 2b 5e 62 90 b1 41 
00000006 ffffff98   v v v v v v v v   43 5a b8 69 25 90 f7 dd 
00000006 ffffff90   v v v v v v v v   06 19 b5 0f be 06 6d c0 
00000006 ffffff88   v v v v v v v v   97 a2 f4 5e b0 e8 9f 1c 
00000006 ffffff80   v v v v v v v v   35 9b ad 21 4d 57 89 da 

[ 00000001 00000000 - 00000001 00000000 ]
[ 0 valid rows shown ]

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)



Sandbox and validator do not agree for 'vdpps $0xfc, (%rbx), %ymm2, %ymm1' (opcode vdpps_ymm_ymm_m256_imm8)
  states do not agree for '%ymm1':
    validator: (let ((a!1 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff0)))))
      (a!2 (concat (select TMP_ARR_64_8_89900 #x00000006fffffff7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffff6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff4)))))
      (a!3 (concat (select TMP_ARR_64_8_89900 #x00000006fffffffb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffa)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffff9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffff8)))))
      (a!4 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffff)
                   (concat (select TMP_ARR_64_8_89900 #x00000006fffffffe)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006fffffffd)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006fffffffc)))))
      (a!6 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe3)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe2)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe1)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe0)))))
      (a!7 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe7)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffe6)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe5)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe4)))))
      (a!8 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffeb)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffea)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe9)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffe8)))))
      (a!9 (concat (select TMP_ARR_64_8_89900 #x00000006ffffffef)
                   (concat (select TMP_ARR_64_8_89900 #x00000006ffffffee)
                           (concat (select TMP_ARR_64_8_89900
                                           #x00000006ffffffed)
                                   (select TMP_ARR_64_8_89900
                                           #x00000006ffffffec))))))
(let ((a!5 (add_single (add_single (mul_single #xd5277b40 a!1)
                                   (mul_single #x2f04e46c a!2))
                       (add_single (mul_single #xff89aa97 a!3)
                                   (mul_single #xffbb1ac0 a!4))))
      (a!10 (add_single (add_single (mul_single #x9e71aa3f a!6)
                                    (mul_single #x9769a028 a!7))
                        (add_single (mul_single #x7000603f a!8)
                                    (mul_single #x5e5a2829 a!9)))))
  (concat (concat (concat (concat a!5 a!5) #x00000000) #x00000000)
          (concat (concat (concat a!10 a!10) #x00000000) #x00000000))))
    sandbox:   (concat (concat (concat #xffc9aa97fffb1ac0 #x0000000000000000)
                #x7f8000007f800000)
        #x0000000000000000)

Execution time vdpps_ymm_ymm_m256_imm8_252: 32 s
Thread 253 done!: vdpps_ymm_ymm_m256_imm8_252
Completed 2000cases
Completed 3000cases
Completed 4000cases
Completed 5000cases
Completed 6000cases
Execution time vdpps_ymm_ymm_m256_imm8_247: 127 s
Thread 248 done!: vdpps_ymm_ymm_m256_imm8_247
Execution time vdpps_ymm_ymm_m256_imm8_248: 127 s
Thread 249 done!: vdpps_ymm_ymm_m256_imm8_248
