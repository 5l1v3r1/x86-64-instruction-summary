code: adcq $0x0, (%rbx)

  maybe read:      { %rbx %cf }
  must read:       { %rbx %cf }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

adcq $0x0, (%rbx): Hindex2(9)
adcq $0x0, (%rbx): Hindex2(9)
Formula:

%cf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
  (= ((_ extract 64 64) a!1) #b1))
%pf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
  (not (xor (= ((_ extract 0 0) a!1) #b1)
            (= ((_ extract 1 1) a!1) #b1)
            (= ((_ extract 2 2) a!1) #b1)
            (= ((_ extract 3 3) a!1) #b1)
            (= ((_ extract 4 4) a!1) #b1)
            (= ((_ extract 5 5) a!1) #b1)
            (= ((_ extract 6 6) a!1) #b1)
            (= ((_ extract 7 7) a!1) #b1))))
%af    : false
%zf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
  (= ((_ extract 63 0) a!1) #x0000000000000000))
%sf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
  (= ((_ extract 63 63) a!1) #b1))
%of    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
(let ((a!2 (not (= false (= ((_ extract 63 63) a!1) #b1)))))
  (and (= false (= ((_ extract 63 63) TMP_BV_64_0) #b1)) a!2)))

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
  ((_ extract 63 0) a!1)) (8 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv
    (and (not sigfpe) (not sigbus) false)
    (and (not sigfpe) (not sigbus) false))
