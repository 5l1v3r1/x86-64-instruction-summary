code: adcq $0x0, (%rbx)

  maybe read:      { %rbx %cf }
  must read:       { %rbx %cf }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
  ((_ extract 64 64) a!1))

%pf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
(let ((a!2 (not (xor (= ((_ extract 0 0) a!1) #b1)
                     (= ((_ extract 1 1) a!1) #b1)
                     (= ((_ extract 2 2) a!1) #b1)
                     (= ((_ extract 3 3) a!1) #b1)
                     (= ((_ extract 4 4) a!1) #b1)
                     (= ((_ extract 5 5) a!1) #b1)
                     (= ((_ extract 6 6) a!1) #b1)
                     (= ((_ extract 7 7) a!1) #b1)))))
  (ite a!2 #b1 #b0)))

%af    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
  (bvxor ((_ extract 4 4) TMP_BV_64_0) ((_ extract 4 4) a!1)))

%zf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
  (ite (= ((_ extract 63 0) a!1) #x0000000000000000) #b1 #b0))

%sf    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
  ((_ extract 63 63) a!1))

%of    : (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
(let ((a!2 (not (= false (= ((_ extract 63 63) a!1) #b1)))))
(let ((a!3 (and (= false (= ((_ extract 63 63) TMP_BV_64_0) #b1)) a!2)))
  (ite a!3 #b1 #b0))))


Information about memory reads:
  Value TMP_BV_64_0
 (8 bytes)
    was read at address %rbx
.

Information about memory writes:
  Address %rbx
 was updated to
    (let ((a!1 (bvadd (ite %cf
                       (bvadd (concat #b0 #x0000000000000000)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 #x0000000000000000))
                  (concat #b0 TMP_BV_64_0))))
  ((_ extract 63 0) a!1))
 (8 bytes).

sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : (or sigsegv
    (and (not sigfpe) (not sigbus) false)
    (and (not sigfpe) (not sigbus) false))

