code: cmpxchgw %cx, (%rbx)

  maybe read:      { %ax %cx %rbx }
  must read:       { %ax %cx %rbx }
  maybe write:     { %ax %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : (concat ((_ extract 63 16) %rax) TMP_BV_16_0)

%cf    : (let ((a!1 ((_ extract 16 16)
             (bvadd (concat #b0 ((_ extract 15 0) %rax))
                    #b00000000000000001
                    (concat #b0 (bvxor TMP_BV_16_0 #xffff))))))
(let ((a!2 ((_ extract 8 8)
             (bvadd (ite (= a!1 #b1) #b000000000 #b011111111)
                    (ite (= a!1 #b1) #b000000000 #b011111111)))))
  (= a!2 #b1)))
%pf    : (let ((a!1 (bvadd (concat #b0 ((_ extract 15 0) %rax))
                  #b00000000000000001
                  (concat #b0 (bvxor TMP_BV_16_0 #xffff)))))
  (not (xor (= ((_ extract 0 0) a!1) #b1)
            (= ((_ extract 1 1) a!1) #b1)
            (= ((_ extract 2 2) a!1) #b1)
            (= ((_ extract 3 3) a!1) #b1)
            (= ((_ extract 4 4) a!1) #b1)
            (= ((_ extract 5 5) a!1) #b1)
            (= ((_ extract 6 6) a!1) #b1)
            (= ((_ extract 7 7) a!1) #b1))))
%af    : (let ((a!1 (bvadd (concat #b0 ((_ extract 3 0) %rax))
                  (concat #b0 (bvxor ((_ extract 3 0) TMP_BV_16_3) #xf)))))
  (= ((_ extract 4 4) a!1) #b1))
%zf    : (let ((a!1 ((_ extract 15 0)
             (bvadd (concat #b0 ((_ extract 15 0) %rax))
                    #b00000000000000001
                    (concat #b0 (bvxor TMP_BV_16_0 #xffff))))))
  (= a!1 #x0000))
%sf    : (let ((a!1 ((_ extract 15 15)
             (bvadd (concat #b0 ((_ extract 15 0) %rax))
                    #b00000000000000001
                    (concat #b0 (bvxor TMP_BV_16_0 #xffff))))))
  (= a!1 #b1))
%of    : (let ((a!1 (= (= ((_ extract 15 15) %rax) #b1)
              (= (bvxor ((_ extract 15 15) TMP_BV_16_4) #b1) #b1)))
      (a!2 ((_ extract 15 15)
             (bvadd (concat #b0 ((_ extract 15 0) %rax))
                    #b00000000000000001
                    (concat #b0 (bvxor TMP_BV_16_0 #xffff))))))
(let ((a!3 (not (= (= ((_ extract 15 15) %rax) #b1) (= a!2 #b1)))))
  (and a!1 a!3)))

Information about memory reads:
  Value TMP_BV_16_0 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_1 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_2 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_3 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_4 (2 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (let ((a!1 ((_ extract 15 0)
             (bvadd (concat #b0 ((_ extract 15 0) %rax))
                    #b00000000000000001
                    (concat #b0 (bvxor TMP_BV_16_0 #xffff))))))
  (ite (= a!1 #x0000) ((_ extract 15 0) %rcx) TMP_BV_16_2)) (2 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
