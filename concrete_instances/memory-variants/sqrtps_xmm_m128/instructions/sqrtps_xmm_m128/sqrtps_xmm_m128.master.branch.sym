code: sqrtps (%rbx), %xmm1

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

sqrtps (%rbx), %xmm1: Hindex8(9)
sqrtps (%rbx), %xmm1: Hindex8(9)
callq .move_128_064_xmm2_r10_r11: Hindex8(9)
vzeroall: Hindex1(9)
callq .move_064_128_r10_r11_xmm3: Hindex8(9)
callq .move_256_128_ymm3_xmm12_xmm13: Hindex8(9)
callq .move_128_256_xmm12_xmm13_ymm1: Hindex8(9)
vsqrtps %ymm4, %ymm7: Hindex0(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
Formula:

%ymm1  : (let ((a!1 (concat (sqrt_single ((_ extract 95 64) TMP_BV_128_1))
                   (concat (sqrt_single ((_ extract 63 32) TMP_BV_128_2))
                           (sqrt_single ((_ extract 31 0) TMP_BV_128_3))))))
  (concat ((_ extract 255 128) %ymm1)
          (concat (sqrt_single ((_ extract 127 96) TMP_BV_128_0)) a!1)))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_1 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_2 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_3 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
