code: seta (%rax)

  maybe read:      { %rax %cf %zf }
  must read:       { %rax %cf %zf }
  maybe write:     { }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

seta (%rax): Hindex0(10)
seta (%rax): Hindex0(10)
callq .read_zf_into_rbx: Hindex8(9)
callq .read_cf_into_rbx: Hindex8(9)
movq $0xffffffffffffffff, %r9: Hindex5(9)
xorq %rcx, %rcx: Hindex1(9)
adcb %r9b, %bl: Hindex2(9)
movq $0x4, %rax: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
movq $0xffffffffffffffff, %r9: Hindex5(9)
xorq %rcx, %rcx: Hindex1(9)
adcb %r9b, %bl: Hindex2(9)
cmoveq %rcx, %rbx: Hindex3(9)
movb %ah, %cl: Hindex5(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movq %rbp, %rbx: Hindex5(9)
Formula:

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax was updated to
    (ite (= (ite %zf #x00 #xff) #x00) #x00 (ite %cf #x00 #x01)) (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
