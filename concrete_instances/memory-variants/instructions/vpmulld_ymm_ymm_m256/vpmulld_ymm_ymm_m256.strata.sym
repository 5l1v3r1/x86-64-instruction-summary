code: vpmulld (%rax), %ymm2, %ymm1

  maybe read:      { %rax %ymm2 }
  must read:       { %rax %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (concat (mult (sign-extend-64 <%ymm2|256>[255:224]) (sign-extend-64 <TMP_BV_256_0|256>[255:224]))[31:0] (concat (mult (sign-extend-64 <%ymm2|256>[223:192]) (sign-extend-64 <TMP_BV_256_0|256>[223:192]))[31:0] (concat (mult (sign-extend-64 <%ymm2|256>[191:160]) (sign-extend-64 <TMP_BV_256_0|256>[191:160]))[31:0] (concat (mult (sign-extend-64 <%ymm2|256>[159:128]) (sign-extend-64 <TMP_BV_256_0|256>[159:128]))[31:0] (concat (mult (sign-extend-64 <%ymm2|256>[127:96]) (sign-extend-64 <TMP_BV_256_0|256>[127:96]))[31:0] (concat (mult (sign-extend-64 <%ymm2|256>[95:64]) (sign-extend-64 <TMP_BV_256_0|256>[95:64]))[31:0] (concat (mult (sign-extend-64 <%ymm2|256>[63:32]) (sign-extend-64 <TMP_BV_256_0|256>[63:32]))[31:0] (mult (sign-extend-64 <%ymm2|256>[31:0]) (sign-extend-64 <TMP_BV_256_0|256>[31:0]))[31:0])))))))

Information about memory reads:
  Value <TMP_BV_256_0|256> (32 bytes)
    was read at address <%rax|64>.

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : (or <sigsegv> (and (and (not <sigfpe>) (not <sigbus>)) FALSE))
