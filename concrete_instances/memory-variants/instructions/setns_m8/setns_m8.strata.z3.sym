code: setns (%rax)

  maybe read:      { %rax %sf }
  must read:       { %rax %sf }
  maybe write:     { }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

setns (%rax): Hindex0(10)
setns (%rax): Hindex0(10)
callq .read_sf_into_rcx: Hindex8(9)
callq .move_032_016_ecx_r12w_r13w: Hindex8(9)
callq .move_016_032_r12w_r13w_edx: Hindex8(9)
callq .move_032_016_edx_r10w_r11w: Hindex8(9)
xorq %rax, %rax: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %ax: Hindex2(9)
popcntq %rax, %rbx: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
callq .read_zf_into_rbx: Hindex8(9)
Formula:

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax was updated to
    (ite (= (ite %sf #x0000000000000001 #x0000000000000000) #x0000000000000000)
     #x01
     #x00) (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
