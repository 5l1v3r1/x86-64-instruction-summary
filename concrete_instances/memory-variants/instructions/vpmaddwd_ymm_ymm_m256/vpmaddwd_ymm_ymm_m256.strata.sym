code: vpmaddwd (%rax), %ymm2, %ymm1

  maybe read:      { %rax %ymm2 }
  must read:       { %rax %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (concat (plus (mult (sign-extend-32 <TMP_BV_256_0|256>[239:224]) (sign-extend-32 <%ymm2|256>[239:224])) (mult (sign-extend-32 <TMP_BV_256_0|256>[255:240]) (sign-extend-32 <%ymm2|256>[255:240]))) (concat (plus (mult (sign-extend-32 <TMP_BV_256_0|256>[207:192]) (sign-extend-32 <%ymm2|256>[207:192])) (mult (sign-extend-32 <TMP_BV_256_0|256>[223:208]) (sign-extend-32 <%ymm2|256>[223:208]))) (concat (plus (mult (sign-extend-32 <TMP_BV_256_0|256>[175:160]) (sign-extend-32 <%ymm2|256>[175:160])) (mult (sign-extend-32 <TMP_BV_256_0|256>[191:176]) (sign-extend-32 <%ymm2|256>[191:176]))) (concat (plus (mult (sign-extend-32 <TMP_BV_256_0|256>[143:128]) (sign-extend-32 <%ymm2|256>[143:128])) (mult (sign-extend-32 <TMP_BV_256_0|256>[159:144]) (sign-extend-32 <%ymm2|256>[159:144]))) (concat (plus (mult (sign-extend-32 <TMP_BV_256_0|256>[111:96]) (sign-extend-32 <%ymm2|256>[111:96])) (mult (sign-extend-32 <TMP_BV_256_0|256>[127:112]) (sign-extend-32 <%ymm2|256>[127:112]))) (concat (plus (mult (sign-extend-32 <TMP_BV_256_0|256>[79:64]) (sign-extend-32 <%ymm2|256>[79:64])) (mult (sign-extend-32 <TMP_BV_256_0|256>[95:80]) (sign-extend-32 <%ymm2|256>[95:80]))) (concat (plus (mult (sign-extend-32 <TMP_BV_256_0|256>[47:32]) (sign-extend-32 <%ymm2|256>[47:32])) (mult (sign-extend-32 <TMP_BV_256_0|256>[63:48]) (sign-extend-32 <%ymm2|256>[63:48]))) (plus (mult (sign-extend-32 <TMP_BV_256_0|256>[15:0]) (sign-extend-32 <%ymm2|256>[15:0])) (mult (sign-extend-32 <TMP_BV_256_0|256>[31:16]) (sign-extend-32 <%ymm2|256>[31:16]))))))))))

Information about memory reads:
  Value <TMP_BV_256_0|256> (32 bytes)
    was read at address <%rax|64>.

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : (or <sigsegv> (and (and (not <sigfpe>) (not <sigbus>)) FALSE))
