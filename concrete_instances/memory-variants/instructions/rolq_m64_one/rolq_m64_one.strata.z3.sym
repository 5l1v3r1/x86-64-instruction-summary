code: rolq $0x1, (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %cf %of }
  must write:      { %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

rolq $0x1, (%rbx): Hindex0(10)
rolq $0x1, (%rbx): Hindex0(10)
callq .move_064_032_rbx_r12d_r13d: Hindex8(9)
callq .move_032_064_r12d_r13d_rcx: Hindex8(9)
movq %rcx, %r9: Hindex5(9)
orq %rbx, %rbx: Hindex1(9)
adcq %rcx, %rbx: Hindex2(9)
callq .move_016_008_bx_r10b_r11b: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_008_016_r10b_r11b_cx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
adcq %rbx, %rbx: Hindex2(9)
Formula:

%cf    : (let ((a!1 (= ((_ extract 64 64)
                (bvadd (concat #b0 TMP_BV_64_0) (concat #b0 TMP_BV_64_1)))
              #b1)))
(let ((a!2 (bvadd (ite a!1
                       (bvadd (concat #b0 TMP_BV_64_2)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 TMP_BV_64_2))
                  (concat #b0 TMP_BV_64_3))))
  (= ((_ extract 64 64) a!2) #b1)))
%of    : (let ((a!1 (= ((_ extract 64 64)
                (bvadd (concat #b0 TMP_BV_64_0) (concat #b0 TMP_BV_64_1)))
              #b1)))
(let ((a!2 (bvadd (ite a!1
                       (bvadd (concat #b0 TMP_BV_64_2)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 TMP_BV_64_2))
                  (concat #b0 TMP_BV_64_3))))
(let ((a!3 (not (= (= ((_ extract 63 63) TMP_BV_64_4) #b1)
                   (= ((_ extract 63 63) a!2) #b1)))))
  (and (= (= ((_ extract 63 63) TMP_BV_64_4) #b1)
          (= ((_ extract 63 63) TMP_BV_64_5) #b1))
       a!3))))

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_1 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_2 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_3 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_4 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_5 (8 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (let ((a!1 (= ((_ extract 64 64)
                (bvadd (concat #b0 TMP_BV_64_0) (concat #b0 TMP_BV_64_1)))
              #b1)))
(let ((a!2 (bvadd (ite a!1
                       (bvadd (concat #b0 TMP_BV_64_2)
                              #b00000000000000000000000000000000000000000000000000000000000000001)
                       (concat #b0 TMP_BV_64_2))
                  (concat #b0 TMP_BV_64_3))))
  ((_ extract 63 0) a!2))) (8 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
