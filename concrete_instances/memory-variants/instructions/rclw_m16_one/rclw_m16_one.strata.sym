code: rclw $0x1, (%rax)

  maybe read:      { %rax %cf }
  must read:       { %rax %cf }
  maybe write:     { %cf %of }
  must write:      { %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

rclw $0x1, (%rax): Hindex0(10)
rclw $0x1, (%rax): Hindex0(10)
rclw $0x1, %bx: Hindex7(9)
Formula:

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ TMP_BV_16_1 rot_left 0x1₁₇)[16:16] = 0x1₁
%of    : true ∧ (((%cf ? 0x1₁ : 0x0₁) ∘ TMP_BV_16_1 rot_left 0x1₁₇)[16:16] = 0x1₁ ⊕ ((%cf ? 0x1₁ : 0x0₁) ∘ TMP_BV_16_1 rot_left 0x1₁₇)[15:15] = 0x1₁) ∨ false ∧ (true ∧ %of ∨ false ∧ TMP_BOOL_0)

Information about memory reads:
  Value TMP_BV_16_0 (2 bytes)
    was read at address %rax.
  Value TMP_BV_16_1 (2 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax was updated to
    ((%cf ? 0x1₁ : 0x0₁) ∘ TMP_BV_16_1 rot_left 0x1₁₇)[15:0] (2 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv ∨ !sigfpe ∧ !sigbus ∧ false
