code: vfnmadd132sd (%rbx), %xmm2, %xmm1

  maybe read:      { %rbx %xmm1 %xmm2 }
  must read:       { %rbx %xmm1 %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

vfnmadd132sd (%rbx), %xmm2, %xmm1: Hindex0(10)
vfnmadd132sd (%rbx), %xmm2, %xmm1: Hindex0(10)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
callq .move_128_064_xmm1_r8_r9: Hindex8(9)
xorq %r8, %r12: Hindex1(9)
xorq %r9, %r13: Hindex1(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm3_r10_r11: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
orq %r9, %r11: Hindex1(9)
orq %r8, %r10: Hindex1(9)
callq .move_064_128_r10_r11_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm3_r12_r13: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
xorq %r13, %r9: Hindex1(9)
xorq %r12, %r8: Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
vmaxps %ymm3, %ymm11, %ymm1: Hindex0(9)
vmaxpd %ymm5, %ymm11, %ymm1: Hindex0(9)
vfnmadd132pd %ymm3, %ymm1, %ymm2: Hindex1(9)
callq .move_256_128_ymm2_xmm10_xmm11: Hindex8(9)
callq .move_128_256_xmm10_xmm11_ymm1: Hindex8(9)
callq .move_128_64_xmm2_xmm8_xmm9: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm3_r8_r9: Hindex8(9)
callq .move_128_064_xmm2_r10_r11: Hindex8(9)
vzeroall : Hindex1(9)
movq %r8, %r11: Hindex5(9)
callq .move_064_128_r10_r11_xmm1: Hindex8(9)
Formula:

%ymm1  : (let ((a!1 (vfnmadd132_double
             (bvxor #x0000000000000000
                    (bvor ((_ extract 63 0) %ymm1) #x0000000000000000))
             ((_ extract 63 0) %ymm2)
             TMP_BV_64_0)))
(let ((a!2 (concat (bvxor #x0000000000000000
                          (bvor ((_ extract 127 64) %ymm1) #x0000000000000000))
                   a!1)))
  (concat #x00000000000000000000000000000000 a!2)))

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
