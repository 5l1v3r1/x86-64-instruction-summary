code: rcrw $0x1, (%rax)

  maybe read:      { %rax %cf }
  must read:       { %rax %cf }
  maybe write:     { %cf %of }
  must write:      { %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : (== (ror (concat (if <%cf> then <0x1|1> else <0x0|1>) <TMP_BV_16_0|16>) <0x1|17>)[16:16] <0x1|1>)
%of    : (or (and TRUE (xor (== (ror (concat (if <%cf> then <0x1|1> else <0x0|1>) <TMP_BV_16_0|16>) <0x1|17>)[15:15] <0x1|1>) (== (ror (concat (if <%cf> then <0x1|1> else <0x0|1>) <TMP_BV_16_0|16>) <0x1|17>)[14:14] <0x1|1>))) (and FALSE (or (and TRUE <%of>) (and FALSE <TMP_BOOL_0>))))

Information about memory reads:
  Value <TMP_BV_16_0|16> (2 bytes)
    was read at address <%rax|64>.

Information about memory writes:
  Address <%rax|64> was updated to
    (ror (concat (if <%cf> then <0x1|1> else <0x0|1>) <TMP_BV_16_0|16>) <0x1|17>)[15:0] (2 bytes).

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : (or (or <sigsegv> (and (and (not <sigfpe>) (not <sigbus>)) FALSE)) (and (and (not <sigfpe>) (not <sigbus>)) FALSE))
