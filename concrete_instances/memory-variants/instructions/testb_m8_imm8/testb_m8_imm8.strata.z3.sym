code: testb $0x0, (%rax)

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

testb $0x0, (%rax): Hindex0(10)
testb $0x0, (%rax): Hindex0(10)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movslq %edx, %rbx: Hindex5(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movswq %cx, %r11: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
orq %r11, %r8: Hindex1(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .set_szp_for_ebx: Hindex8(9)
callq .move_032_016_ecx_r12w_r13w: Hindex8(9)
callq .move_016_032_r12w_r13w_ecx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
Formula:

%cf    : false
%pf    : (let ((a!1 (= (bvxor (bvor ((_ extract 0 0) TMP_BV_8_0) #b0)
                     #b0
                     ((_ extract 0 0) TMP_BV_8_1))
              #b1))
      (a!2 (= (bvxor (bvor ((_ extract 1 1) TMP_BV_8_2) #b0)
                     #b0
                     ((_ extract 1 1) TMP_BV_8_3))
              #b1))
      (a!3 (= (bvxor (bvor ((_ extract 2 2) TMP_BV_8_4) #b0)
                     #b0
                     ((_ extract 2 2) TMP_BV_8_5))
              #b1))
      (a!4 (= (bvxor (bvor ((_ extract 3 3) TMP_BV_8_6) #b0)
                     #b0
                     ((_ extract 3 3) TMP_BV_8_7))
              #b1))
      (a!5 (= (bvxor (bvor ((_ extract 4 4) TMP_BV_8_8) #b0)
                     #b0
                     ((_ extract 4 4) TMP_BV_8_9))
              #b1))
      (a!6 (= (bvxor (bvor ((_ extract 5 5) TMP_BV_8_10) #b0)
                     #b0
                     ((_ extract 5 5) TMP_BV_8_11))
              #b1))
      (a!7 (= (bvxor (bvor ((_ extract 6 6) TMP_BV_8_12) #b0)
                     #b0
                     ((_ extract 6 6) TMP_BV_8_13))
              #b1))
      (a!8 (= (bvxor (bvor ((_ extract 7 7) TMP_BV_8_14) #b0)
                     #b0
                     ((_ extract 7 7) TMP_BV_8_15))
              #b1)))
  (not (xor a!1 a!2 a!3 a!4 a!5 a!6 a!7 a!8)))
%af    : TMP_BOOL_10
%zf    : (let ((a!1 (bvxor (bvor ((_ extract 31 0) ((_ sign_extend 56) TMP_BV_8_16))
                        #x00000000)
                  #x00000000
                  ((_ extract 31 0) ((_ sign_extend 56) TMP_BV_8_16)))))
  (= a!1 #x00000000))
%sf    : (let ((a!1 (bvxor (bvor ((_ extract 31 31) ((_ sign_extend 56) TMP_BV_8_16))
                        #b0)
                  #b0
                  ((_ extract 31 31) ((_ sign_extend 56) TMP_BV_8_16)))))
  (= a!1 #b1))
%of    : false

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_1 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_2 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_3 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_4 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_5 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_6 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_7 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_8 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_9 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_10 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_11 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_12 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_13 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_14 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_15 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_16 (1 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
