code: adcw %bx, (%rax)

  maybe read:      { %rax %bx %cf }
  must read:       { %rax %bx %cf }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Base Instruction!!
adcw %bx, (%rax): Hindex0(10)
Base Instruction!!
adcw %bx, (%rax): Hindex0(10)
adcw %cx, %bx: Hindex2(9)
Formula:

%cf    : (let ((a!1 (ite %cf
                (bvadd (concat #b0 ((_ extract 15 0) %rbx)) #b00000000000000001)
                (concat #b0 ((_ extract 15 0) %rbx)))))
  (= ((_ extract 16 16) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1))
%pf    : (let ((a!1 (ite %cf
                (bvadd (concat #b0 ((_ extract 15 0) %rbx)) #b00000000000000001)
                (concat #b0 ((_ extract 15 0) %rbx)))))
(let ((a!2 (= ((_ extract 0 0) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1))
      (a!3 (= ((_ extract 1 1) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1))
      (a!4 (= ((_ extract 2 2) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1))
      (a!5 (= ((_ extract 3 3) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1))
      (a!6 (= ((_ extract 4 4) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1))
      (a!7 (= ((_ extract 5 5) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1))
      (a!8 (= ((_ extract 6 6) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1))
      (a!9 (= ((_ extract 7 7) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1)))
  (not (xor a!2 a!3 a!4 a!5 a!6 a!7 a!8 a!9))))
%af    : (let ((a!1 ((_ extract 4 4)
             (bvadd (concat #b0 ((_ extract 3 0) %rbx))
                    (concat #b0 ((_ extract 3 0) TMP_BV_16_1))))))
  (= a!1 #b1))
%zf    : (let ((a!1 (ite %cf
                (bvadd (concat #b0 ((_ extract 15 0) %rbx)) #b00000000000000001)
                (concat #b0 ((_ extract 15 0) %rbx)))))
  (= ((_ extract 15 0) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #x0000))
%sf    : (let ((a!1 (ite %cf
                (bvadd (concat #b0 ((_ extract 15 0) %rbx)) #b00000000000000001)
                (concat #b0 ((_ extract 15 0) %rbx)))))
  (= ((_ extract 15 15) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1))
%of    : (let ((a!1 (ite %cf
                (bvadd (concat #b0 ((_ extract 15 0) %rbx)) #b00000000000000001)
                (concat #b0 ((_ extract 15 0) %rbx)))))
(let ((a!2 (= ((_ extract 15 15) (bvadd a!1 (concat #b0 TMP_BV_16_1))) #b1)))
(let ((a!3 (not (= (= ((_ extract 15 15) %rbx) #b1) a!2))))
  (and (= (= ((_ extract 15 15) %rbx) #b1)
          (= ((_ extract 15 15) TMP_BV_16_1) #b1))
       a!3))))

Information about memory reads:
  Value TMP_BV_16_0 (2 bytes)
    was read at address %rax.
  Value TMP_BV_16_1 (2 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax was updated to
    (let ((a!1 (ite %cf
                (bvadd (concat #b0 ((_ extract 15 0) %rbx)) #b00000000000000001)
                (concat #b0 ((_ extract 15 0) %rbx)))))
  ((_ extract 15 0) (bvadd a!1 (concat #b0 TMP_BV_16_1)))) (2 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
