code: rolb $0x1, (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %cf %of }
  must write:      { %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

rolb $0x1, (%rbx): Hindex0(10)
rolb $0x1, (%rbx): Hindex0(10)
xorq %rax, %rax: Hindex1(9)
callq .read_pf_into_rbx: Hindex8(9)
callq .move_032_016_ebx_r8w_r9w: Hindex8(9)
callq .move_r8b_to_byte_2_of_rbx: Hindex8(9)
callq .set_szp_for_bx: Hindex8(9)
callq .read_zf_into_rbx: Hindex8(9)
movb %bl, %ah: Hindex5(9)
callq .set_cf: Hindex8(9)
callq .read_cf_into_rbx: Hindex8(9)
movb %bl, %ah: Hindex5(9)
callq .read_cf_into_rcx: Hindex8(9)
cmoveq %rcx, %rax: Hindex3(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
adcb %al, %al: Hindex2(9)
adcb %bl, %bl: Hindex2(9)
Formula:

%cf    : (let ((a!1 (= ((_ extract 8 8)
                (bvadd (concat #b0 TMP_BV_8_1) (concat #b0 TMP_BV_8_1)))
              #b1)))
(let ((a!2 (bvadd (ite a!1
                       (bvadd (concat #b0 TMP_BV_8_1) #b000000001)
                       (concat #b0 TMP_BV_8_1))
                  (concat #b0 TMP_BV_8_1))))
  (= ((_ extract 8 8) a!2) #b1)))
%of    : (let ((a!1 (= ((_ extract 8 8)
                (bvadd (concat #b0 TMP_BV_8_1) (concat #b0 TMP_BV_8_1)))
              #b1)))
(let ((a!2 (bvadd (ite a!1
                       (bvadd (concat #b0 TMP_BV_8_1) #b000000001)
                       (concat #b0 TMP_BV_8_1))
                  (concat #b0 TMP_BV_8_1))))
(let ((a!3 (not (= (= ((_ extract 7 7) TMP_BV_8_2) #b1)
                   (= ((_ extract 7 7) a!2) #b1)))))
  (and (= (= ((_ extract 7 7) TMP_BV_8_2) #b1)
          (= ((_ extract 7 7) TMP_BV_8_3) #b1))
       a!3))))

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_1 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_2 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_3 (1 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (let ((a!1 (= ((_ extract 8 8)
                (bvadd (concat #b0 TMP_BV_8_1) (concat #b0 TMP_BV_8_1)))
              #b1)))
(let ((a!2 (bvadd (ite a!1
                       (bvadd (concat #b0 TMP_BV_8_1) #b000000001)
                       (concat #b0 TMP_BV_8_1))
                  (concat #b0 TMP_BV_8_1))))
  ((_ extract 7 0) a!2))) (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
