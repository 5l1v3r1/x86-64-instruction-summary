code: shrxq %rcx, (%rax), %rbx

  maybe read:      { %rax %rcx }
  must read:       { %rax %rcx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { bmi2 }

Opcode: shrxq_r64_r64_r64 Reason: 1
Opcode: shrxq_r64_m64_r64 Reason: 2
shrxq %rcx, (%rax), %rbx: Hindex0(10)
Opcode: shrxq_r64_r64_r64 Reason: 1
Opcode: shrxq_r64_m64_r64 Reason: 2
shrxq %rcx, (%rax), %rbx: Hindex0(10)
movq %rcx, %rbx: Hindex5(9)
callq .clear_cf: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movsbq %r15b, %rcx: Hindex5(9)
adcb %cl, %r13b: Hindex2(9)
movslq %r13d, %rbx: Hindex5(9)
callq .move_016_008_bx_r10b_r11b: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_008_016_r10b_r11b_cx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
shrq %cl, %rbx: Hindex7(9)
Formula:

%rbx   : (TMP_BV_64_0 ∘ 0x0₁ >> 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[64:1]

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
