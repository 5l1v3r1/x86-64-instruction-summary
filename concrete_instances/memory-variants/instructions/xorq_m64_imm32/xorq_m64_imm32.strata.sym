code: xorq $0x0, (%rax)

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : FALSE
%pf    : (not (xor (xor (xor (xor (xor (xor (xor (== (xor <TMP_BV_64_1|64>[0:0] <0x0|1>) <0x1|1>) (== (xor <TMP_BV_64_1|64>[1:1] <0x0|1>) <0x1|1>)) (== (xor <TMP_BV_64_1|64>[2:2] <0x0|1>) <0x1|1>)) (== (xor <TMP_BV_64_1|64>[3:3] <0x0|1>) <0x1|1>)) (== (xor <TMP_BV_64_1|64>[4:4] <0x0|1>) <0x1|1>)) (== (xor <TMP_BV_64_1|64>[5:5] <0x0|1>) <0x1|1>)) (== (xor <TMP_BV_64_1|64>[6:6] <0x0|1>) <0x1|1>)) (== (xor <TMP_BV_64_1|64>[7:7] <0x0|1>) <0x1|1>)))
%af    : <TMP_BOOL_1>
%zf    : (== (xor <TMP_BV_64_1|64> <0x0|64>) <0x0|64>)
%sf    : (== (xor <TMP_BV_64_1|64>[63:63] <0x0|1>) <0x1|1>)
%of    : FALSE

Information about memory reads:
  Value <TMP_BV_64_0|64> (8 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_64_1|64> (8 bytes)
    was read at address <%rax|64>.

Information about memory writes:
  Address <%rax|64> was updated to
    (xor <TMP_BV_64_0|64> <0x0|64>) (8 bytes).

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : (or <sigsegv> (and (and (not <sigfpe>) (not <sigbus>)) FALSE))
