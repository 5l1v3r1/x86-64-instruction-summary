code: vpshuflw $0x0, (%rax), %xmm1

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

vpshuflw $0x0, (%rax), %xmm1: Hindex2(10)
vpshuflw $0x0, (%rax), %xmm1: Hindex2(10)
Formula:

%ymm1  : (let ((a!1 (concat ((_ extract 15 0)
                     (bvlshr TMP_BV_128_0 #x00000000000000000000000000000000))
                   (concat ((_ extract 15 0)
                             (bvlshr TMP_BV_128_0
                                     #x00000000000000000000000000000000))
                           ((_ extract 15 0)
                             (bvlshr TMP_BV_128_0
                                     #x00000000000000000000000000000000))))))
(let ((a!2 (concat ((_ extract 127 64) TMP_BV_128_0)
                   (concat ((_ extract 15 0)
                             (bvlshr TMP_BV_128_0
                                     #x00000000000000000000000000000000))
                           a!1))))
  (concat #x00000000000000000000000000000000 a!2)))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
