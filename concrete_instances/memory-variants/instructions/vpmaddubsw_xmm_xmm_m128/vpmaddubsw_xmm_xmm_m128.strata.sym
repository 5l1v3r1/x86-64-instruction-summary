code: vpmaddubsw (%rax), %xmm2, %xmm1

  maybe read:      { %rax %xmm2 }
  must read:       { %rax %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

vpmaddubsw (%rax), %xmm2, %xmm1: Hindex1(10)
vpmaddubsw (%rax), %xmm2, %xmm1: Hindex1(10)
Formula:

%ymm1  : 0x0₁₂₈ ∘ ((sign-extend-32(sign-extend-16(TMP_BV_128_0[119:112]) * 0x0₈ ∘ %ymm2[119:112]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[127:120]) * 0x0₈ ∘ %ymm2[127:120]) > 0x7fff₃₂ ? 0x7fff₁₆ : sign-extend-32(sign-extend-16(TMP_BV_128_0[119:112]) * 0x0₈ ∘ %ymm2[119:112]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[127:120]) * 0x0₈ ∘ %ymm2[127:120]) < 0xffffffffffff8000₃₂ ? 0xffffffffffff8000₁₆ : (sign-extend-32(sign-extend-16(TMP_BV_128_0[119:112]) * 0x0₈ ∘ %ymm2[119:112]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[127:120]) * 0x0₈ ∘ %ymm2[127:120]))[15:0]) ∘ ((sign-extend-32(sign-extend-16(TMP_BV_128_0[103:96]) * 0x0₈ ∘ %ymm2[103:96]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[111:104]) * 0x0₈ ∘ %ymm2[111:104]) > 0x7fff₃₂ ? 0x7fff₁₆ : sign-extend-32(sign-extend-16(TMP_BV_128_0[103:96]) * 0x0₈ ∘ %ymm2[103:96]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[111:104]) * 0x0₈ ∘ %ymm2[111:104]) < 0xffffffffffff8000₃₂ ? 0xffffffffffff8000₁₆ : (sign-extend-32(sign-extend-16(TMP_BV_128_0[103:96]) * 0x0₈ ∘ %ymm2[103:96]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[111:104]) * 0x0₈ ∘ %ymm2[111:104]))[15:0]) ∘ ((sign-extend-32(sign-extend-16(TMP_BV_128_0[87:80]) * 0x0₈ ∘ %ymm2[87:80]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[95:88]) * 0x0₈ ∘ %ymm2[95:88]) > 0x7fff₃₂ ? 0x7fff₁₆ : sign-extend-32(sign-extend-16(TMP_BV_128_0[87:80]) * 0x0₈ ∘ %ymm2[87:80]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[95:88]) * 0x0₈ ∘ %ymm2[95:88]) < 0xffffffffffff8000₃₂ ? 0xffffffffffff8000₁₆ : (sign-extend-32(sign-extend-16(TMP_BV_128_0[87:80]) * 0x0₈ ∘ %ymm2[87:80]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[95:88]) * 0x0₈ ∘ %ymm2[95:88]))[15:0]) ∘ ((sign-extend-32(sign-extend-16(TMP_BV_128_0[71:64]) * 0x0₈ ∘ %ymm2[71:64]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[79:72]) * 0x0₈ ∘ %ymm2[79:72]) > 0x7fff₃₂ ? 0x7fff₁₆ : sign-extend-32(sign-extend-16(TMP_BV_128_0[71:64]) * 0x0₈ ∘ %ymm2[71:64]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[79:72]) * 0x0₈ ∘ %ymm2[79:72]) < 0xffffffffffff8000₃₂ ? 0xffffffffffff8000₁₆ : (sign-extend-32(sign-extend-16(TMP_BV_128_0[71:64]) * 0x0₈ ∘ %ymm2[71:64]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[79:72]) * 0x0₈ ∘ %ymm2[79:72]))[15:0]) ∘ ((sign-extend-32(sign-extend-16(TMP_BV_128_0[55:48]) * 0x0₈ ∘ %ymm2[55:48]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[63:56]) * 0x0₈ ∘ %ymm2[63:56]) > 0x7fff₃₂ ? 0x7fff₁₆ : sign-extend-32(sign-extend-16(TMP_BV_128_0[55:48]) * 0x0₈ ∘ %ymm2[55:48]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[63:56]) * 0x0₈ ∘ %ymm2[63:56]) < 0xffffffffffff8000₃₂ ? 0xffffffffffff8000₁₆ : (sign-extend-32(sign-extend-16(TMP_BV_128_0[55:48]) * 0x0₈ ∘ %ymm2[55:48]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[63:56]) * 0x0₈ ∘ %ymm2[63:56]))[15:0]) ∘ ((sign-extend-32(sign-extend-16(TMP_BV_128_0[39:32]) * 0x0₈ ∘ %ymm2[39:32]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[47:40]) * 0x0₈ ∘ %ymm2[47:40]) > 0x7fff₃₂ ? 0x7fff₁₆ : sign-extend-32(sign-extend-16(TMP_BV_128_0[39:32]) * 0x0₈ ∘ %ymm2[39:32]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[47:40]) * 0x0₈ ∘ %ymm2[47:40]) < 0xffffffffffff8000₃₂ ? 0xffffffffffff8000₁₆ : (sign-extend-32(sign-extend-16(TMP_BV_128_0[39:32]) * 0x0₈ ∘ %ymm2[39:32]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[47:40]) * 0x0₈ ∘ %ymm2[47:40]))[15:0]) ∘ ((sign-extend-32(sign-extend-16(TMP_BV_128_0[23:16]) * 0x0₈ ∘ %ymm2[23:16]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[31:24]) * 0x0₈ ∘ %ymm2[31:24]) > 0x7fff₃₂ ? 0x7fff₁₆ : sign-extend-32(sign-extend-16(TMP_BV_128_0[23:16]) * 0x0₈ ∘ %ymm2[23:16]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[31:24]) * 0x0₈ ∘ %ymm2[31:24]) < 0xffffffffffff8000₃₂ ? 0xffffffffffff8000₁₆ : (sign-extend-32(sign-extend-16(TMP_BV_128_0[23:16]) * 0x0₈ ∘ %ymm2[23:16]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[31:24]) * 0x0₈ ∘ %ymm2[31:24]))[15:0]) ∘ (sign-extend-32(sign-extend-16(TMP_BV_128_0[7:0]) * 0x0₈ ∘ %ymm2[7:0]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[15:8]) * 0x0₈ ∘ %ymm2[15:8]) > 0x7fff₃₂ ? 0x7fff₁₆ : sign-extend-32(sign-extend-16(TMP_BV_128_0[7:0]) * 0x0₈ ∘ %ymm2[7:0]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[15:8]) * 0x0₈ ∘ %ymm2[15:8]) < 0xffffffffffff8000₃₂ ? 0xffffffffffff8000₁₆ : (sign-extend-32(sign-extend-16(TMP_BV_128_0[7:0]) * 0x0₈ ∘ %ymm2[7:0]) + sign-extend-32(sign-extend-16(TMP_BV_128_0[15:8]) * 0x0₈ ∘ %ymm2[15:8]))[15:0]))))))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv ∨ !sigfpe ∧ !sigbus ∧ false
