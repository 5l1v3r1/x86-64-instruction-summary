code: andb %ah, (%rbx)

  maybe read:      { %ah %rbx }
  must read:       { %ah %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

andb %ah, (%rbx): Hindex0(10)
andb %ah, (%rbx): Hindex0(10)
xorq %rdx, %rdx: Hindex1(9)
adcb %bl, %dl: Hindex2(9)
movslq %ebx, %rax: Hindex5(9)
movq $0xffffffffffffffff, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movq $0x20, %rbx: Hindex5(9)
callq .move_016_008_cx_r12b_r13b: Hindex8(9)
callq .move_008_016_r12b_r13b_bx: Hindex8(9)
callq .move_064_032_rbx_r8d_r9d: Hindex8(9)
movq $0xffffffffffffffc0, %rbx: Hindex5(9)
movswq %cx, %rbx: Hindex5(9)
movswq %bx, %r9: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
movb %cl, %bh: Hindex5(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
callq .read_cf_into_rcx: Hindex8(9)
movb %cl, %ah: Hindex5(9)
movswq %bx, %rdx: Hindex5(9)
xorq %rbp, %rdx: Hindex1(9)
movslq %edx, %rbx: Hindex5(9)
callq .set_szp_for_bl: Hindex8(9)
callq .set_szp_for_bl: Hindex8(9)
movb %bl, %ch: Hindex5(9)
movb %ch, %cl: Hindex5(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
callq .clear_cf: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movsbq %r15b, %rcx: Hindex5(9)
adcb %cl, %r13b: Hindex2(9)
movslq %r13d, %rbx: Hindex5(9)
movb %cl, %ah: Hindex5(9)
movb %ah, %cl: Hindex5(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
adcb %cl, %bl: Hindex2(9)
movb %bl, %bh: Hindex5(9)
movswq %cx, %rdx: Hindex5(9)
callq .move_016_008_bx_r10b_r11b: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_008_016_r10b_r11b_cx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
movswq %cx, %rax: Hindex5(9)
orq %rax, %rdx: Hindex1(9)
movslq %edx, %rbx: Hindex5(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
callq .read_cf_into_rcx: Hindex8(9)
movb %cl, %ah: Hindex5(9)
movswq %bx, %rdx: Hindex5(9)
xorq %rbp, %rdx: Hindex1(9)
movslq %edx, %rbx: Hindex5(9)
callq .set_szp_for_bl: Hindex8(9)
Formula:

%cf    : false
%pf    : (let ((a!1 (bvxor ((_ extract 0 0) TMP_BV_8_2)
                  #b1
                  (bvor ((_ extract 8 8) %rax)
                        (bvxor ((_ extract 0 0) TMP_BV_8_3) #b1))))
      (a!2 (bvxor ((_ extract 1 1) TMP_BV_8_4)
                  #b1
                  (bvor ((_ extract 9 9) %rax)
                        (bvxor ((_ extract 1 1) TMP_BV_8_5) #b1))))
      (a!3 (bvxor ((_ extract 2 2) TMP_BV_8_6)
                  #b1
                  (bvor ((_ extract 10 10) %rax)
                        (bvxor ((_ extract 2 2) TMP_BV_8_7) #b1))))
      (a!4 (bvxor ((_ extract 3 3) TMP_BV_8_8)
                  #b1
                  (bvor ((_ extract 11 11) %rax)
                        (bvxor ((_ extract 3 3) TMP_BV_8_9) #b1))))
      (a!5 (bvxor ((_ extract 4 4) TMP_BV_8_10)
                  #b1
                  (bvor ((_ extract 12 12) %rax)
                        (bvxor ((_ extract 4 4) TMP_BV_8_11) #b1))))
      (a!6 (bvxor ((_ extract 5 5) TMP_BV_8_12)
                  #b1
                  (bvor ((_ extract 13 13) %rax)
                        (bvxor ((_ extract 5 5) TMP_BV_8_13) #b1))))
      (a!7 (bvxor ((_ extract 6 6) TMP_BV_8_14)
                  #b1
                  (bvor ((_ extract 14 14) %rax)
                        (bvxor ((_ extract 6 6) TMP_BV_8_15) #b1))))
      (a!8 (bvxor ((_ extract 7 7) TMP_BV_8_16)
                  #b1
                  (bvor ((_ extract 15 15) %rax)
                        (bvxor ((_ extract 7 7) TMP_BV_8_17) #b1)))))
  (not (xor (= a!1 #b1)
            (= a!2 #b1)
            (= a!3 #b1)
            (= a!4 #b1)
            (= a!5 #b1)
            (= a!6 #b1)
            (= a!7 #b1)
            (= a!8 #b1))))
%af    : TMP_BOOL_14
%zf    : (= (bvxor (bvxor TMP_BV_8_1 #xff)
          (bvor ((_ extract 15 8) %rax) (bvxor TMP_BV_8_1 #xff)))
   #x00)
%sf    : (let ((a!1 (bvxor ((_ extract 7 7) TMP_BV_8_18)
                  #b1
                  (bvor ((_ extract 15 15) %rax)
                        (bvxor ((_ extract 7 7) TMP_BV_8_19) #b1)))))
  (= a!1 #b1))
%of    : false

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_1 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_2 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_3 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_4 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_5 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_6 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_7 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_8 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_9 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_10 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_11 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_12 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_13 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_14 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_15 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_16 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_17 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_18 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_19 (1 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (bvxor (bvxor TMP_BV_8_1 #xff)
       (bvor ((_ extract 15 8) %rax) (bvxor TMP_BV_8_1 #xff))) (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
