code: vpabsd (%rax), %xmm1

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

vpabsd (%rax), %xmm1: Hindex1(10)
vpabsd (%rax), %xmm1: Hindex1(10)
Formula:

%ymm1  : (let ((a!1 (concat (ite (bvugt ((_ extract 63 32) TMP_BV_128_0) #x7fffffff)
                        (bvneg ((_ extract 63 32) TMP_BV_128_0))
                        ((_ extract 63 32) TMP_BV_128_0))
                   (ite (bvugt ((_ extract 31 0) TMP_BV_128_0) #x7fffffff)
                        (bvneg ((_ extract 31 0) TMP_BV_128_0))
                        ((_ extract 31 0) TMP_BV_128_0)))))
(let ((a!2 (concat (ite (bvugt ((_ extract 95 64) TMP_BV_128_0) #x7fffffff)
                        (bvneg ((_ extract 95 64) TMP_BV_128_0))
                        ((_ extract 95 64) TMP_BV_128_0))
                   a!1)))
(let ((a!3 (concat (ite (bvugt ((_ extract 127 96) TMP_BV_128_0) #x7fffffff)
                        (bvneg ((_ extract 127 96) TMP_BV_128_0))
                        ((_ extract 127 96) TMP_BV_128_0))
                   a!2)))
  (concat #x00000000000000000000000000000000 a!3))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
