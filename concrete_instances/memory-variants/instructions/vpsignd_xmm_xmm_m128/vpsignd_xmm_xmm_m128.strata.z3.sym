code: vpsignd (%rbx), %xmm2, %xmm1

  maybe read:      { %rbx %xmm2 }
  must read:       { %rbx %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

vpsignd (%rbx), %xmm2, %xmm1: Hindex1(10)
vpsignd (%rbx), %xmm2, %xmm1: Hindex1(10)
Formula:

%ymm1  : (let ((a!1 (ite (bvsgt ((_ extract 127 96) TMP_BV_128_0) #x00000000)
                ((_ extract 127 96) %ymm2)
                (ite (= ((_ extract 127 96) TMP_BV_128_0) #x00000000)
                     #x00000000
                     (bvneg ((_ extract 127 96) %ymm2)))))
      (a!2 (ite (bvsgt ((_ extract 95 64) TMP_BV_128_0) #x00000000)
                ((_ extract 95 64) %ymm2)
                (ite (= ((_ extract 95 64) TMP_BV_128_0) #x00000000)
                     #x00000000
                     (bvneg ((_ extract 95 64) %ymm2)))))
      (a!3 (ite (bvsgt ((_ extract 63 32) TMP_BV_128_0) #x00000000)
                ((_ extract 63 32) %ymm2)
                (ite (= ((_ extract 63 32) TMP_BV_128_0) #x00000000)
                     #x00000000
                     (bvneg ((_ extract 63 32) %ymm2)))))
      (a!4 (ite (bvsgt ((_ extract 31 0) TMP_BV_128_0) #x00000000)
                ((_ extract 31 0) %ymm2)
                (ite (= ((_ extract 31 0) TMP_BV_128_0) #x00000000)
                     #x00000000
                     (bvneg ((_ extract 31 0) %ymm2))))))
  (concat #x00000000000000000000000000000000
          (concat a!1 (concat a!2 (concat a!3 a!4)))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
