code: rorb $0x1, (%rax)

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %cf %of }
  must write:      { %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : (0x0₁ ∘ (sign-extend-64(TMP_BV_8_1 ∘ TMP_BV_8_2) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1] + 0x0₁ ∘ (sign-extend-64(TMP_BV_8_1 ∘ TMP_BV_8_2) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1])[8:8] = 0x1₁
%of    : ((sign-extend-64(TMP_BV_8_1 ∘ TMP_BV_8_2) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:8] = 0x1₁ ↔ (sign-extend-64(TMP_BV_8_1 ∘ TMP_BV_8_2) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:8] = 0x1₁) ∧ !((sign-extend-64(TMP_BV_8_1 ∘ TMP_BV_8_2) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:8] = 0x1₁ ↔ (0x0₁ ∘ (sign-extend-64(TMP_BV_8_1 ∘ TMP_BV_8_2) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1] + 0x0₁ ∘ (sign-extend-64(TMP_BV_8_1 ∘ TMP_BV_8_2) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1])[7:7] = 0x1₁)

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_1 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_2 (1 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax was updated to
    (sign-extend-64(TMP_BV_8_1 ∘ TMP_BV_8_2) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1] (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv ∨ !sigfpe ∧ !sigbus ∧ false
