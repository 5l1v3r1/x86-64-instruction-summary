code: roll $0x1, (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %cf %of }
  must write:      { %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

roll $0x1, (%rbx): Hindex0(10)
roll $0x1, (%rbx): Hindex0(10)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
Formula:

%cf    : (let ((a!1 (= ((_ extract 32 32)
                (bvadd (concat #b0 TMP_BV_32_0) (concat #b0 TMP_BV_32_0)))
              #b1)))
(let ((a!2 (bvadd (ite a!1
                       (bvadd (concat #b0 TMP_BV_32_1)
                              #b000000000000000000000000000000001)
                       (concat #b0 TMP_BV_32_1))
                  (concat #b0 TMP_BV_32_1))))
  (= ((_ extract 32 32) a!2) #b1)))
%of    : (let ((a!1 (= ((_ extract 32 32)
                (bvadd (concat #b0 TMP_BV_32_0) (concat #b0 TMP_BV_32_0)))
              #b1)))
(let ((a!2 (bvadd (ite a!1
                       (bvadd (concat #b0 TMP_BV_32_1)
                              #b000000000000000000000000000000001)
                       (concat #b0 TMP_BV_32_1))
                  (concat #b0 TMP_BV_32_1))))
(let ((a!3 (not (= (= ((_ extract 31 31) TMP_BV_32_2) #b1)
                   (= ((_ extract 31 31) a!2) #b1)))))
  (and (= (= ((_ extract 31 31) TMP_BV_32_2) #b1)
          (= ((_ extract 31 31) TMP_BV_32_3) #b1))
       a!3))))

Information about memory reads:
  Value TMP_BV_32_0 (4 bytes)
    was read at address %rbx.
  Value TMP_BV_32_1 (4 bytes)
    was read at address %rbx.
  Value TMP_BV_32_2 (4 bytes)
    was read at address %rbx.
  Value TMP_BV_32_3 (4 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (let ((a!1 (= ((_ extract 32 32)
                (bvadd (concat #b0 TMP_BV_32_0) (concat #b0 TMP_BV_32_0)))
              #b1)))
(let ((a!2 (bvadd (ite a!1
                       (bvadd (concat #b0 TMP_BV_32_1)
                              #b000000000000000000000000000000001)
                       (concat #b0 TMP_BV_32_1))
                  (concat #b0 TMP_BV_32_1))))
  ((_ extract 31 0) a!2))) (4 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
