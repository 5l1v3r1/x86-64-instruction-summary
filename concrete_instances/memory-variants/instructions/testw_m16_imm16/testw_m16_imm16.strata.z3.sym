code: testw $0x0, (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

testw $0x0, (%rbx): Hindex0(10)
testw $0x0, (%rbx): Hindex0(10)
movswq %bx, %r10: Hindex5(9)
movq $0x20, %rbx: Hindex5(9)
callq .move_016_008_cx_r12b_r13b: Hindex8(9)
callq .move_008_016_r12b_r13b_bx: Hindex8(9)
callq .move_064_032_rbx_r8d_r9d: Hindex8(9)
movq $0xffffffffffffffc0, %rbx: Hindex5(9)
movswq %cx, %rbx: Hindex5(9)
movswq %bx, %r9: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
movslq %edx, %rbx: Hindex5(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movswq %cx, %r11: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
orq %r11, %r8: Hindex1(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .set_szp_for_ebx: Hindex8(9)
callq .move_032_016_ecx_r12w_r13w: Hindex8(9)
callq .move_016_032_r12w_r13w_ecx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
Formula:

%cf    : false
%pf    : (let ((a!1 (= (bvxor (bvor #b0 ((_ extract 0 0) TMP_BV_16_0))
                     ((_ extract 0 0) TMP_BV_16_1)
                     #b0)
              #b1))
      (a!2 (= (bvxor (bvor #b0 ((_ extract 1 1) TMP_BV_16_2))
                     ((_ extract 1 1) TMP_BV_16_3)
                     #b0)
              #b1))
      (a!3 (= (bvxor (bvor #b0 ((_ extract 2 2) TMP_BV_16_4))
                     ((_ extract 2 2) TMP_BV_16_5)
                     #b0)
              #b1))
      (a!4 (= (bvxor (bvor #b0 ((_ extract 3 3) TMP_BV_16_6))
                     ((_ extract 3 3) TMP_BV_16_7)
                     #b0)
              #b1))
      (a!5 (= (bvxor (bvor #b0 ((_ extract 4 4) TMP_BV_16_8))
                     ((_ extract 4 4) TMP_BV_16_9)
                     #b0)
              #b1))
      (a!6 (= (bvxor (bvor #b0 ((_ extract 5 5) TMP_BV_16_10))
                     ((_ extract 5 5) TMP_BV_16_11)
                     #b0)
              #b1))
      (a!7 (= (bvxor (bvor #b0 ((_ extract 6 6) TMP_BV_16_12))
                     ((_ extract 6 6) TMP_BV_16_13)
                     #b0)
              #b1))
      (a!8 (= (bvxor (bvor #b0 ((_ extract 7 7) TMP_BV_16_14))
                     ((_ extract 7 7) TMP_BV_16_15)
                     #b0)
              #b1)))
  (not (xor a!1 a!2 a!3 a!4 a!5 a!6 a!7 a!8)))
%af    : TMP_BOOL_10
%zf    : (let ((a!1 (bvxor (bvor #x00000000
                        ((_ extract 31 0) ((_ sign_extend 48) TMP_BV_16_16)))
                  ((_ extract 31 0) ((_ sign_extend 48) TMP_BV_16_16))
                  #x00000000)))
  (= a!1 #x00000000))
%sf    : (let ((a!1 (bvxor (bvor #b0
                        ((_ extract 31 31) ((_ sign_extend 48) TMP_BV_16_16)))
                  ((_ extract 31 31) ((_ sign_extend 48) TMP_BV_16_16))
                  #b0)))
  (= a!1 #b1))
%of    : false

Information about memory reads:
  Value TMP_BV_16_0 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_1 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_2 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_3 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_4 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_5 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_6 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_7 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_8 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_9 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_10 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_11 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_12 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_13 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_14 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_15 (2 bytes)
    was read at address %rbx.
  Value TMP_BV_16_16 (2 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
