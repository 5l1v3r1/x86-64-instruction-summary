code: vpmullw (%rax), %ymm2, %ymm1

  maybe read:      { %rax %ymm2 }
  must read:       { %rax %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

vpmullw (%rax), %ymm2, %ymm1: Hindex1(10)
vpmullw (%rax), %ymm2, %ymm1: Hindex1(10)
Formula:

%ymm1  : (sign-extend-32(%ymm2[255:240]) * sign-extend-32(TMP_BV_256_0[255:240]))[15:0] ∘ ((sign-extend-32(%ymm2[239:224]) * sign-extend-32(TMP_BV_256_0[239:224]))[15:0] ∘ ((sign-extend-32(%ymm2[223:208]) * sign-extend-32(TMP_BV_256_0[223:208]))[15:0] ∘ ((sign-extend-32(%ymm2[207:192]) * sign-extend-32(TMP_BV_256_0[207:192]))[15:0] ∘ ((sign-extend-32(%ymm2[191:176]) * sign-extend-32(TMP_BV_256_0[191:176]))[15:0] ∘ ((sign-extend-32(%ymm2[175:160]) * sign-extend-32(TMP_BV_256_0[175:160]))[15:0] ∘ ((sign-extend-32(%ymm2[159:144]) * sign-extend-32(TMP_BV_256_0[159:144]))[15:0] ∘ ((sign-extend-32(%ymm2[143:128]) * sign-extend-32(TMP_BV_256_0[143:128]))[15:0] ∘ ((sign-extend-32(%ymm2[127:112]) * sign-extend-32(TMP_BV_256_0[127:112]))[15:0] ∘ ((sign-extend-32(%ymm2[111:96]) * sign-extend-32(TMP_BV_256_0[111:96]))[15:0] ∘ ((sign-extend-32(%ymm2[95:80]) * sign-extend-32(TMP_BV_256_0[95:80]))[15:0] ∘ ((sign-extend-32(%ymm2[79:64]) * sign-extend-32(TMP_BV_256_0[79:64]))[15:0] ∘ ((sign-extend-32(%ymm2[63:48]) * sign-extend-32(TMP_BV_256_0[63:48]))[15:0] ∘ ((sign-extend-32(%ymm2[47:32]) * sign-extend-32(TMP_BV_256_0[47:32]))[15:0] ∘ ((sign-extend-32(%ymm2[31:16]) * sign-extend-32(TMP_BV_256_0[31:16]))[15:0] ∘ (sign-extend-32(%ymm2[15:0]) * sign-extend-32(TMP_BV_256_0[15:0]))[15:0]))))))))))))))

Information about memory reads:
  Value TMP_BV_256_0 (32 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv ∨ !sigfpe ∧ !sigbus ∧ false
