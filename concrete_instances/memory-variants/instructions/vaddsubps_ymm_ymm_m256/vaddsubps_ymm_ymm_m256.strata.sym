code: vaddsubps (%rax), %ymm2, %ymm1

  maybe read:      { %rax %ymm2 }
  must read:       { %rax %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : add_single(%ymm2[255:224], TMP_BV_256_0[255:224]) ∘ sub_single(%ymm2[223:192], TMP_BV_256_0[223:192]) ∘ (add_single(%ymm2[191:160], TMP_BV_256_0[191:160]) ∘ sub_single(%ymm2[159:128], TMP_BV_256_0[159:128]) ∘ (add_single(%ymm2[127:96], TMP_BV_256_0[127:96]) ∘ sub_single(%ymm2[95:64], TMP_BV_256_0[95:64]) ∘ (add_single(%ymm2[63:32], TMP_BV_256_0[63:32]) ∘ sub_single(%ymm2[31:0], TMP_BV_256_0[31:0]))))

Information about memory reads:
  Value TMP_BV_256_0 (32 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv ∨ !sigfpe ∧ !sigbus ∧ false
