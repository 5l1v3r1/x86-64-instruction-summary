code: setnge (%rbx)

  maybe read:      { %rbx %sf %of }
  must read:       { %rbx %sf %of }
  maybe write:     { }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

setnge (%rbx): Hindex0(10)
setnge (%rbx): Hindex0(10)
callq .read_of_into_rbx: Hindex8(9)
callq .move_032_016_ebx_r12w_r13w: Hindex8(9)
callq .move_032_016_ebx_r8w_r9w: Hindex8(9)
callq .read_sf_into_rcx: Hindex8(9)
xorq %rax, %rax: Hindex1(9)
callq .read_pf_into_rbx: Hindex8(9)
callq .move_032_016_ebx_r8w_r9w: Hindex8(9)
callq .move_r8b_to_byte_2_of_rbx: Hindex8(9)
callq .set_szp_for_bx: Hindex8(9)
callq .read_zf_into_rbx: Hindex8(9)
movb %bl, %ah: Hindex5(9)
callq .set_cf: Hindex8(9)
callq .read_cf_into_rbx: Hindex8(9)
movb %bl, %ah: Hindex5(9)
callq .read_cf_into_rcx: Hindex8(9)
cmoveq %rcx, %rax: Hindex3(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
adcb %al, %al: Hindex2(9)
adcb %bl, %bl: Hindex2(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
callq .move_016_008_bx_r10b_r11b: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_008_016_r10b_r11b_cx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
callq .move_r9b_to_byte_5_of_rbx: Hindex8(9)
Formula:

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (bvxor (ite %sf #x01 #x00) (ite %of #x01 #x00)) (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
