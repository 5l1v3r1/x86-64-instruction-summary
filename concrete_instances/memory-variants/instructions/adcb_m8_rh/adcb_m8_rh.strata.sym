code: adcb %ah, (%rax)

  maybe read:      { %rax %cf }
  must read:       { %rax %cf }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

adcb %ah, (%rax): Hindex0(10)
adcb %ah, (%rax): Hindex0(10)
adcb %ah, %bl: Hindex2(9)
Formula:

%cf    : ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[8:8] = 0x1₁
%pf    : !(((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[11:8] + 0x0₁ ∘ TMP_BV_8_1[3:0])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[7:0] = 0x0₈
%sf    : ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[7:7] = 0x1₁
%of    : (%rax[15:15] = 0x1₁ ↔ TMP_BV_8_1[7:7] = 0x1₁) ∧ !(%rax[15:15] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[7:7] = 0x1₁)

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_1 (1 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax was updated to
    ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ TMP_BV_8_1)[7:0] (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv ∨ !sigfpe ∧ !sigbus ∧ false
