code: vcvtsi2sdl (%rbx), %xmm2, %xmm1

  maybe read:      { %rbx %xmm2 %mxcsr::rc[0] }
  must read:       { %rbx %xmm2 %mxcsr::rc[0] }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

vcvtsi2sdl (%rbx), %xmm2, %xmm1: Hindex0(10)
vcvtsi2sdl (%rbx), %xmm2, %xmm1: Hindex0(10)
vzeroall : Hindex1(9)
callq .move_016_008_bx_r8b_r9b: Hindex8(9)
callq .move_r8b_to_byte_0_of_ymm1: Hindex8(9)
callq .move_r9b_to_byte_1_of_ymm1: Hindex8(9)
movq $0x0, %rbx: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
movsbq %cl, %rdi: Hindex5(9)
adcb %dil, %bl: Hindex2(9)
movq $0x5, %rbx: Hindex5(9)
callq .move_064_032_rbx_r12d_r13d: Hindex8(9)
movsbq %cl, %r12: Hindex5(9)
callq .move_008_016_r12b_r13b_bx: Hindex8(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
callq .move_064_032_rdx_r8d_r9d: Hindex8(9)
callq .move_032_064_r8d_r9d_rcx: Hindex8(9)
movb %cl, %ah: Hindex5(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
callq .clear_cf: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movsbq %r15b, %rcx: Hindex5(9)
adcb %cl, %r13b: Hindex2(9)
movslq %r13d, %rbx: Hindex5(9)
movb %dl, %ah: Hindex5(9)
callq .move_016_008_bx_r10b_r11b: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_008_016_r10b_r11b_cx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
callq .move_016_008_bx_r10b_r11b: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_008_016_r10b_r11b_cx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
callq .move_r9b_to_byte_3_of_ymm1: Hindex8(9)
callq .move_032_016_ebx_r8w_r9w: Hindex8(9)
callq .move_byte_3_of_rbx_to_r8b: Hindex8(9)
callq .move_r9b_to_byte_2_of_ymm1: Hindex8(9)
callq .move_r8b_to_byte_3_of_ymm1: Hindex8(9)
callq .move_128_064_xmm1_r8_r9: Hindex8(9)
callq .move_r9b_to_byte_25_of_ymm1: Hindex8(9)
vcvtdq2pd %ymm1, %ymm3: Hindex0(9)
callq .move_128_64_xmm2_xmm8_xmm9: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm3_r8_r9: Hindex8(9)
callq .move_128_064_xmm2_r10_r11: Hindex8(9)
vzeroall : Hindex1(9)
movq %r8, %r11: Hindex5(9)
callq .move_064_128_r10_r11_xmm1: Hindex8(9)
Formula:

%ymm1  : (concat #x00000000000000000000000000000000
        (concat ((_ extract 127 64) %ymm2) (cvt_int32_to_double TMP_BV_32_0)))

Information about memory reads:
  Value TMP_BV_32_0 (4 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
