code: vpunpckhbw (%rax), %ymm2, %ymm1

  maybe read:      { %rax %ymm2 }
  must read:       { %rax %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : TMP_BV_256_0[255:248] ∘ %ymm2[255:248] ∘ (TMP_BV_256_0[247:240] ∘ %ymm2[247:240] ∘ (TMP_BV_256_0[239:232] ∘ %ymm2[239:232] ∘ (TMP_BV_256_0[231:224] ∘ %ymm2[231:224] ∘ (TMP_BV_256_0[223:216] ∘ %ymm2[223:216] ∘ (TMP_BV_256_0[215:208] ∘ %ymm2[215:208] ∘ (TMP_BV_256_0[207:200] ∘ %ymm2[207:200] ∘ (TMP_BV_256_0[199:192] ∘ %ymm2[199:192] ∘ (TMP_BV_256_0[127:120] ∘ %ymm2[127:120] ∘ (TMP_BV_256_0[119:112] ∘ %ymm2[119:112] ∘ (TMP_BV_256_0[111:104] ∘ %ymm2[111:104] ∘ (TMP_BV_256_0[103:96] ∘ %ymm2[103:96] ∘ (TMP_BV_256_0[95:88] ∘ %ymm2[95:88] ∘ (TMP_BV_256_0[87:80] ∘ %ymm2[87:80] ∘ (TMP_BV_256_0[79:72] ∘ %ymm2[79:72] ∘ (TMP_BV_256_0[71:64] ∘ %ymm2[71:64])))))))))))))))

Information about memory reads:
  Value TMP_BV_256_0 (32 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv ∨ !sigfpe ∧ !sigbus ∧ false
