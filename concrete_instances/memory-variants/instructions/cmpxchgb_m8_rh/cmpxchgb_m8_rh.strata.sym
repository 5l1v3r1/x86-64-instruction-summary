code: cmpxchgb %ah, (%rax)

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %al %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:8] ∘ TMP_BV_8_0

%cf    : (((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[8:8] = 0x1₁ ? 0x0₉ : 0xff₉) + ((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[8:8] = 0x1₁ ? 0x0₉ : 0xff₉))[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[3:0] + 0x0₁ ∘ (0xf₄ ⊕ TMP_BV_8_2[3:0]))[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[7:7] = 0x1₁
%of    : (%rax[7:7] = 0x1₁ ↔ (0x1₁ ⊕ TMP_BV_8_3[7:7]) = 0x1₁) ∧ !(%rax[7:7] = 0x1₁ ↔ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[7:7] = 0x1₁)

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_1 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_2 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_3 (1 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax[63:8] ∘ TMP_BV_8_0 was updated to
    (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ TMP_BV_8_0))[7:0] = 0x0₈ ? %rax[15:8] : TMP_BV_8_0 (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv ∨ !sigfpe ∧ !sigbus ∧ false
