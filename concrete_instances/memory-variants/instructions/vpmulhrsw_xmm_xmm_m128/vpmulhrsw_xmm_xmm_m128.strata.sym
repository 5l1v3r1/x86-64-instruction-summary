code: vpmulhrsw (%rax), %xmm2, %xmm1

  maybe read:      { %rax %xmm2 }
  must read:       { %rax %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (((sign-extend-32(%ymm2[127:112]) * sign-extend-32(TMP_BV_128_0[127:112]) >> 0xe₃₂) + 0x1₃₂)[16:1] ∘ (((sign-extend-32(%ymm2[111:96]) * sign-extend-32(TMP_BV_128_0[111:96]) >> 0xe₃₂) + 0x1₃₂)[16:1] ∘ (((sign-extend-32(%ymm2[95:80]) * sign-extend-32(TMP_BV_128_0[95:80]) >> 0xe₃₂) + 0x1₃₂)[16:1] ∘ (((sign-extend-32(%ymm2[79:64]) * sign-extend-32(TMP_BV_128_0[79:64]) >> 0xe₃₂) + 0x1₃₂)[16:1] ∘ (((sign-extend-32(%ymm2[63:48]) * sign-extend-32(TMP_BV_128_0[63:48]) >> 0xe₃₂) + 0x1₃₂)[16:1] ∘ (((sign-extend-32(%ymm2[47:32]) * sign-extend-32(TMP_BV_128_0[47:32]) >> 0xe₃₂) + 0x1₃₂)[16:1] ∘ (((sign-extend-32(%ymm2[31:16]) * sign-extend-32(TMP_BV_128_0[31:16]) >> 0xe₃₂) + 0x1₃₂)[16:1] ∘ ((sign-extend-32(%ymm2[15:0]) * sign-extend-32(TMP_BV_128_0[15:0]) >> 0xe₃₂) + 0x1₃₂)[16:1])))))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv ∨ !sigfpe ∧ !sigbus ∧ false
