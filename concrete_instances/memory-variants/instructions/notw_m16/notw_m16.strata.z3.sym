code: notw (%rax)

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

notw (%rax): Hindex0(10)
notw (%rax): Hindex0(10)
movq $0xffffffffffffffff, %r14: Hindex5(9)
movswq %bx, %r12: Hindex5(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
movswq %bx, %r12: Hindex5(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
callq .set_szp_for_bx: Hindex8(9)
callq .read_sf_into_rbx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
xorq %rbx, %r12: Hindex1(9)
movswq %r12w, %rbx: Hindex5(9)
callq .set_szp_for_bx: Hindex8(9)
movslq %r12d, %rbx: Hindex5(9)
Formula:

Information about memory reads:
  Value TMP_BV_16_0 (2 bytes)
    was read at address %rax.
  Value TMP_BV_16_1 (2 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax was updated to
    (bvxor TMP_BV_16_1 #xffff) (2 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
