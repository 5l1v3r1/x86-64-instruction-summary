code: pmovzxdq (%rbx), %xmm1

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

pmovzxdq (%rbx), %xmm1: Hindex0(10)
pmovzxdq (%rbx), %xmm1: Hindex0(10)
callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11: Hindex8(9)
callq .move_128_256_xmm8_xmm9_ymm3: Hindex8(9)
callq .move_128_064_xmm3_r8_r9: Hindex8(9)
callq .move_128_064_xmm2_r10_r11: Hindex8(9)
vzeroall : Hindex1(9)
movq %r8, %r11: Hindex5(9)
callq .move_064_128_r10_r11_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
movq %r12, %r13: Hindex5(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_byte_5_of_ymm1_to_r9b: Hindex8(9)
callq .move_064_128_r8_r9_xmm2: Hindex8(9)
callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11: Hindex8(9)
callq .move_64_128_xmm8_xmm9_xmm1: Hindex8(9)
callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1: Hindex8(9)
Formula:

%ymm1  : (let ((a!1 (concat (concat (concat #x00000000 ((_ extract 63 32) TMP_BV_64_0))
                           #x00000000)
                   ((_ extract 31 0) TMP_BV_64_1))))
  (concat ((_ extract 255 128) %ymm1) a!1))

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_1 (8 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
