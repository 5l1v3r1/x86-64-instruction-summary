code: rorb $0x0, (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %cf %of }
  must write:      { }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

rorb $0x0, (%rbx): Hindex8(10)
rorb $0x0, (%rbx): Hindex8(10)
Formula:

%cf    : (let ((a!1 (and false
                (= ((_ extract 7 7) (ext_rotate_right TMP_BV_8_0 #x00)) #b1))))
  (or a!1 (and true %cf)))
%of    : (let ((a!1 (xor (= ((_ extract 7 7) (ext_rotate_right TMP_BV_8_0 #x00)) #b1)
                (= ((_ extract 6 6) (ext_rotate_right TMP_BV_8_0 #x00)) #b1))))
  (or (and false a!1) (and true TMP_BOOL_0)))

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    (ext_rotate_right TMP_BV_8_0 #x00) (1 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv
    (and (not sigfpe) (not sigbus) false)
    (and (not sigfpe) (not sigbus) false))
