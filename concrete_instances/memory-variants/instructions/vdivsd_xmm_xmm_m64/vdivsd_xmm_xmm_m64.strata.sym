code: vdivsd (%rax), %xmm2, %xmm1

  maybe read:      { %rax %xmm2 }
  must read:       { %rax %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Opcode: vdivsd_xmm_xmm_xmm Reason: 1
Opcode: vdivsd_xmm_xmm_m64 Reason: 4
vdivsd (%rax), %xmm2, %xmm1: Hindex0(10)
Opcode: vdivsd_xmm_xmm_xmm Reason: 1
Opcode: vdivsd_xmm_xmm_m64 Reason: 4
vdivsd (%rax), %xmm2, %xmm1: Hindex0(10)
callq .move_128_64_xmm1_xmm10_xmm11: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
vdivpd %ymm0, %ymm5, %ymm7: Hindex0(9)
callq .move_128_032_xmm2_xmm4_xmm5_xmm6_xmm7: Hindex8(9)
callq .move_032_128_xmm4_xmm5_xmm6_xmm7_xmm1: Hindex8(9)
callq .move_64_128_xmm10_xmm11_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ div_double(%ymm2[63:0], TMP_BV_64_0))

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
