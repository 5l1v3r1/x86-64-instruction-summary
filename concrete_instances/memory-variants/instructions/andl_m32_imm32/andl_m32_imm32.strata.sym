code: andl $0x0, (%rax)

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

andl $0x0, (%rax): Hindex0(10)
andl $0x0, (%rax): Hindex0(10)
movslq %edx, %rbx: Hindex5(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movswq %cx, %r11: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
orq %r11, %r8: Hindex1(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .set_szp_for_ebx: Hindex8(9)
callq .move_032_016_ecx_r12w_r13w: Hindex8(9)
callq .move_016_032_r12w_r13w_ecx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
Formula:

%cf    : false
%pf    : (let ((a!1 (= (bvxor (bvor #b0 ((_ extract 0 0) TMP_BV_32_2))
                     ((_ extract 0 0) TMP_BV_32_3)
                     #b0)
              #b1))
      (a!2 (= (bvxor (bvor #b0 ((_ extract 1 1) TMP_BV_32_4))
                     ((_ extract 1 1) TMP_BV_32_5)
                     #b0)
              #b1))
      (a!3 (= (bvxor (bvor #b0 ((_ extract 2 2) TMP_BV_32_6))
                     ((_ extract 2 2) TMP_BV_32_7)
                     #b0)
              #b1))
      (a!4 (= (bvxor (bvor #b0 ((_ extract 3 3) TMP_BV_32_8))
                     ((_ extract 3 3) TMP_BV_32_9)
                     #b0)
              #b1))
      (a!5 (= (bvxor (bvor #b0 ((_ extract 4 4) TMP_BV_32_10))
                     ((_ extract 4 4) TMP_BV_32_11)
                     #b0)
              #b1))
      (a!6 (= (bvxor (bvor #b0 ((_ extract 5 5) TMP_BV_32_12))
                     ((_ extract 5 5) TMP_BV_32_13)
                     #b0)
              #b1))
      (a!7 (= (bvxor (bvor #b0 ((_ extract 6 6) TMP_BV_32_14))
                     ((_ extract 6 6) TMP_BV_32_15)
                     #b0)
              #b1))
      (a!8 (= (bvxor (bvor #b0 ((_ extract 7 7) TMP_BV_32_16))
                     ((_ extract 7 7) TMP_BV_32_17)
                     #b0)
              #b1)))
  (not (xor a!1 a!2 a!3 a!4 a!5 a!6 a!7 a!8)))
%af    : TMP_BOOL_9
%zf    : (= (bvxor (bvor #x00000000 TMP_BV_32_0) TMP_BV_32_1 #x00000000) #x00000000)
%sf    : (= (bvxor (bvor #b0 ((_ extract 31 31) TMP_BV_32_18))
          ((_ extract 31 31) TMP_BV_32_19)
          #b0)
   #b1)
%of    : false

Information about memory reads:
  Value TMP_BV_32_0 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_1 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_2 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_3 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_4 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_5 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_6 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_7 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_8 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_9 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_10 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_11 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_12 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_13 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_14 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_15 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_16 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_17 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_18 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_19 (4 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax was updated to
    (bvxor (bvor #x00000000 TMP_BV_32_0) TMP_BV_32_1 #x00000000) (4 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
