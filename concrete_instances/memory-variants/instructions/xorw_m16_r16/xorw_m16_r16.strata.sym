code: xorw %bx, (%rax)

  maybe read:      { %rax %bx }
  must read:       { %rax %bx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : FALSE
%pf    : (not (xor (xor (xor (xor (xor (xor (xor (== (xor <TMP_BV_16_2|16>[0:0] <%rbx|64>[0:0]) <0x1|1>) (== (xor <TMP_BV_16_3|16>[1:1] <%rbx|64>[1:1]) <0x1|1>)) (== (xor <TMP_BV_16_4|16>[2:2] <%rbx|64>[2:2]) <0x1|1>)) (== (xor <TMP_BV_16_5|16>[3:3] <%rbx|64>[3:3]) <0x1|1>)) (== (xor <TMP_BV_16_6|16>[4:4] <%rbx|64>[4:4]) <0x1|1>)) (== (xor <TMP_BV_16_7|16>[5:5] <%rbx|64>[5:5]) <0x1|1>)) (== (xor <TMP_BV_16_8|16>[6:6] <%rbx|64>[6:6]) <0x1|1>)) (== (xor <TMP_BV_16_9|16>[7:7] <%rbx|64>[7:7]) <0x1|1>)))
%af    : <TMP_BOOL_2>
%zf    : (== (xor <TMP_BV_16_1|16> <%rbx|64>[15:0]) <0x0|16>)
%sf    : (== (xor <TMP_BV_16_10|16>[15:15] <%rbx|64>[15:15]) <0x1|1>)
%of    : FALSE

Information about memory reads:
  Value <TMP_BV_16_0|16> (2 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_16_1|16> (2 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_16_2|16> (2 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_16_3|16> (2 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_16_4|16> (2 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_16_5|16> (2 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_16_6|16> (2 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_16_7|16> (2 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_16_8|16> (2 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_16_9|16> (2 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_16_10|16> (2 bytes)
    was read at address <%rax|64>.

Information about memory writes:
  Address <%rax|64> was updated to
    (xor <TMP_BV_16_1|16> <%rbx|64>[15:0]) (2 bytes).

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : (or <sigsegv> (and (and (not <sigfpe>) (not <sigbus>)) FALSE))
