code: vphsubw (%rbx), %xmm2, %xmm1

  maybe read:      { %rbx %xmm2 }
  must read:       { %rbx %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

vphsubw (%rbx), %xmm2, %xmm1: Hindex1(10)
vphsubw (%rbx), %xmm2, %xmm1: Hindex1(10)
Formula:

%ymm1  : (let ((a!1 (concat (concat (bvsub ((_ extract 111 96) TMP_BV_128_0)
                                  ((_ extract 127 112) TMP_BV_128_0))
                           (bvsub ((_ extract 79 64) TMP_BV_128_0)
                                  ((_ extract 95 80) TMP_BV_128_0)))
                   (bvsub ((_ extract 47 32) TMP_BV_128_0)
                          ((_ extract 63 48) TMP_BV_128_0)))))
(let ((a!2 (concat (concat a!1
                           (bvsub ((_ extract 15 0) TMP_BV_128_0)
                                  ((_ extract 31 16) TMP_BV_128_0)))
                   (bvsub ((_ extract 111 96) %ymm2)
                          ((_ extract 127 112) %ymm2)))))
(let ((a!3 (concat (concat a!2
                           (bvsub ((_ extract 79 64) %ymm2)
                                  ((_ extract 95 80) %ymm2)))
                   (bvsub ((_ extract 47 32) %ymm2) ((_ extract 63 48) %ymm2)))))
  (concat #x00000000000000000000000000000000
          (concat a!3
                  (bvsub ((_ extract 15 0) %ymm2) ((_ extract 31 16) %ymm2)))))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
