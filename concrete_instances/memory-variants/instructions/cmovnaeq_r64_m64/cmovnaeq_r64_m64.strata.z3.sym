code: cmovnaeq (%rcx), %rbx

  maybe read:      { %rcx %cf }
  must read:       { %rcx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

cmovnaeq (%rcx), %rbx: Hindex0(10)
cmovnaeq (%rcx), %rbx: Hindex0(10)
callq .clear_zf: Hindex8(9)
callq .read_zf_into_rbx: Hindex8(9)
callq .read_cf_into_rbx: Hindex8(9)
movb %bl, %ah: Hindex5(9)
callq .move_064_032_rbx_r12d_r13d: Hindex8(9)
callq .move_032_064_r12d_r13d_rbx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
callq .read_zf_into_rbx: Hindex8(9)
callq .clear_cf: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movsbq %r15b, %rcx: Hindex5(9)
adcb %cl, %r13b: Hindex2(9)
movslq %r13d, %rbx: Hindex5(9)
cmoveq %rcx, %rbx: Hindex3(9)
Formula:

%rbx   : (let ((a!1 (bvadd (ite (= (ite %cf #x00000100 #x00000000) #x00000000)
                       #b000000001
                       #b000000000)
                  (ite (= (ite %cf #x00000100 #x00000000) #x00000000)
                       #b000000001
                       #b000000000))))
  (ite (= ((_ extract 7 0) a!1) #x00) TMP_BV_64_0 %rbx))

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rcx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
