code: orb (%rax), %ah

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

orb (%rax), %ah: Hindex0(10)
orb (%rax), %ah: Hindex0(10)
movb %cl, %bh: Hindex5(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
callq .read_cf_into_rcx: Hindex8(9)
movb %cl, %ah: Hindex5(9)
movswq %bx, %rdx: Hindex5(9)
xorq %rbp, %rdx: Hindex1(9)
movslq %edx, %rbx: Hindex5(9)
callq .set_szp_for_bl: Hindex8(9)
callq .set_szp_for_bl: Hindex8(9)
movb %bl, %ch: Hindex5(9)
movb %ch, %cl: Hindex5(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
callq .clear_cf: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movsbq %r15b, %rcx: Hindex5(9)
adcb %cl, %r13b: Hindex2(9)
movslq %r13d, %rbx: Hindex5(9)
movb %cl, %ah: Hindex5(9)
movb %ah, %cl: Hindex5(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
adcb %cl, %bl: Hindex2(9)
movb %bl, %bh: Hindex5(9)
movswq %cx, %rdx: Hindex5(9)
callq .move_016_008_bx_r10b_r11b: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_008_016_r10b_r11b_cx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
movswq %cx, %rax: Hindex5(9)
orq %rax, %rdx: Hindex1(9)
movslq %edx, %rbx: Hindex5(9)
Formula:

%rax   : (concat (concat ((_ extract 63 16) %rax)
                (bvor ((_ extract 15 8) %rax) TMP_BV_8_0))
        ((_ extract 7 0) %rax))

%cf    : false
%pf    : (let ((a!1 (xor (= (bvor ((_ extract 8 8) %rax) ((_ extract 0 0) TMP_BV_8_1))
                   #b1)
                (= (bvor ((_ extract 9 9) %rax) ((_ extract 1 1) TMP_BV_8_2))
                   #b1)
                (= (bvor ((_ extract 10 10) %rax) ((_ extract 2 2) TMP_BV_8_3))
                   #b1)
                (= (bvor ((_ extract 11 11) %rax) ((_ extract 3 3) TMP_BV_8_4))
                   #b1)
                (= (bvor ((_ extract 12 12) %rax) ((_ extract 4 4) TMP_BV_8_5))
                   #b1)
                (= (bvor ((_ extract 13 13) %rax) ((_ extract 5 5) TMP_BV_8_6))
                   #b1)
                (= (bvor ((_ extract 14 14) %rax) ((_ extract 6 6) TMP_BV_8_7))
                   #b1)
                (= (bvor ((_ extract 15 15) %rax) ((_ extract 7 7) TMP_BV_8_8))
                   #b1))))
  (not a!1))
%af    : TMP_BOOL_7
%zf    : (let ((a!1 (bvor ((_ sign_extend 48)
                   (concat ((_ extract 15 8) %rax) ((_ extract 15 8) %rax)))
                 ((_ sign_extend 48) (concat TMP_BV_8_0 TMP_BV_8_0)))))
  (= a!1 #x0000000000000000))
%sf    : (let ((a!1 ((_ extract 63 63)
             ((_ sign_extend 48)
               (concat ((_ extract 15 8) %rax) ((_ extract 15 8) %rax))))))
(let ((a!2 (bvor a!1
                 ((_ extract 63 63)
                   ((_ sign_extend 48) (concat TMP_BV_8_0 TMP_BV_8_0))))))
  (= a!2 #b1)))
%of    : false

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_1 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_2 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_3 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_4 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_5 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_6 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_7 (1 bytes)
    was read at address %rax.
  Value TMP_BV_8_8 (1 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
