code: orb (%rax), %ah

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : (concat (concat <%rax|64>[63:16] (or <%rax|64>[15:8] <TMP_BV_8_0|8>)) <%rax|64>[7:0])

%cf    : FALSE
%pf    : (not (xor (xor (xor (xor (xor (xor (xor (== (or <%rax|64>[8:8] <TMP_BV_8_1|8>[0:0]) <0x1|1>) (== (or <%rax|64>[9:9] <TMP_BV_8_2|8>[1:1]) <0x1|1>)) (== (or <%rax|64>[10:10] <TMP_BV_8_3|8>[2:2]) <0x1|1>)) (== (or <%rax|64>[11:11] <TMP_BV_8_4|8>[3:3]) <0x1|1>)) (== (or <%rax|64>[12:12] <TMP_BV_8_5|8>[4:4]) <0x1|1>)) (== (or <%rax|64>[13:13] <TMP_BV_8_6|8>[5:5]) <0x1|1>)) (== (or <%rax|64>[14:14] <TMP_BV_8_7|8>[6:6]) <0x1|1>)) (== (or <%rax|64>[15:15] <TMP_BV_8_8|8>[7:7]) <0x1|1>)))
%af    : <TMP_BOOL_7>
%zf    : (== (or (sign-extend-64 (concat <%rax|64>[15:8] <%rax|64>[15:8])) (sign-extend-64 (concat <TMP_BV_8_0|8> <TMP_BV_8_0|8>))) <0x0|64>)
%sf    : (== (or (sign-extend-64 (concat <%rax|64>[15:8] <%rax|64>[15:8]))[63:63] (sign-extend-64 (concat <TMP_BV_8_0|8> <TMP_BV_8_0|8>))[63:63]) <0x1|1>)
%of    : FALSE

Information about memory reads:
  Value <TMP_BV_8_0|8> (1 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_8_1|8> (1 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_8_2|8> (1 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_8_3|8> (1 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_8_4|8> (1 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_8_5|8> (1 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_8_6|8> (1 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_8_7|8> (1 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_8_8|8> (1 bytes)
    was read at address <%rax|64>.

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>
