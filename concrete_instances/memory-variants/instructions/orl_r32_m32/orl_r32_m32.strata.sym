code: orl (%rax), %ebx

  maybe read:      { %rax %ebx }
  must read:       { %rax %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : (concat <0x0|32> (or <%rbx|64>[31:0] <TMP_BV_32_0|32>))

%cf    : FALSE
%pf    : (not (xor (xor (xor (xor (xor (xor (xor (== (or <%rbx|64>[0:0] <TMP_BV_32_1|32>[0:0]) <0x1|1>) (== (or <%rbx|64>[1:1] <TMP_BV_32_2|32>[1:1]) <0x1|1>)) (== (or <%rbx|64>[2:2] <TMP_BV_32_3|32>[2:2]) <0x1|1>)) (== (or <%rbx|64>[3:3] <TMP_BV_32_4|32>[3:3]) <0x1|1>)) (== (or <%rbx|64>[4:4] <TMP_BV_32_5|32>[4:4]) <0x1|1>)) (== (or <%rbx|64>[5:5] <TMP_BV_32_6|32>[5:5]) <0x1|1>)) (== (or <%rbx|64>[6:6] <TMP_BV_32_7|32>[6:6]) <0x1|1>)) (== (or <%rbx|64>[7:7] <TMP_BV_32_8|32>[7:7]) <0x1|1>)))
%af    : <TMP_BOOL_2>
%zf    : (== (or <%rbx|64>[31:0] <TMP_BV_32_0|32>) <0x0|32>)
%sf    : (== (or <%rbx|64>[31:31] <TMP_BV_32_9|32>[31:31]) <0x1|1>)
%of    : FALSE

Information about memory reads:
  Value <TMP_BV_32_0|32> (4 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_32_1|32> (4 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_32_2|32> (4 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_32_3|32> (4 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_32_4|32> (4 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_32_5|32> (4 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_32_6|32> (4 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_32_7|32> (4 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_32_8|32> (4 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_32_9|32> (4 bytes)
    was read at address <%rax|64>.

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>
