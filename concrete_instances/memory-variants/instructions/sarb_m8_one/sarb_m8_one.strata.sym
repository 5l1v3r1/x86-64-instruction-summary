code: sarb $0x1, (%rax)

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : (or (and TRUE (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[0:0] <0x1|1>)) FALSE)
%pf    : (not (xor (xor (xor (xor (xor (xor (xor (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[1:1] <0x1|1>) (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[2:2] <0x1|1>)) (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[3:3] <0x1|1>)) (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[4:4] <0x1|1>)) (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[5:5] <0x1|1>)) (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[6:6] <0x1|1>)) (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[7:7] <0x1|1>)) (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[8:8] <0x1|1>)))
%af    : <TMP_BOOL_12>
%zf    : (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[64:1] <0x0|64>)
%sf    : (== (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[64:64] <0x1|1>)
%of    : FALSE

Information about memory reads:
  Value <TMP_BV_8_0|8> (1 bytes)
    was read at address <%rax|64>.
  Value <TMP_BV_8_1|8> (1 bytes)
    was read at address <%rax|64>.

Information about memory writes:
  Address <%rax|64> was updated to
    (s_shr (concat (sign-extend-64 <TMP_BV_8_1|8>) <0x0|1>) (concat <0x0|57> <0x1|8>))[8:1] (1 bytes).

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : (or <sigsegv> (and (and (not <sigfpe>) (not <sigbus>)) FALSE))
