code: bzhil %ecx, (%rax), %ebx

  maybe read:      { %rax %ecx }
  must read:       { %rax %ecx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi2 }

bzhil %ecx, (%rax), %ebx: Hindex2(10)
bzhil %ecx, (%rax), %ebx: Hindex2(10)
Formula:

%rbx   : (let ((a!1 (ite (= ((_ extract 7 0) %rcx) #x02)
                (concat #b000000000000000000000000000000
                        ((_ extract 1 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x01)
                     (concat #b0000000000000000000000000000000
                             ((_ extract 0 0) TMP_BV_32_0))
                     #x00000000))))
(let ((a!2 (ite (= ((_ extract 7 0) %rcx) #x04)
                (concat #x0000000 ((_ extract 3 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x03)
                     (concat #b00000000000000000000000000000
                             ((_ extract 2 0) TMP_BV_32_0))
                     a!1))))
(let ((a!3 (ite (= ((_ extract 7 0) %rcx) #x06)
                (concat #b00000000000000000000000000
                        ((_ extract 5 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x05)
                     (concat #b000000000000000000000000000
                             ((_ extract 4 0) TMP_BV_32_0))
                     a!2))))
(let ((a!4 (ite (= ((_ extract 7 0) %rcx) #x08)
                (concat #x000000 ((_ extract 7 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x07)
                     (concat #b0000000000000000000000000
                             ((_ extract 6 0) TMP_BV_32_0))
                     a!3))))
(let ((a!5 (ite (= ((_ extract 7 0) %rcx) #x0a)
                (concat #b0000000000000000000000 ((_ extract 9 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x09)
                     (concat #b00000000000000000000000
                             ((_ extract 8 0) TMP_BV_32_0))
                     a!4))))
(let ((a!6 (ite (= ((_ extract 7 0) %rcx) #x0c)
                (concat #x00000 ((_ extract 11 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x0b)
                     (concat #b000000000000000000000
                             ((_ extract 10 0) TMP_BV_32_0))
                     a!5))))
(let ((a!7 (ite (= ((_ extract 7 0) %rcx) #x0e)
                (concat #b000000000000000000 ((_ extract 13 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x0d)
                     (concat #b0000000000000000000
                             ((_ extract 12 0) TMP_BV_32_0))
                     a!6))))
(let ((a!8 (ite (= ((_ extract 7 0) %rcx) #x10)
                (concat #x0000 ((_ extract 15 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x0f)
                     (concat #b00000000000000000 ((_ extract 14 0) TMP_BV_32_0))
                     a!7))))
(let ((a!9 (ite (= ((_ extract 7 0) %rcx) #x12)
                (concat #b00000000000000 ((_ extract 17 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x11)
                     (concat #b000000000000000 ((_ extract 16 0) TMP_BV_32_0))
                     a!8))))
(let ((a!10 (ite (= ((_ extract 7 0) %rcx) #x14)
                 (concat #x000 ((_ extract 19 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x13)
                      (concat #b0000000000000 ((_ extract 18 0) TMP_BV_32_0))
                      a!9))))
(let ((a!11 (ite (= ((_ extract 7 0) %rcx) #x16)
                 (concat #b0000000000 ((_ extract 21 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x15)
                      (concat #b00000000000 ((_ extract 20 0) TMP_BV_32_0))
                      a!10))))
(let ((a!12 (ite (= ((_ extract 7 0) %rcx) #x18)
                 (concat #x00 ((_ extract 23 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x17)
                      (concat #b000000000 ((_ extract 22 0) TMP_BV_32_0))
                      a!11))))
(let ((a!13 (ite (= ((_ extract 7 0) %rcx) #x1a)
                 (concat #b000000 ((_ extract 25 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x19)
                      (concat #b0000000 ((_ extract 24 0) TMP_BV_32_0))
                      a!12))))
(let ((a!14 (ite (= ((_ extract 7 0) %rcx) #x1c)
                 (concat #x0 ((_ extract 27 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x1b)
                      (concat #b00000 ((_ extract 26 0) TMP_BV_32_0))
                      a!13))))
(let ((a!15 (ite (= ((_ extract 7 0) %rcx) #x1e)
                 (concat #b00 ((_ extract 29 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x1d)
                      (concat #b000 ((_ extract 28 0) TMP_BV_32_0))
                      a!14))))
(let ((a!16 (ite (bvult ((_ extract 7 0) %rcx) #x20)
                 (ite (= ((_ extract 7 0) %rcx) #x1f)
                      (concat #b0 ((_ extract 30 0) TMP_BV_32_0))
                      a!15)
                 TMP_BV_32_0)))
  (concat #x00000000 a!16)))))))))))))))))

%cf    : (bvuge ((_ extract 7 0) %rcx) #x20)
%pf    : TMP_BOOL_0
%af    : TMP_BOOL_1
%zf    : (let ((a!1 (ite (= ((_ extract 7 0) %rcx) #x02)
                (concat #b000000000000000000000000000000
                        ((_ extract 1 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x01)
                     (concat #b0000000000000000000000000000000
                             ((_ extract 0 0) TMP_BV_32_0))
                     #x00000000))))
(let ((a!2 (ite (= ((_ extract 7 0) %rcx) #x04)
                (concat #x0000000 ((_ extract 3 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x03)
                     (concat #b00000000000000000000000000000
                             ((_ extract 2 0) TMP_BV_32_0))
                     a!1))))
(let ((a!3 (ite (= ((_ extract 7 0) %rcx) #x06)
                (concat #b00000000000000000000000000
                        ((_ extract 5 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x05)
                     (concat #b000000000000000000000000000
                             ((_ extract 4 0) TMP_BV_32_0))
                     a!2))))
(let ((a!4 (ite (= ((_ extract 7 0) %rcx) #x08)
                (concat #x000000 ((_ extract 7 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x07)
                     (concat #b0000000000000000000000000
                             ((_ extract 6 0) TMP_BV_32_0))
                     a!3))))
(let ((a!5 (ite (= ((_ extract 7 0) %rcx) #x0a)
                (concat #b0000000000000000000000 ((_ extract 9 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x09)
                     (concat #b00000000000000000000000
                             ((_ extract 8 0) TMP_BV_32_0))
                     a!4))))
(let ((a!6 (ite (= ((_ extract 7 0) %rcx) #x0c)
                (concat #x00000 ((_ extract 11 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x0b)
                     (concat #b000000000000000000000
                             ((_ extract 10 0) TMP_BV_32_0))
                     a!5))))
(let ((a!7 (ite (= ((_ extract 7 0) %rcx) #x0e)
                (concat #b000000000000000000 ((_ extract 13 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x0d)
                     (concat #b0000000000000000000
                             ((_ extract 12 0) TMP_BV_32_0))
                     a!6))))
(let ((a!8 (ite (= ((_ extract 7 0) %rcx) #x10)
                (concat #x0000 ((_ extract 15 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x0f)
                     (concat #b00000000000000000 ((_ extract 14 0) TMP_BV_32_0))
                     a!7))))
(let ((a!9 (ite (= ((_ extract 7 0) %rcx) #x12)
                (concat #b00000000000000 ((_ extract 17 0) TMP_BV_32_0))
                (ite (= ((_ extract 7 0) %rcx) #x11)
                     (concat #b000000000000000 ((_ extract 16 0) TMP_BV_32_0))
                     a!8))))
(let ((a!10 (ite (= ((_ extract 7 0) %rcx) #x14)
                 (concat #x000 ((_ extract 19 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x13)
                      (concat #b0000000000000 ((_ extract 18 0) TMP_BV_32_0))
                      a!9))))
(let ((a!11 (ite (= ((_ extract 7 0) %rcx) #x16)
                 (concat #b0000000000 ((_ extract 21 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x15)
                      (concat #b00000000000 ((_ extract 20 0) TMP_BV_32_0))
                      a!10))))
(let ((a!12 (ite (= ((_ extract 7 0) %rcx) #x18)
                 (concat #x00 ((_ extract 23 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x17)
                      (concat #b000000000 ((_ extract 22 0) TMP_BV_32_0))
                      a!11))))
(let ((a!13 (ite (= ((_ extract 7 0) %rcx) #x1a)
                 (concat #b000000 ((_ extract 25 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x19)
                      (concat #b0000000 ((_ extract 24 0) TMP_BV_32_0))
                      a!12))))
(let ((a!14 (ite (= ((_ extract 7 0) %rcx) #x1c)
                 (concat #x0 ((_ extract 27 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x1b)
                      (concat #b00000 ((_ extract 26 0) TMP_BV_32_0))
                      a!13))))
(let ((a!15 (ite (= ((_ extract 7 0) %rcx) #x1e)
                 (concat #b00 ((_ extract 29 0) TMP_BV_32_0))
                 (ite (= ((_ extract 7 0) %rcx) #x1d)
                      (concat #b000 ((_ extract 28 0) TMP_BV_32_0))
                      a!14))))
(let ((a!16 (ite (bvult ((_ extract 7 0) %rcx) #x20)
                 (ite (= ((_ extract 7 0) %rcx) #x1f)
                      (concat #b0 ((_ extract 30 0) TMP_BV_32_0))
                      a!15)
                 TMP_BV_32_0)))
  (= a!16 #x00000000)))))))))))))))))
%sf    : (= (ite (bvult ((_ extract 7 0) %rcx) #x20) #b0 ((_ extract 31 31) TMP_BV_32_0))
   #b1)
%of    : false

Information about memory reads:
  Value TMP_BV_32_0 (4 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
