code: imulw $0x0, (%rax), %bx

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %bx %cf %of }
  must write:      { %bx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rbx   : (concat <%rbx|64>[63:16] (mult (sign-extend-32 <TMP_BV_16_0|16>) <0x0|32>)[15:0])

%cf    : (not (== (mult (sign-extend-32 <TMP_BV_16_0|16>) <0x0|32>) (sign-extend-32 (mult (sign-extend-32 <TMP_BV_16_0|16>) <0x0|32>)[15:0])))
%pf    : <TMP_BOOL_2>
%af    : <TMP_BOOL_1>
%zf    : <TMP_BOOL_0>
%sf    : (== (mult (sign-extend-32 <TMP_BV_16_0|16>) <0x0|32>)[15:15] <0x1|1>)
%of    : (not (== (mult (sign-extend-32 <TMP_BV_16_0|16>) <0x0|32>) (sign-extend-32 (mult (sign-extend-32 <TMP_BV_16_0|16>) <0x0|32>)[15:0])))

Information about memory reads:
  Value <TMP_BV_16_0|16> (2 bytes)
    was read at address <%rax|64>.

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : (or <sigsegv> (and (and (not <sigfpe>) (not <sigbus>)) FALSE))
