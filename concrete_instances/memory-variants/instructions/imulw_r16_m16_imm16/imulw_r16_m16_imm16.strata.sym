code: imulw $0x0, (%rax), %bx

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %bx %cf %of }
  must write:      { %bx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

imulw $0x0, (%rax), %bx: Hindex2(10)
imulw $0x0, (%rax), %bx: Hindex2(10)
Formula:

%rbx   : (concat ((_ extract 63 16) %rbx)
        ((_ extract 15 0) (bvmul ((_ sign_extend 16) TMP_BV_16_0) #x00000000)))

%cf    : (let ((a!1 ((_ sign_extend 16)
             ((_ extract 15 0)
               (bvmul ((_ sign_extend 16) TMP_BV_16_0) #x00000000)))))
  (not (= (bvmul ((_ sign_extend 16) TMP_BV_16_0) #x00000000) a!1)))
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : (= ((_ extract 15 15) (bvmul ((_ sign_extend 16) TMP_BV_16_0) #x00000000)) #b1)
%of    : (let ((a!1 ((_ sign_extend 16)
             ((_ extract 15 0)
               (bvmul ((_ sign_extend 16) TMP_BV_16_0) #x00000000)))))
  (not (= (bvmul ((_ sign_extend 16) TMP_BV_16_0) #x00000000) a!1)))

Information about memory reads:
  Value TMP_BV_16_0 (2 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
