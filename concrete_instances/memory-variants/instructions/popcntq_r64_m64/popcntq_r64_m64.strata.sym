code: popcntq (%rax), %rbx

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { popcnt }

popcntq (%rax), %rbx: Hindex0(10)
popcntq (%rax), %rbx: Hindex0(10)
popcntq %rcx, %rbx: Hindex1(9)
Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[63:63] + 0x0₁ ∘ TMP_BV_64_0[62:62]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[61:61] + 0x0₁ ∘ TMP_BV_64_0[60:60])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[59:59] + 0x0₁ ∘ TMP_BV_64_0[58:58]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[57:57] + 0x0₁ ∘ TMP_BV_64_0[56:56]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[55:55] + 0x0₁ ∘ TMP_BV_64_0[54:54]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[53:53] + 0x0₁ ∘ TMP_BV_64_0[52:52])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[51:51] + 0x0₁ ∘ TMP_BV_64_0[50:50]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[49:49] + 0x0₁ ∘ TMP_BV_64_0[48:48])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[47:47] + 0x0₁ ∘ TMP_BV_64_0[46:46]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[45:45] + 0x0₁ ∘ TMP_BV_64_0[44:44])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[43:43] + 0x0₁ ∘ TMP_BV_64_0[42:42]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[41:41] + 0x0₁ ∘ TMP_BV_64_0[40:40]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[39:39] + 0x0₁ ∘ TMP_BV_64_0[38:38]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[37:37] + 0x0₁ ∘ TMP_BV_64_0[36:36])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[35:35] + 0x0₁ ∘ TMP_BV_64_0[34:34]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_0[33:33] + 0x0₁ ∘ TMP_BV_64_0[32:32]))))) + 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[31:31] + 0x0₁ ∘ TMP_BV_64_1[30:30]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[29:29] + 0x0₁ ∘ TMP_BV_64_1[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[27:27] + 0x0₁ ∘ TMP_BV_64_1[26:26]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[25:25] + 0x0₁ ∘ TMP_BV_64_1[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[23:23] + 0x0₁ ∘ TMP_BV_64_1[22:22]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[21:21] + 0x0₁ ∘ TMP_BV_64_1[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[19:19] + 0x0₁ ∘ TMP_BV_64_1[18:18]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[17:17] + 0x0₁ ∘ TMP_BV_64_1[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[15:15] + 0x0₁ ∘ TMP_BV_64_1[14:14]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[13:13] + 0x0₁ ∘ TMP_BV_64_1[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[11:11] + 0x0₁ ∘ TMP_BV_64_1[10:10]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[9:9] + 0x0₁ ∘ TMP_BV_64_1[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[7:7] + 0x0₁ ∘ TMP_BV_64_1[6:6]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[5:5] + 0x0₁ ∘ TMP_BV_64_1[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[3:3] + 0x0₁ ∘ TMP_BV_64_1[2:2]) + 0x0₂ ∘ (0x0₁ ∘ TMP_BV_64_1[1:1] + 0x0₁ ∘ TMP_BV_64_1[0:0])))))

%cf    : false
%pf    : false
%af    : false
%zf    : TMP_BV_64_2 = 0x0₆₄
%sf    : false
%of    : false

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rax.
  Value TMP_BV_64_1 (8 bytes)
    was read at address %rax.
  Value TMP_BV_64_2 (8 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
