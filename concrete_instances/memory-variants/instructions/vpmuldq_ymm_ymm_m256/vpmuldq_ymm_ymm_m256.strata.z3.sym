code: vpmuldq (%rax), %ymm2, %ymm1

  maybe read:      { %rax %ymm2 }
  must read:       { %rax %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

vpmuldq (%rax), %ymm2, %ymm1: Hindex1(10)
vpmuldq (%rax), %ymm2, %ymm1: Hindex1(10)
Formula:

%ymm1  : (let ((a!1 (concat (bvmul ((_ sign_extend 32) ((_ extract 95 64) %ymm2))
                          ((_ sign_extend 32) ((_ extract 95 64) TMP_BV_256_0)))
                   (bvmul ((_ sign_extend 32) ((_ extract 31 0) %ymm2))
                          ((_ sign_extend 32) ((_ extract 31 0) TMP_BV_256_0))))))
(let ((a!2 (concat (bvmul ((_ sign_extend 32) ((_ extract 159 128) %ymm2))
                          ((_ sign_extend 32)
                            ((_ extract 159 128) TMP_BV_256_0)))
                   a!1)))
  (concat (bvmul ((_ sign_extend 32) ((_ extract 223 192) %ymm2))
                 ((_ sign_extend 32) ((_ extract 223 192) TMP_BV_256_0)))
          a!2)))

Information about memory reads:
  Value TMP_BV_256_0 (32 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
