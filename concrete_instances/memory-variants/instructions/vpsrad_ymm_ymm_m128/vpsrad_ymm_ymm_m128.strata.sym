code: vpsrad (%rax), %ymm2, %ymm1

  maybe read:      { %rax %ymm2 }
  must read:       { %rax %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] sign_shift_right (TMP_BV_128_0[63:0] > 0x1f₆₄ ? 0x20₃₂ : TMP_BV_128_1[31:0])) ∘ ((%ymm2[223:192] sign_shift_right (TMP_BV_128_0[63:0] > 0x1f₆₄ ? 0x20₃₂ : TMP_BV_128_1[31:0])) ∘ ((%ymm2[191:160] sign_shift_right (TMP_BV_128_0[63:0] > 0x1f₆₄ ? 0x20₃₂ : TMP_BV_128_1[31:0])) ∘ (%ymm2[159:128] sign_shift_right (TMP_BV_128_0[63:0] > 0x1f₆₄ ? 0x20₃₂ : TMP_BV_128_1[31:0])))) ∘ ((%ymm2[127:96] sign_shift_right (TMP_BV_128_2[63:0] > 0x1f₆₄ ? 0x20₃₂ : TMP_BV_128_3[31:0])) ∘ ((%ymm2[95:64] sign_shift_right (TMP_BV_128_2[63:0] > 0x1f₆₄ ? 0x20₃₂ : TMP_BV_128_3[31:0])) ∘ ((%ymm2[63:32] sign_shift_right (TMP_BV_128_2[63:0] > 0x1f₆₄ ? 0x20₃₂ : TMP_BV_128_3[31:0])) ∘ (%ymm2[31:0] sign_shift_right (TMP_BV_128_2[63:0] > 0x1f₆₄ ? 0x20₃₂ : TMP_BV_128_3[31:0])))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rax.
  Value TMP_BV_128_1 (16 bytes)
    was read at address %rax.
  Value TMP_BV_128_2 (16 bytes)
    was read at address %rax.
  Value TMP_BV_128_3 (16 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
