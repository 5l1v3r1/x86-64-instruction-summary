code: rcrw %cl, (%rax)

  maybe read:      { %rax %cl %cf }
  must read:       { %rax %cl %cf }
  maybe write:     { %cf %of }
  must write:      { }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

rcrw %cl, (%rax): Hindex8(10)
rcrw %cl, (%rax): Hindex8(10)
Formula:

%cf    : (let ((a!1 (bvurem (concat #b000000000 (bvand ((_ extract 7 0) %rcx) #x1f))
                   #b00000000000010001)))
(let ((a!2 ((_ extract 16 16)
             (ext_rotate_right (concat (ite %cf #b1 #b0) TMP_BV_16_0) a!1))))
  (= a!2 #b1)))
%of    : (let ((a!1 (bvurem (concat #b000000000 (bvand ((_ extract 7 0) %rcx) #x1f))
                   #b00000000000010001)))
(let ((a!2 ((_ extract 15 15)
             (ext_rotate_right (concat (ite %cf #b1 #b0) TMP_BV_16_0) a!1)))
      (a!3 ((_ extract 14 14)
             (ext_rotate_right (concat (ite %cf #b1 #b0) TMP_BV_16_0) a!1)))
      (a!4 (and (not (= ((_ extract 7 0) a!1) #x00)) %of))
      (a!5 (not (not (= ((_ extract 7 0) a!1) #x00)))))
(let ((a!6 (and (not (= ((_ extract 7 0) a!1) #x01))
                (or a!4 (and a!5 TMP_BOOL_0)))))
  (or (and (= ((_ extract 7 0) a!1) #x01) (xor (= a!2 #b1) (= a!3 #b1))) a!6))))

Information about memory reads:
  Value TMP_BV_16_0 (2 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax was updated to
    (let ((a!1 (bvurem (concat #b000000000 (bvand ((_ extract 7 0) %rcx) #x1f))
                   #b00000000000010001)))
  ((_ extract 15 0)
    (ext_rotate_right (concat (ite %cf #b1 #b0) TMP_BV_16_0) a!1))) (2 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv
    (and (not sigfpe) (not sigbus) false)
    (and (not sigfpe) (not sigbus) false))
