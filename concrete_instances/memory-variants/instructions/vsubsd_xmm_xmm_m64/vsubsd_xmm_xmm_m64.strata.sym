code: vsubsd (%rax), %xmm2, %xmm1

  maybe read:      { %rax %xmm2 }
  must read:       { %rax %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Opcode: vsubsd_xmm_xmm_xmm Reason: 1
Opcode: vsubsd_xmm_xmm_m64 Reason: 4
vsubsd (%rax), %xmm2, %xmm1: Hindex0(10)
Opcode: vsubsd_xmm_xmm_xmm Reason: 1
Opcode: vsubsd_xmm_xmm_m64 Reason: 4
vsubsd (%rax), %xmm2, %xmm1: Hindex0(10)
callq .move_128_64_xmm2_xmm8_xmm9: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
vsubpd %ymm7, %ymm1, %ymm1: Hindex0(9)
callq .move_128_032_xmm1_r10d_r11d_r12d_r13d: Hindex8(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movq %r10, %rbx: Hindex5(9)
callq .move_128_064_xmm2_r10_r11: Hindex8(9)
vzeroall : Hindex1(9)
movq %r8, %r11: Hindex5(9)
callq .move_064_128_r10_r11_xmm1: Hindex8(9)
Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ sub_double(%ymm2[63:0], TMP_BV_64_0))

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
