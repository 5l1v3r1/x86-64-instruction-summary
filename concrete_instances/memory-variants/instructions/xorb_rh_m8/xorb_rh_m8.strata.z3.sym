code: xorb (%rbx), %ah

  maybe read:      { %ah %rbx }
  must read:       { %ah %rbx }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

xorb (%rbx), %ah: Hindex0(10)
xorb (%rbx), %ah: Hindex0(10)
movq $0x4, %rdi: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcb %al, %al: Hindex2(9)
adcb %bl, %bl: Hindex2(9)
callq .set_szp_for_bl: Hindex8(9)
xorq %r8, %r8: Hindex1(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
callq .read_cf_into_rcx: Hindex8(9)
movb %cl, %ah: Hindex5(9)
movswq %bx, %rdx: Hindex5(9)
xorq %rbp, %rdx: Hindex1(9)
movslq %edx, %rbx: Hindex5(9)
callq .set_szp_for_bl: Hindex8(9)
xorq %rax, %rax: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %ax: Hindex2(9)
popcntq %rax, %rbx: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
xorq %rcx, %rcx: Hindex1(9)
callq .read_sf_into_rbx: Hindex8(9)
movb %ah, %bl: Hindex5(9)
movq $0x0, %rbx: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
movsbq %cl, %rdi: Hindex5(9)
adcb %dil, %bl: Hindex2(9)
movslq %r12d, %rdx: Hindex5(9)
callq .move_016_008_dx_r8b_r9b: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movb %dl, %ah: Hindex5(9)
callq .move_r9b_to_byte_6_of_rbx: Hindex8(9)
popcntq %rdx, %r9: Hindex1(9)
adcb %sil, %bl: Hindex2(9)
movslq %ebx, %rbx: Hindex5(9)
adcl %ebx, %ebx: Hindex2(9)
Formula:

%rax   : (concat (concat ((_ extract 63 16) %rax)
                (bvxor TMP_BV_8_0 ((_ extract 15 8) %rax)))
        ((_ extract 7 0) %rax))

%cf    : false
%pf    : (let ((a!1 (xor (= (bvxor ((_ extract 0 0) TMP_BV_8_1) ((_ extract 8 8) %rax))
                   #b1)
                (= (bvxor ((_ extract 1 1) TMP_BV_8_2) ((_ extract 9 9) %rax))
                   #b1)
                (= (bvxor ((_ extract 2 2) TMP_BV_8_3) ((_ extract 10 10) %rax))
                   #b1)
                (= (bvxor ((_ extract 3 3) TMP_BV_8_4) ((_ extract 11 11) %rax))
                   #b1)
                (= (bvxor ((_ extract 4 4) TMP_BV_8_5) ((_ extract 12 12) %rax))
                   #b1)
                (= (bvxor ((_ extract 5 5) TMP_BV_8_6) ((_ extract 13 13) %rax))
                   #b1)
                (= (bvxor ((_ extract 6 6) TMP_BV_8_7) ((_ extract 14 14) %rax))
                   #b1)
                (= (bvxor ((_ extract 7 7) TMP_BV_8_8) ((_ extract 15 15) %rax))
                   #b1))))
  (not a!1))
%af    : TMP_BOOL_13
%zf    : (= (bvxor TMP_BV_8_0 ((_ extract 15 8) %rax)) #x00)
%sf    : (= (bvxor ((_ extract 7 7) TMP_BV_8_9) ((_ extract 15 15) %rax)) #b1)
%of    : false

Information about memory reads:
  Value TMP_BV_8_0 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_1 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_2 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_3 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_4 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_5 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_6 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_7 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_8 (1 bytes)
    was read at address %rbx.
  Value TMP_BV_8_9 (1 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
