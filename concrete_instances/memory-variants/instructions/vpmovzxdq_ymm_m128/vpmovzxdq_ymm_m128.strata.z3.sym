code: vpmovzxdq (%rbx), %ymm1

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

vpmovzxdq (%rbx), %ymm1: Hindex0(10)
vpmovzxdq (%rbx), %ymm1: Hindex0(10)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_byte_5_of_ymm1_to_r9b: Hindex8(9)
callq .move_064_128_r8_r9_xmm2: Hindex8(9)
callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11: Hindex8(9)
callq .move_64_128_xmm8_xmm9_xmm1: Hindex8(9)
callq .move_128_64_xmm1_xmm12_xmm13: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
callq .move_128_032_xmm1_r10d_r11d_r12d_r13d: Hindex8(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movq %r10, %rbx: Hindex5(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r10_r11: Hindex8(9)
vzeroall : Hindex1(9)
movq %r10, %r11: Hindex5(9)
callq .move_064_128_r10_r11_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
vzeroall : Hindex1(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
callq .move_128_64_xmm2_xmm8_xmm9: Hindex8(9)
callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1: Hindex8(9)
callq .move_128_064_xmm3_r10_r11: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
movq %r9, %r10: Hindex5(9)
callq .move_064_128_r10_r11_xmm1: Hindex8(9)
callq .move_128_064_xmm3_r10_r11: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
orq %r9, %r11: Hindex1(9)
orq %r8, %r10: Hindex1(9)
callq .move_064_128_r10_r11_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
vminps %ymm2, %ymm2, %ymm1: Hindex0(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
callq .move_128_064_xmm2_r12_r13: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r12_r13_xmm1: Hindex8(9)
vrcpps %ymm1, %ymm10: Hindex0(9)
callq .move_128_256_xmm10_xmm11_ymm1: Hindex8(9)
callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11: Hindex8(9)
callq .move_128_064_xmm2_r10_r11: Hindex8(9)
vzeroall : Hindex1(9)
callq .move_064_128_r10_r11_xmm3: Hindex8(9)
callq .move_256_128_ymm3_xmm12_xmm13: Hindex8(9)
callq .move_128_256_xmm12_xmm13_ymm1: Hindex8(9)
callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1: Hindex8(9)
callq .move_128_256_xmm12_xmm13_ymm1: Hindex8(9)
Formula:

%ymm1  : (let ((a!1 (concat (concat (concat #x00000000 ((_ extract 127 96) TMP_BV_128_0))
                           #x00000000)
                   ((_ extract 95 64) TMP_BV_128_1))))
  (concat a!1
          (concat (concat #x00000000 ((_ extract 63 32) TMP_BV_128_2))
                  (concat #x00000000 ((_ extract 31 0) TMP_BV_128_3)))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_1 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_2 (16 bytes)
    was read at address %rbx.
  Value TMP_BV_128_3 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
