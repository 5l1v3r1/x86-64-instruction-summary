code: blsil (%rax), %ebx

  maybe read:      { %rax %ebx }
  must read:       { %rax %ebx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

blsil (%rax), %ebx: Hindex0(10)
blsil (%rax), %ebx: Hindex0(10)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movq $0xffffffffffffffff, %rax: Hindex5(9)
orq %rbx, %rbx: Hindex1(9)
adcq %rcx, %rbx: Hindex2(9)
movslq %edx, %rbx: Hindex5(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movswq %cx, %r11: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
orq %r11, %r8: Hindex1(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .set_szp_for_ebx: Hindex8(9)
callq .move_032_016_ecx_r12w_r13w: Hindex8(9)
callq .move_016_032_r12w_r13w_ecx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movq $0xffffffffffffffff, %rax: Hindex5(9)
orq %rbx, %rbx: Hindex1(9)
adcq %rcx, %rbx: Hindex2(9)
callq .move_byte_5_of_rbx_to_r9b: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movq $0x8, %rbx: Hindex5(9)
callq .move_032_016_ebx_r10w_r11w: Hindex8(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
callq .read_pf_into_rbx: Hindex8(9)
adcb %cl, %bl: Hindex2(9)
movq %rax, %rbx: Hindex5(9)
adcb %bl, %bl: Hindex2(9)
callq .set_szp_for_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movq $0xfffffffffffffff9, %rcx: Hindex5(9)
callq .read_zf_into_rbx: Hindex8(9)
callq .read_cf_into_rbx: Hindex8(9)
movb %bl, %ah: Hindex5(9)
callq .move_064_032_rbx_r12d_r13d: Hindex8(9)
callq .move_032_064_r12d_r13d_rbx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
callq .read_zf_into_rbx: Hindex8(9)
callq .clear_cf: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movsbq %r15b, %rcx: Hindex5(9)
adcb %cl, %r13b: Hindex2(9)
movslq %r13d, %rbx: Hindex5(9)
cmoveq %rcx, %rbx: Hindex3(9)
movb %bl, %bh: Hindex5(9)
movswq %bx, %r12: Hindex5(9)
movslq %edx, %rbx: Hindex5(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
movswq %cx, %r11: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
orq %r11, %r8: Hindex1(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .set_szp_for_ebx: Hindex8(9)
callq .move_032_016_ecx_r12w_r13w: Hindex8(9)
callq .move_016_032_r12w_r13w_ecx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
xorq %rcx, %rbx: Hindex1(9)
callq .set_szp_for_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
callq .read_sf_into_rcx: Hindex8(9)
callq .move_032_016_ecx_r12w_r13w: Hindex8(9)
callq .move_016_032_r12w_r13w_edx: Hindex8(9)
callq .move_032_016_edx_r10w_r11w: Hindex8(9)
xorq %rax, %rax: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %ax: Hindex2(9)
popcntq %rax, %rbx: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
callq .read_zf_into_rbx: Hindex8(9)
sarq %cl, %rbx: Hindex7(9)
movq $0x20, %rbx: Hindex5(9)
callq .move_016_008_cx_r12b_r13b: Hindex8(9)
callq .move_008_016_r12b_r13b_bx: Hindex8(9)
movq $0xffffffffffffffff, %rcx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
callq .set_szp_for_rbx: Hindex8(9)
callq .move_016_008_bx_r10b_r11b: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
callq .move_008_016_r10b_r11b_cx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
callq .set_of: Hindex8(9)
callq .read_of_into_rbx: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movsbq %cl, %r10: Hindex5(9)
callq .move_032_064_r10d_r11d_rbx: Hindex8(9)
movsbq %bl, %rbp: Hindex5(9)
movsbq %bpl, %rbx: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcb %al, %al: Hindex2(9)
adcb %bl, %bl: Hindex2(9)
callq .set_szp_for_bl: Hindex8(9)
Formula:

%rbx   : (let ((a!1 ((_ extract 31 0)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_2))))))
  (bvxor (concat #x00000000 TMP_BV_32_0)
         (concat #x00000000 (bvxor (bvor TMP_BV_32_1 a!1) a!1 TMP_BV_32_3))))

%cf    : (let ((a!1 ((_ extract 31 0)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_2)))))
      (a!4 ((_ extract 7 0)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_2))))))
(let ((a!2 (ite (= (bvxor TMP_BV_32_0 (bvor TMP_BV_32_1 a!1) a!1 TMP_BV_32_3)
                   #x00000000)
                #x00000001
                #x00000000)))
(let ((a!3 ((_ extract 7 0)
             (bvadd (ite (= a!2 #x00000000) #b000000001 #b000000000)
                    (ite (= a!2 #x00000000) #b000000001 #b000000000)))))
(let ((a!5 (ite (= a!3 #x00)
                (bvxor ((_ extract 7 0) TMP_BV_32_4)
                       (bvor ((_ extract 7 0) TMP_BV_32_5) a!4)
                       a!4
                       ((_ extract 7 0) TMP_BV_32_6))
                #xf9))
      (a!6 (ite (= a!3 #x00)
                (bvxor ((_ extract 7 0) TMP_BV_32_7)
                       (bvor ((_ extract 7 0) TMP_BV_32_8) a!4)
                       a!4
                       ((_ extract 7 0) TMP_BV_32_9))
                #xf9)))
(let ((a!7 (bvashr (concat ((_ sign_extend 48) (concat a!5 a!6)) #b0)
                   (concat #b000000000000000000000000000000000000000000000000000000000
                           #x01))))
(let ((a!8 ((_ extract 8 8)
             (bvadd (concat #b0 ((_ extract 8 1) a!7))
                    (concat #b0 ((_ extract 8 1) a!7))))))
  (= a!8 #b1)))))))
%pf    : TMP_BOOL_38
%af    : TMP_BOOL_39
%zf    : (let ((a!1 ((_ extract 31 0)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_2))))))
  (= (bvxor TMP_BV_32_0 (bvor TMP_BV_32_1 a!1) a!1 TMP_BV_32_3) #x00000000))
%sf    : (let ((a!1 ((_ extract 31 31)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_2))))))
  (= (bvxor ((_ extract 31 31) TMP_BV_32_10)
            (bvor ((_ extract 31 31) TMP_BV_32_11) a!1)
            a!1
            ((_ extract 31 31) TMP_BV_32_12))
     #b1))
%of    : (let ((a!1 ((_ extract 31 0)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_2)))))
      (a!4 ((_ extract 7 0)
             (bvadd (concat #b0 #xffffffffffffffff)
                    (concat #b0 (concat #x00000000 TMP_BV_32_2))))))
(let ((a!2 (ite (= (bvxor TMP_BV_32_0 (bvor TMP_BV_32_1 a!1) a!1 TMP_BV_32_3)
                   #x00000000)
                #x00000001
                #x00000000)))
(let ((a!3 ((_ extract 7 0)
             (bvadd (ite (= a!2 #x00000000) #b000000001 #b000000000)
                    (ite (= a!2 #x00000000) #b000000001 #b000000000)))))
(let ((a!5 (ite (= a!3 #x00)
                (bvxor ((_ extract 7 0) TMP_BV_32_4)
                       (bvor ((_ extract 7 0) TMP_BV_32_5) a!4)
                       a!4
                       ((_ extract 7 0) TMP_BV_32_6))
                #xf9))
      (a!6 (ite (= a!3 #x00)
                (bvxor ((_ extract 7 0) TMP_BV_32_7)
                       (bvor ((_ extract 7 0) TMP_BV_32_8) a!4)
                       a!4
                       ((_ extract 7 0) TMP_BV_32_9))
                #xf9)))
(let ((a!7 (bvashr (concat ((_ sign_extend 48) (concat a!5 a!6)) #b0)
                   (concat #b000000000000000000000000000000000000000000000000000000000
                           #x01))))
(let ((a!8 ((_ extract 7 7)
             (bvadd (concat #b0 ((_ extract 8 1) a!7))
                    (concat #b0 ((_ extract 8 1) a!7))))))
(let ((a!9 (not (= (= ((_ extract 8 8) a!7) #b1) (= a!8 #b1)))))
  (and (= (= ((_ extract 8 8) a!7) #b1) (= ((_ extract 8 8) a!7) #b1)) a!9))))))))

Information about memory reads:
  Value TMP_BV_32_0 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_1 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_2 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_3 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_4 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_5 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_6 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_7 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_8 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_9 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_10 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_11 (4 bytes)
    was read at address %rax.
  Value TMP_BV_32_12 (4 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
