code: vtestps (%rax), %xmm1

  maybe read:      { %rax %xmm1 }
  must read:       { %rax %xmm1 }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

vtestps (%rax), %xmm1: Hindex2(10)
vtestps (%rax), %xmm1: Hindex2(10)
Formula:

%cf    : (let ((a!1 (= (bvand (bvnot ((_ extract 31 31) %ymm1))
                     ((_ extract 31 31) TMP_BV_128_0))
              #b0))
      (a!2 (= (bvand (bvnot ((_ extract 63 63) %ymm1))
                     ((_ extract 63 63) TMP_BV_128_0))
              #b0))
      (a!3 (= (bvand (bvnot ((_ extract 95 95) %ymm1))
                     ((_ extract 95 95) TMP_BV_128_0))
              #b0))
      (a!4 (= (bvand (bvnot ((_ extract 127 127) %ymm1))
                     ((_ extract 127 127) TMP_BV_128_0))
              #b0)))
  (and a!1 a!2 a!3 a!4))
%pf    : false
%af    : false
%zf    : (and (= (bvand ((_ extract 31 31) %ymm1) ((_ extract 31 31) TMP_BV_128_0)) #b0)
     (= (bvand ((_ extract 63 63) %ymm1) ((_ extract 63 63) TMP_BV_128_0)) #b0)
     (= (bvand ((_ extract 95 95) %ymm1) ((_ extract 95 95) TMP_BV_128_0)) #b0)
     (= (bvand ((_ extract 127 127) %ymm1) ((_ extract 127 127) TMP_BV_128_0))
        #b0))
%sf    : false
%of    : false

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
