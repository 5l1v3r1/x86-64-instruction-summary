code: incq (%rbx)

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %pf %af %zf %sf %of }
  must write:      { %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

incq (%rbx): Hindex0(10)
incq (%rbx): Hindex0(10)
callq .move_128_064_xmm3_r12_r13: Hindex8(9)
callq .move_128_064_xmm2_r8_r9: Hindex8(9)
vzeroall : Hindex1(9)
xorq %r13, %r9: Hindex1(9)
xorq %r12, %r8: Hindex1(9)
callq .move_064_128_r8_r9_xmm1: Hindex8(9)
vsubpd %ymm7, %ymm7, %ymm1: Hindex0(9)
callq .move_128_064_xmm1_r8_r9: Hindex8(9)
movq $0xffffffffffffffff, %rbp: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
adcw %cx, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
movq $0xffffffffffffffff, %r14: Hindex5(9)
movswq %bx, %r12: Hindex5(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
movswq %bx, %r12: Hindex5(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
callq .set_szp_for_bx: Hindex8(9)
callq .read_sf_into_rbx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
xorq %rbx, %r12: Hindex1(9)
movswq %r12w, %rbx: Hindex5(9)
callq .set_szp_for_bx: Hindex8(9)
movslq %r12d, %rbx: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
callq .set_cf: Hindex8(9)
adcw %ax, %bx: Hindex2(9)
callq .set_szp_for_bx: Hindex8(9)
callq .set_cf: Hindex8(9)
callq .read_of_into_rcx: Hindex8(9)
callq .read_sf_into_rbx: Hindex8(9)
callq .move_016_008_cx_r8b_r9b: Hindex8(9)
movswq %bx, %r12: Hindex5(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
callq .set_szp_for_bx: Hindex8(9)
callq .read_sf_into_rbx: Hindex8(9)
callq .move_008_016_r8b_r9b_bx: Hindex8(9)
xorq %rbx, %r12: Hindex1(9)
movswq %r12w, %rbx: Hindex5(9)
callq .set_szp_for_bx: Hindex8(9)
movslq %ecx, %rdx: Hindex5(9)
movb %dl, %ah: Hindex5(9)
callq .read_cf_into_rcx: Hindex8(9)
movsbq %cl, %rbx: Hindex5(9)
orq %rcx, %rbx: Hindex1(9)
movq $0x40, %rbx: Hindex5(9)
movb %ah, %bl: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
callq .read_cf_into_rcx: Hindex8(9)
movb %cl, %ah: Hindex5(9)
movswq %bx, %rdx: Hindex5(9)
xorq %rbp, %rdx: Hindex1(9)
movslq %edx, %rbx: Hindex5(9)
callq .set_szp_for_bl: Hindex8(9)
orq %rbx, %rbx: Hindex1(9)
adcq %rcx, %rbx: Hindex2(9)
Formula:

%pf    : (let ((a!1 (= ((_ extract 0 0)
                (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
              #b1))
      (a!2 (= ((_ extract 1 1)
                (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
              #b1))
      (a!3 (= ((_ extract 2 2)
                (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
              #b1))
      (a!4 (= ((_ extract 3 3)
                (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
              #b1))
      (a!5 (= ((_ extract 4 4)
                (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
              #b1))
      (a!6 (= ((_ extract 5 5)
                (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
              #b1))
      (a!7 (= ((_ extract 6 6)
                (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
              #b1))
      (a!8 (= ((_ extract 7 7)
                (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
              #b1)))
  (not (xor a!1 a!2 a!3 a!4 a!5 a!6 a!7 a!8)))
%af    : (let ((a!1 ((_ extract 4 4)
             (bvadd #b00001 (concat #b0 ((_ extract 3 0) TMP_BV_64_1))))))
  (= a!1 #b1))
%zf    : (= ((_ extract 63 0)
     (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
   #x0000000000000000)
%sf    : (= ((_ extract 63 63)
     (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
   #b1)
%of    : (let ((a!1 (= ((_ extract 63 63)
                (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0)))
              #b1)))
  (and (= false (= ((_ extract 63 63) TMP_BV_64_2) #b1)) (not (= false a!1))))

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_1 (8 bytes)
    was read at address %rbx.
  Value TMP_BV_64_2 (8 bytes)
    was read at address %rbx.

Information about memory writes:
  Address %rbx was updated to
    ((_ extract 63 0)
  (bvadd (concat #b0 #x0000000000000001) (concat #b0 TMP_BV_64_0))) (8 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
