code: notq (%rax)

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

notq (%rax): Hindex0(10)
notq (%rax): Hindex0(10)
movq $0xfffffffffffffffe, %rdx: Hindex5(9)
xorq %rax, %rax: Hindex1(9)
xorq %rax, %rax: Hindex1(9)
adcb %al, %al: Hindex2(9)
callq .read_zf_into_rcx: Hindex8(9)
adcb %cl, %bl: Hindex2(9)
xorq %rdx, %rbx: Hindex1(9)
Formula:

Information about memory reads:
  Value TMP_BV_64_0 (8 bytes)
    was read at address %rax.

Information about memory writes:
  Address %rax was updated to
    (bvxor TMP_BV_64_0 #xffffffffffffffff) (8 bytes).

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
