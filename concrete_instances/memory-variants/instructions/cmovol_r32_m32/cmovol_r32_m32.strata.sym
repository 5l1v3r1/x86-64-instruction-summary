code: cmovol (%rax), %ebx

  maybe read:      { %rax %of }
  must read:       { %rax %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

cmovol (%rax), %ebx: Hindex0(10)
cmovol (%rax), %ebx: Hindex0(10)
callq .read_of_into_rbx: Hindex8(9)
callq .move_byte_6_of_rbx_to_r9b: Hindex8(9)
callq .move_r9b_to_byte_6_of_rbx: Hindex8(9)
movq $0xffffffffffffffff, %r9: Hindex5(9)
xorq %rcx, %rcx: Hindex1(9)
adcb %r9b, %bl: Hindex2(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
callq .move_064_032_rbx_r12d_r13d: Hindex8(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
cmoveq %rbx, %rcx: Hindex3(9)
movq $0x0, %rbx: Hindex5(9)
movswq %bx, %r10: Hindex5(9)
movslq %ebx, %rbx: Hindex5(9)
callq .move_032_016_ecx_r8w_r9w: Hindex8(9)
callq .move_064_032_rbx_r10d_r11d: Hindex8(9)
movq %r10, %rcx: Hindex5(9)
callq .move_016_032_r8w_r9w_ebx: Hindex8(9)
callq .clear_cf: Hindex8(9)
adcl %ecx, %ebx: Hindex2(9)
Formula:

%rbx   : (concat #x00000000
        (ite (= (ite %of #x00 #xff) #x00) TMP_BV_32_0 ((_ extract 31 0) %rbx)))

Information about memory reads:
  Value TMP_BV_32_0 (4 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
