code: vpcmpeqq (%rax), %ymm2, %ymm1

  maybe read:      { %rax %ymm2 }
  must read:       { %rax %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

vpcmpeqq (%rax), %ymm2, %ymm1: Hindex1(10)
vpcmpeqq (%rax), %ymm2, %ymm1: Hindex1(10)
Formula:

%ymm1  : (let ((a!1 (concat (ite (= ((_ extract 127 64) %ymm2)
                           ((_ extract 127 64) TMP_BV_256_0))
                        #xffffffffffffffff
                        #x0000000000000000)
                   (ite (= ((_ extract 63 0) %ymm2)
                           ((_ extract 63 0) TMP_BV_256_0))
                        #xffffffffffffffff
                        #x0000000000000000))))
(let ((a!2 (concat (ite (= ((_ extract 191 128) %ymm2)
                           ((_ extract 191 128) TMP_BV_256_0))
                        #xffffffffffffffff
                        #x0000000000000000)
                   a!1)))
  (concat (ite (= ((_ extract 255 192) %ymm2)
                  ((_ extract 255 192) TMP_BV_256_0))
               #xffffffffffffffff
               #x0000000000000000)
          a!2)))

Information about memory reads:
  Value TMP_BV_256_0 (32 bytes)
    was read at address %rax.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))
