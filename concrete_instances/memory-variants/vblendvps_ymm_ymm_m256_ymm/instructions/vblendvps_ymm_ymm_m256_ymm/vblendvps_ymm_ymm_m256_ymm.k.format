code: vblendvps %ymm3, (%rbx), %ymm2, %ymm1

  maybe read:      { %rbx %ymm2 %ymm3 }
  must read:       { %rbx %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm3, 0, 1), mi(1, 0)) #then extractMInt( %ymm2, 0, 32) #else extractMInt( TMP_BV_256_0, 0, 32) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm3, 32, 33), mi(1, 0)) #then extractMInt( %ymm2, 32, 64) #else extractMInt( TMP_BV_256_0, 32, 64) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm3, 64, 65), mi(1, 0)) #then extractMInt( %ymm2, 64, 96) #else extractMInt( TMP_BV_256_0, 64, 96) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm3, 96, 97), mi(1, 0)) #then extractMInt( %ymm2, 96, 128) #else extractMInt( TMP_BV_256_0, 96, 128) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm3, 128, 129), mi(1, 0)) #then extractMInt( %ymm2, 128, 160) #else extractMInt( TMP_BV_256_0, 128, 160) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm3, 160, 161), mi(1, 0)) #then extractMInt( %ymm2, 160, 192) #else extractMInt( TMP_BV_256_0, 160, 192) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( %ymm3, 192, 193), mi(1, 0)) #then extractMInt( %ymm2, 192, 224) #else extractMInt( TMP_BV_256_0, 192, 224) #fi), (#ifMInt eqMInt( extractMInt( %ymm3, 224, 225), mi(1, 0)) #then extractMInt( %ymm2, 224, 256) #else extractMInt( TMP_BV_256_0, 224, 256) #fi))))))))

Information about memory reads:
  Value TMP_BV_256_0 (32 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
