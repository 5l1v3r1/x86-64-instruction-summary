code: vpsllq (%rbx), %ymm2, %ymm1

  maybe read:      { %rbx %ymm2 }
  must read:       { %rbx %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 64, 128), mi(64, 63)) #then mi(256, 0) #else concatenateMInt( shiftLeftMInt( extractMInt( %ymm2, 0, 64), uvalueMInt(extractMInt( TMP_BV_128_0, 64, 128))), concatenateMInt( shiftLeftMInt( extractMInt( %ymm2, 64, 128), uvalueMInt(extractMInt( TMP_BV_128_0, 64, 128))), concatenateMInt( shiftLeftMInt( extractMInt( %ymm2, 128, 192), uvalueMInt(extractMInt( TMP_BV_128_0, 64, 128))), shiftLeftMInt( extractMInt( %ymm2, 192, 256), uvalueMInt(extractMInt( TMP_BV_128_0, 64, 128)))))) #fi)

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
