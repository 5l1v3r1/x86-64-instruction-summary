code: pabsb (%rbx), %xmm1

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : concatenateMInt( extractMInt( %ymm1, 0, 128), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 0, 8), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 0, 8))) #else extractMInt( TMP_BV_128_0, 0, 8) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 8, 16), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 8, 16))) #else extractMInt( TMP_BV_128_0, 8, 16) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 16, 24), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 16, 24))) #else extractMInt( TMP_BV_128_0, 16, 24) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 24, 32), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 24, 32))) #else extractMInt( TMP_BV_128_0, 24, 32) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 32, 40), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 32, 40))) #else extractMInt( TMP_BV_128_0, 32, 40) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 40, 48), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 40, 48))) #else extractMInt( TMP_BV_128_0, 40, 48) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 48, 56), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 48, 56))) #else extractMInt( TMP_BV_128_0, 48, 56) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 56, 64), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 56, 64))) #else extractMInt( TMP_BV_128_0, 56, 64) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 64, 72), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 64, 72))) #else extractMInt( TMP_BV_128_0, 64, 72) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 72, 80), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 72, 80))) #else extractMInt( TMP_BV_128_0, 72, 80) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 80, 88), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 80, 88))) #else extractMInt( TMP_BV_128_0, 80, 88) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 88, 96), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 88, 96))) #else extractMInt( TMP_BV_128_0, 88, 96) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 96, 104), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 96, 104))) #else extractMInt( TMP_BV_128_0, 96, 104) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 104, 112), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 104, 112))) #else extractMInt( TMP_BV_128_0, 104, 112) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 112, 120), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 112, 120))) #else extractMInt( TMP_BV_128_0, 112, 120) #fi), (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 120, 128), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( TMP_BV_128_0, 120, 128))) #else extractMInt( TMP_BV_128_0, 120, 128) #fi)))))))))))))))))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
