code: psllw (%rbx), %xmm1

  maybe read:      { %rbx %xmm1 }
  must read:       { %rbx %xmm1 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : concatenateMInt( extractMInt( %ymm1, 0, 128), (#ifMInt ugtMInt( extractMInt( TMP_BV_128_0, 64, 128), mi(64, 15)) #then mi(128, 0) #else concatenateMInt( shiftLeftMInt( extractMInt( %ymm1, 128, 144), uvalueMInt(extractMInt( TMP_BV_128_0, 112, 128))), concatenateMInt( shiftLeftMInt( extractMInt( %ymm1, 144, 160), uvalueMInt(extractMInt( TMP_BV_128_0, 112, 128))), concatenateMInt( shiftLeftMInt( extractMInt( %ymm1, 160, 176), uvalueMInt(extractMInt( TMP_BV_128_0, 112, 128))), concatenateMInt( shiftLeftMInt( extractMInt( %ymm1, 176, 192), uvalueMInt(extractMInt( TMP_BV_128_0, 112, 128))), concatenateMInt( shiftLeftMInt( extractMInt( %ymm1, 192, 208), uvalueMInt(extractMInt( TMP_BV_128_0, 112, 128))), concatenateMInt( shiftLeftMInt( extractMInt( %ymm1, 208, 224), uvalueMInt(extractMInt( TMP_BV_128_0, 112, 128))), concatenateMInt( shiftLeftMInt( extractMInt( %ymm1, 224, 240), uvalueMInt(extractMInt( TMP_BV_128_0, 112, 128))), shiftLeftMInt( extractMInt( %ymm1, 240, 256), uvalueMInt(extractMInt( TMP_BV_128_0, 112, 128)))))))))) #fi))

Information about memory reads:
  Value TMP_BV_128_0 (16 bytes)
    was read at address %rbx.

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : (sigsegv orBool (((notBool sigfpe) andBool (notBool sigbus)) andBool FALSE))
