code: vpermilps $0x0, %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 0, 2), mi(2, 0)) #then extractMInt( %ymm2, 224, 256) #else (#ifMInt eqMInt( extractMInt( Imm8, 0, 2), mi(2, 1)) #then extractMInt( %ymm2, 192, 224) #else (#ifMInt eqMInt( extractMInt( Imm8, 0, 2), mi(2, 2)) #then extractMInt( %ymm2, 160, 192) #else extractMInt( %ymm2, 128, 160) #fi) #fi) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 2, 4), mi(2, 0)) #then extractMInt( %ymm2, 224, 256) #else (#ifMInt eqMInt( extractMInt( Imm8, 2, 4), mi(2, 1)) #then extractMInt( %ymm2, 192, 224) #else (#ifMInt eqMInt( extractMInt( Imm8, 2, 4), mi(2, 2)) #then extractMInt( %ymm2, 160, 192) #else extractMInt( %ymm2, 128, 160) #fi) #fi) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 4, 6), mi(2, 0)) #then extractMInt( %ymm2, 224, 256) #else (#ifMInt eqMInt( extractMInt( Imm8, 4, 6), mi(2, 1)) #then extractMInt( %ymm2, 192, 224) #else (#ifMInt eqMInt( extractMInt( Imm8, 4, 6), mi(2, 2)) #then extractMInt( %ymm2, 160, 192) #else extractMInt( %ymm2, 128, 160) #fi) #fi) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 6, 8), mi(2, 0)) #then extractMInt( %ymm2, 224, 256) #else (#ifMInt eqMInt( extractMInt( Imm8, 6, 8), mi(2, 1)) #then extractMInt( %ymm2, 192, 224) #else (#ifMInt eqMInt( extractMInt( Imm8, 6, 8), mi(2, 2)) #then extractMInt( %ymm2, 160, 192) #else extractMInt( %ymm2, 128, 160) #fi) #fi) #fi)))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
