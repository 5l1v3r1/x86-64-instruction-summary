code: btcl $0x0, %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %cf }
  must write:      { %rbx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : concatenateMInt( mi(32, 0), xorMInt( extractMInt( %rbx, 32, 64), shiftLeftMInt( mi(32, 1), uvalueMInt(mi(32, svalueMInt(andMInt( Imm8, mi(8, 31))))))))

%cf    : extractMInt( lshrMInt( extractMInt( %rbx, 32, 64), uvalueMInt(mi(32, svalueMInt(andMInt( Imm8, mi(8, 31)))))), 31, 32)
%pf    : (#ifMInt TMP_BOOL_3 #then mi(1, 1) #else mi(1, 0) #fi)
%af    : (#ifMInt TMP_BOOL_2 #then mi(1, 1) #else mi(1, 0) #fi)
%sf    : (#ifMInt TMP_BOOL_1 #then mi(1, 1) #else mi(1, 0) #fi)
%of    : (#ifMInt TMP_BOOL_0 #then mi(1, 1) #else mi(1, 0) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
