code: vperm2i128 $0x0, %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (#ifMInt eqMInt( extractMInt( Imm8, 0, 1), mi(1, 1)) #then (#ifMInt eqMInt( extractMInt( Imm8, 4, 5), mi(1, 1)) #then concatenateMInt( mi(128, 0), mi(128, 0)) #else concatenateMInt( mi(128, 0), (#ifMInt eqMInt( extractMInt( Imm8, 6, 8), mi(2, 0)) #then extractMInt( %ymm2, 128, 256) #else (#ifMInt eqMInt( extractMInt( Imm8, 6, 8), mi(2, 1)) #then extractMInt( %ymm2, 0, 128) #else (#ifMInt eqMInt( extractMInt( Imm8, 6, 8), mi(2, 2)) #then extractMInt( %ymm3, 128, 256) #else extractMInt( %ymm3, 0, 128) #fi) #fi) #fi)) #fi) #else (#ifMInt eqMInt( extractMInt( Imm8, 4, 5), mi(1, 1)) #then concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 2, 4), mi(2, 0)) #then extractMInt( %ymm2, 128, 256) #else (#ifMInt eqMInt( extractMInt( Imm8, 2, 4), mi(2, 1)) #then extractMInt( %ymm2, 0, 128) #else (#ifMInt eqMInt( extractMInt( Imm8, 2, 4), mi(2, 2)) #then extractMInt( %ymm3, 128, 256) #else extractMInt( %ymm3, 0, 128) #fi) #fi) #fi), mi(128, 0)) #else concatenateMInt( (#ifMInt eqMInt( extractMInt( Imm8, 2, 4), mi(2, 0)) #then extractMInt( %ymm2, 128, 256) #else (#ifMInt eqMInt( extractMInt( Imm8, 2, 4), mi(2, 1)) #then extractMInt( %ymm2, 0, 128) #else (#ifMInt eqMInt( extractMInt( Imm8, 2, 4), mi(2, 2)) #then extractMInt( %ymm3, 128, 256) #else extractMInt( %ymm3, 0, 128) #fi) #fi) #fi), (#ifMInt eqMInt( extractMInt( Imm8, 6, 8), mi(2, 0)) #then extractMInt( %ymm2, 128, 256) #else (#ifMInt eqMInt( extractMInt( Imm8, 6, 8), mi(2, 1)) #then extractMInt( %ymm2, 0, 128) #else (#ifMInt eqMInt( extractMInt( Imm8, 6, 8), mi(2, 2)) #then extractMInt( %ymm3, 128, 256) #else extractMInt( %ymm3, 0, 128) #fi) #fi) #fi)) #fi) #fi)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
